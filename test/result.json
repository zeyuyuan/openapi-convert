{
  "models": [
    {
      "folderName": "Common",
      "files": [
        {
          "fileName": "OutSiteUrlWhiteList",
          "content": "\n\n export interface OutSiteUrlWhiteList {data: string[];}"
        },
        {
          "fileName": "ChangeType",
          "content": "export type ChangeType = string;"
        },
        {
          "fileName": "AppSource",
          "content": "export type AppSource = string;"
        },
        {
          "fileName": "Operator",
          "content": "export type Operator = string;"
        },
        {
          "fileName": "TrendScalar",
          "content": "\n\n export interface TrendScalar {timestamp: number;value: number;}"
        },
        {
          "fileName": "TokenPriceInfo",
          "content": "\n\n export interface TokenPriceInfo {price: string;is_stable_coin: boolean;}"
        },
        {
          "fileName": "DateRange",
          "content": "\n\n export interface DateRange {from: number;to: number;}"
        },
        {
          "fileName": "PointCountType",
          "content": "export type PointCountType = string;"
        },
        {
          "fileName": "RangeConfig",
          "content": "import { RangeConfigItem } from \"../Common/RangeConfigItem.ts\"; export type RangeConfig = RangeConfigItem[];"
        },
        {
          "fileName": "RangeConfigItem",
          "content": "\n\n export interface RangeConfigItem {from?: string;to?: string;value: string;}"
        },
        {
          "fileName": "MediaType",
          "content": "export type MediaType = string;"
        },
        {
          "fileName": "SeasonType",
          "content": "export type SeasonType = string;"
        },
        {
          "fileName": "ResponseError",
          "content": "\n\n export interface ResponseError {code: string;message: string;}"
        },
        {
          "fileName": "ErrorData",
          "content": "import { ErrorItem } from \"../Common/ErrorItem.ts\"; export type ErrorData = ErrorItem[][];"
        },
        {
          "fileName": "ErrorItem",
          "content": "\n\n export interface ErrorItem {name: string;message: string;code?: string;}"
        },
        {
          "fileName": "OptionItem",
          "content": "\n\n export interface OptionItem {label: string;value: todo unknown undefined;icon?: string;}"
        },
        {
          "fileName": "ChainType",
          "content": "export type ChainType = string;"
        },
        {
          "fileName": "Country",
          "content": "\n\n export interface Country {name: string;symbol: string;}"
        },
        {
          "fileName": "AddNftCollectionMetadataParams",
          "content": "import { NftType } from \"../Common/NftType.ts\";\n\n export interface AddNftCollectionMetadataParams {name: string;token_address: string;symbol: string;nft_type: NftType;chain: string;}"
        },
        {
          "fileName": "AddTokenMetadataParams",
          "content": "\n\n export interface AddTokenMetadataParams {name: string;token_address: string;symbol: string;decimals: number;chain?: string;fake_token: boolean;}"
        },
        {
          "fileName": "ErrorCode",
          "content": "export type ErrorCode = string;"
        },
        {
          "fileName": "DefaultNftInfo",
          "content": "import { Chain } from \"../Common/Chain.ts\";import { NftType } from \"../Common/NftType.ts\";\n\n export interface DefaultNftInfo {nft_name: string;contract_addr: string;chain_name: Chain;nft_type: NftType;}"
        },
        {
          "fileName": "DefaultTokenInfo",
          "content": "\n\n export interface DefaultTokenInfo {token_view: string;token_name: string;token_logo: string;chain_name: string;contract_addr: string;decimals: number;fake_token: boolean;}"
        },
        {
          "fileName": "PluginConfigInfo",
          "content": "import { TokenInfo } from \"../Common/TokenInfo.ts\";\n\n export interface PluginConfigInfo {contract_address: string;rpc_url: string;chain_id: string;chain_id_hex: string;explorer_url: string;chain_name: string;chain_symbol: string;default_token_address: string;native_token: TokenInfo;}"
        },
        {
          "fileName": "NftCollectionInfo",
          "content": "import { Chain } from \"../Common/Chain.ts\";import { NftType } from \"../Common/NftType.ts\";\n\n export interface NftCollectionInfo {name: string;symbol: string;chain: Chain;token_address?: string;contract_type?: NftType;}"
        },
        {
          "fileName": "NftType",
          "content": "export type NftType = string;"
        },
        {
          "fileName": "ImageType",
          "content": "export type ImageType = string;"
        },
        {
          "fileName": "TokenAddress",
          "content": "import { Chain } from \"../Common/Chain.ts\";\n\n export interface TokenAddress {chain: Chain;address: string;with_usdt_price?: boolean;}"
        },
        {
          "fileName": "Page",
          "content": "\n\n export interface Page {page_no: number;size: number;}"
        },
        {
          "fileName": "TokenInfo",
          "content": "import { Chain } from \"../Common/Chain.ts\";\n\n export interface TokenInfo {id: number;chain: Chain;address: string;name: string;symbol: string;decimals: number;logo: string;thumbnail: string;fake_token: boolean;usdt_price?: string;}"
        },
        {
          "fileName": "TokenType",
          "content": "export type TokenType = string;"
        },
        {
          "fileName": "Chain",
          "content": "export type Chain = string;"
        },
        {
          "fileName": "Total",
          "content": "export type Total = number;"
        },
        {
          "fileName": "ChainInfo",
          "content": "import { Chain } from \"../Common/Chain.ts\";import { ChainType } from \"../Common/ChainType.ts\";import { GasCoveredByType } from \"../Reward/GasCoveredByType.ts\";\n\n export interface ChainInfo {id: number;name: Chain;chain_type: ChainType;icon: string;label: string;contract: string;nft_contract: string;old_nft_contract: string;is_support_opensea: boolean;rpc_url: string;explorer_url: string;coin_name: string;coin_symbol: string;coin_decimals: number;taskonfund_token_contract: string;taskonfund_nft_contract: string;airdrop_contract: string;gas_covered_by: GasCoveredByType;factory_contract_address: string;controller_contract_address: string;entry_contract_address: string;gas_station_contract: string;}"
        }
      ]
    },
    {
      "folderName": "TaskOnCommunity",
      "files": [
        {
          "fileName": "GetUserPointsHistoryRequest",
          "content": "import { Page } from \"../Common/Page.ts\";\n\n export interface GetUserPointsHistoryRequest {community_id?: number;community_key?: string;user_id: number;page: Page;}"
        },
        {
          "fileName": "NotMergedMember",
          "content": "\n\n export interface NotMergedMember {user_id: string;xp: string;name: string;avatar: string;eth_address: string;address: string;twitter_id: string;twitter_user_name: string;discord_handle: string;discord_id: string;connect_wallet: string;number_of_quests: string;email: string;}"
        },
        {
          "fileName": "CommunityNameIsDuplicateResp",
          "content": "\n\n export interface CommunityNameIsDuplicateResp {valid: boolean;name: string;}"
        },
        {
          "fileName": "CommunityTodo",
          "content": "import { CommunityTodoType } from \"../TaskOnCommunity/CommunityTodoType.ts\";\n\n export interface CommunityTodo {type: CommunityTodoType;community_id: number;done: boolean;}"
        },
        {
          "fileName": "CommunityTodoType",
          "content": "export type CommunityTodoType = string;"
        },
        {
          "fileName": "GetSnsMemberCountsResponse",
          "content": "import { SnsMemberCount } from \"../TaskOnCommunity/SnsMemberCount.ts\";\n\n export interface GetSnsMemberCountsResponse {member_counts: SnsMemberCount[];}"
        },
        {
          "fileName": "SnsMemberCount",
          "content": "import { SnsType } from \"../User/SnsType.ts\";\n\n export interface SnsMemberCount {sns_type: SnsType;member_count: number;}"
        },
        {
          "fileName": "TelegramSwitchOnGroup",
          "content": "\n\n export interface TelegramSwitchOnGroup {community_id?: number;community_key?: string;group_url: string;enable: boolean;}"
        },
        {
          "fileName": "DiscordCommandSettings",
          "content": "\n\n export interface DiscordCommandSettings {community_id?: number;community_key?: string;discord_channels: string[];enable: boolean;}"
        },
        {
          "fileName": "CooperateInfo",
          "content": "\n\n export interface CooperateInfo {space_id: number;space_avatar: string;space_name: string;space_comment: string;comment_author: string;}"
        },
        {
          "fileName": "PlatformTaskPoints",
          "content": "\n\n export interface PlatformTaskPoints {platform: string;points: number;}"
        },
        {
          "fileName": "SnsBotPermissionRequest",
          "content": "import { SnsType } from \"../User/SnsType.ts\";import { SnsBotActionType } from \"../User/SnsBotActionType.ts\";\n\n export interface SnsBotPermissionRequest {community_id: number;community_key: string;sns_type: SnsType;sns_bot_action: SnsBotActionType;}"
        },
        {
          "fileName": "CommunityActivity",
          "content": "import { ActivityType } from \"../TaskOnCommunity/ActivityType.ts\";\n\n export interface CommunityActivity {user_id: number;user_name: string;activity_type: ActivityType;ref_id: number;ref_name: string;}"
        },
        {
          "fileName": "ActivityType",
          "content": "export type ActivityType = string;"
        },
        {
          "fileName": "UpdateSnsProfileRequest",
          "content": "import { SnsType } from \"../User/SnsType.ts\";\n\n export interface UpdateSnsProfileRequest {community_id?: number;community_key?: string;sns_type: SnsType;sns_info: string;}"
        },
        {
          "fileName": "SnsAvailablePointsList",
          "content": "import { SnsAvailablePoint } from \"../TaskOnCommunity/SnsAvailablePoint.ts\";\n\n export interface SnsAvailablePointsList {data: SnsAvailablePoint[];}"
        },
        {
          "fileName": "SnsAvailablePoint",
          "content": "\n\n export interface SnsAvailablePoint {platform: string;availabe_points: number;}"
        },
        {
          "fileName": "CommunityAnnouncement",
          "content": "\n\n export interface CommunityAnnouncement {content?: string;link?: string;}"
        },
        {
          "fileName": "CommunityIncentive",
          "content": "import { RewardType } from \"../Reward/RewardType.ts\";\n\n export interface CommunityIncentive {exact_date?: number;airdrop_percent?: string;monthly_budget?: string;benefit_rewards?: RewardType[];}"
        },
        {
          "fileName": "InterestFeature",
          "content": "export type InterestFeature = string;"
        },
        {
          "fileName": "CommunityDashboard",
          "content": "\n\n export interface CommunityDashboard {followers_total: number;followers_yesterday: number;claimed_tasks_total: number;claimed_tasks_yesterday: number;tasks_total: number;ongoing_tasks_total: number;sprint_participants_total: number;sprint_participants_yesterday: number;invited_members_total: number;invited_members_yesterday: number;website_views_total: number;website_views_yesterday: number;update_time: number;}"
        },
        {
          "fileName": "ColorSetting",
          "content": "\n\n export interface ColorSetting {primary: string;secondary: string;}"
        },
        {
          "fileName": "ThemeSetting",
          "content": "import { ThemeMode } from \"../TaskOnCommunity/ThemeMode.ts\";\n\n export interface ThemeSetting {mode: ThemeMode;colors: {primary: string;secondary: string;};}"
        },
        {
          "fileName": "InviteCreateCommunityRecordListResp",
          "content": "import { InviteCreateCommunityRecordItem } from \"../TaskOnCommunity/InviteCreateCommunityRecordItem.ts\";\n\n export interface InviteCreateCommunityRecordListResp {data: InviteCreateCommunityRecordItem[];total: number;}"
        },
        {
          "fileName": "UserPointsHistoryList",
          "content": "import { UserPointsHistoryListItem } from \"../TaskOnCommunity/UserPointsHistoryListItem.ts\";\n\n export interface UserPointsHistoryList {data: UserPointsHistoryListItem[];total: number;}"
        },
        {
          "fileName": "UserPointsHistoryListItem",
          "content": "import { CampaignType } from \"../Campaign/CampaignType.ts\";\n\n export interface UserPointsHistoryListItem {points: number;name: string;campaign_id?: number;campaign_type?: CampaignType;task_id?: number;receive_time: number;}"
        },
        {
          "fileName": "UserAdventureStatus",
          "content": "\n\n export interface UserAdventureStatus {total_sprint: number;min_complete_count: number;completed_sprint_count: number;total_points: number;your_points: number;completed_sprints: number[];user_tier: number;}"
        },
        {
          "fileName": "OdysseyConfigs",
          "content": "import { OdysseyAdventureId } from \"../TaskOnCommunity/OdysseyAdventureId.ts\";\n\n export interface OdysseyConfigs {banner_picture_pc: string;banner_picture_mobile: string;odyssey_id: number;odyssey_adventure_ids: OdysseyAdventureId[];}"
        },
        {
          "fileName": "OdysseyAdventureId",
          "content": "\n\n export interface OdysseyAdventureId {odyssey_id: number;adventure_id: number;}"
        },
        {
          "fileName": "OdysseyDetail",
          "content": "import { EpicBannerTabItem } from \"../Epic/EpicBannerTabItem.ts\";import { EpicKeyMetricItem } from \"../Epic/EpicKeyMetricItem.ts\";import { EpicSpaceItem } from \"../Epic/EpicSpaceItem.ts\";import { RewardInfoSimple } from \"../Reward/RewardInfoSimple.ts\";import { EpicEventsTitle } from \"../Epic/EpicEventsTitle.ts\";import { EpicPreviewEventItem } from \"../Epic/EpicPreviewEventItem.ts\";\n\n export interface OdysseyDetail {banner_title: {title: string;left_icon: string;right_icon: string;font_color: string;};banner_tabs: EpicBannerTabItem[];key_metrics: EpicKeyMetricItem[];selected_spaces: EpicSpaceItem[];start_time: number;end_time: number;rewards: RewardInfoSimple[];participants: number;adventure_title: EpicEventsTitle;adventures_tab: number[];preview_adventures: EpicPreviewEventItem[];id: number;banner_picture_pc: string;banner_picture_mobile: string;default_adventure_id: number;}"
        },
        {
          "fileName": "UserSprintStatusInfo",
          "content": "import { UserCampaignStatus } from \"../Campaign/UserCampaignStatus.ts\";import { UserEligibleStatus } from \"../Eligibility/UserEligibleStatus.ts\";import { RewardValueInfo } from \"../Reward/RewardValueInfo.ts\";import { CampaignWinnerReward } from \"../Campaign/CampaignWinnerReward.ts\";\n\n export interface UserSprintStatusInfo {user_status: UserCampaignStatus;campaign_eligible: UserEligibleStatus;campaign_eligible_details: boolean[];qualifier_rewards: RewardValueInfo[];winner_rewards: CampaignWinnerReward[];reward_reported: boolean;is_favorite: boolean;win_shared: boolean;ranking: number;current_point: number;tier: number;}"
        },
        {
          "fileName": "MySprintHistoryList",
          "content": "import { MySprintHistoryListItem } from \"../TaskOnCommunity/MySprintHistoryListItem.ts\";\n\n export interface MySprintHistoryList {data: MySprintHistoryListItem[];total: number;}"
        },
        {
          "fileName": "MySprintHistoryListItem",
          "content": "import { CampaignType } from \"../Campaign/CampaignType.ts\";\n\n export interface MySprintHistoryListItem {campaign_id: number;campaign_type: CampaignType;campaign_name: string;start_time: number;end_time: number;community_id: number;community_key: string;community_dapp_domain: string;}"
        },
        {
          "fileName": "UnreviewCount",
          "content": "import { UnreviewItem } from \"../TaskOnCommunity/UnreviewItem.ts\";\n\n export interface UnreviewCount {unreviewed_sprint: UnreviewItem[];community_total: number;}"
        },
        {
          "fileName": "CommunityBaseInfo",
          "content": "\n\n export interface CommunityBaseInfo {community_id: string;community_name: string;community_key: string;community_dapp_domain: string;community_avatar: string;community_verified: boolean;}"
        },
        {
          "fileName": "GetAllSprintNameListItem",
          "content": "\n\n export interface GetAllSprintNameListItem {name: string;sprint_id: number;}"
        },
        {
          "fileName": "UserCommunityPointsAndRankList",
          "content": "import { UserCommunityPointsAndRank } from \"../TaskOnCommunity/UserCommunityPointsAndRank.ts\";\n\n export interface UserCommunityPointsAndRankList {data: UserCommunityPointsAndRank[];total: number;}"
        },
        {
          "fileName": "UserCommunityPointsAndRank",
          "content": "\n\n export interface UserCommunityPointsAndRank {community_id: number;community_name: string;community_key: string;rank: number;points: string;points_name: string;community_dapp_domain: string;}"
        },
        {
          "fileName": "GetSprintListResp",
          "content": "import { SprintListItem } from \"../TaskOnCommunity/SprintListItem.ts\";\n\n export interface GetSprintListResp {total: number;list: SprintListItem[];}"
        },
        {
          "fileName": "AssetsOverall",
          "content": "\n\n export interface AssetsOverall {token_amount: string;nft_count: number;}"
        },
        {
          "fileName": "ThemeMode",
          "content": "export type ThemeMode = string;"
        },
        {
          "fileName": "InviteCreateCommunityRewardParam",
          "content": "\n\n export interface InviteCreateCommunityRewardParam {base_commission_rate: string;discount_rate: string;base_standard_semi_amount: string;base_pro_semi_amount: string;base_standard_annual_amount: string;enterprise_amount: string;baseP_pro_annual_amount: string;additional_standard_semi_amount: string;additional_pro_semi_amount: string;additional_standard_annual_amount: string;additional_pro_annual_amount: string;additional_commission_rate: string;min_additional_referrals: string;cap_rate: string;}"
        },
        {
          "fileName": "EcosystemTask",
          "content": "\n\n export interface EcosystemTask {template_id: string;template_params: string;}"
        },
        {
          "fileName": "UnreviewItem",
          "content": "\n\n export interface UnreviewItem {sprint_id: number;sprint_name: string;unreview_count: string;}"
        },
        {
          "fileName": "SprintTabInfo",
          "content": "\n\n export interface SprintTabInfo {latest_ongoing_sprint_end_in: number;latest_ongoing_sprint_id: number;latest_ongoing_sprint_banner: string;next_ongoing_sprint_start_in: number;next_ongoing_sprint_id: number;}"
        },
        {
          "fileName": "SprintInfo",
          "content": "import { CampaignStatus } from \"../Campaign/CampaignStatus.ts\";import { CampaignType } from \"../Campaign/CampaignType.ts\";import { UserTaskInfo } from \"../TaskOnCommunity/UserTaskInfo.ts\";import { WinnerRewards } from \"../Winner/WinnerRewards.ts\";import { BUserBriefInfo } from \"../User/BUserBriefInfo.ts\";\n\n export interface SprintInfo {id: number;owner_id: number;owner_name: string;owner_avatar: string;point_name: string;sprint_status: CampaignStatus;campaign_type: CampaignType;name: string;desc: string;community_id: string;image: string;start_time: number;end_time: number;tasks: UserTaskInfo[];winner_rewards: WinnerRewards[];winner_rewards_simple: object[];cohosts: BUserBriefInfo[];community_key: string;dapp_domain: string;}"
        },
        {
          "fileName": "SprintListItem",
          "content": "import { DownloadStatus } from \"../Download/DownloadStatus.ts\";import { CampaignStatus } from \"../Campaign/CampaignStatus.ts\";import { RewardInfoSimple } from \"../Reward/RewardInfoSimple.ts\";\n\n export interface SprintListItem {id: number;name: string;start_time: number;end_time: number;image: string;participate_count: number;download_status: DownloadStatus;download_link: string;sprint_status: CampaignStatus;rewards?: RewardInfoSimple[];owner_id: number;owner_name: string;owner_avatar: string;unreview_task_amount: number;community_key: string;point_name?: string;}"
        },
        {
          "fileName": "SprintSimpleInfo",
          "content": "\n\n export interface SprintSimpleInfo {id: number;name: string;}"
        },
        {
          "fileName": "SetSprintParam",
          "content": "import { WinnerRewards } from \"../Winner/WinnerRewards.ts\";import { LockedAssetInRewardSummary } from \"../Asset/LockedAssetInRewardSummary.ts\";import { CampaignStatus } from \"../Campaign/CampaignStatus.ts\";\n\n export interface SetSprintParam {id: number;community_id: number;name: string;desc: string;sprint_start: number;sprint_end: number;sprint_image: string;is_draft: boolean;is_preview: boolean;winner_rewards: WinnerRewards[];contain_all_task: boolean;task_ids?: number[];locked_assets?: LockedAssetInRewardSummary;status: CampaignStatus;}"
        },
        {
          "fileName": "SprintLeaderboardReq",
          "content": "import { Page } from \"../Common/Page.ts\";\n\n export interface SprintLeaderboardReq {sprint_id: number;page: Page;}"
        },
        {
          "fileName": "SprintBreif",
          "content": "\n\n export interface SprintBreif {sprint_id: number;sprint_name: string;start_time: number;end_time: number;}"
        },
        {
          "fileName": "MyAssetsOverall",
          "content": "\n\n export interface MyAssetsOverall {token_value: string;nft_count: number;}"
        },
        {
          "fileName": "ListMyCommunityRewardDetailsReq",
          "content": "import { RewardType } from \"../Reward/RewardType.ts\";import { Page } from \"../Common/Page.ts\";\n\n export interface ListMyCommunityRewardDetailsReq {community_id?: number;community_key?: string;reward_type: RewardType;page: Page;}"
        },
        {
          "fileName": "MyCommunityRewardDetails",
          "content": "import { CommunityBaseInfo } from \"../TaskOnCommunity/CommunityBaseInfo.ts\";import { CampaignType } from \"../Campaign/CampaignType.ts\";import { RewardType } from \"../Reward/RewardType.ts\";import { RewardDistributedByType } from \"../Reward/RewardDistributedByType.ts\";\n\n export interface MyCommunityRewardDetails {community_info: CommunityBaseInfo[];campaign_id: number;campaign_type: CampaignType;campaign_name: string;reward_type: RewardType;reward_time: number;reward_distribute_by: RewardDistributedByType;reward_value: todo unknown undefined;odyssey_id?: number;}"
        },
        {
          "fileName": "InviteCreateCommunityWhitelistInfo",
          "content": "\n\n export interface InviteCreateCommunityWhitelistInfo {in_whitelist: boolean;no_invite_community_tip: boolean;ever_paid: boolean;}"
        },
        {
          "fileName": "MyCommunityRewards",
          "content": "\n\n export interface MyCommunityRewards {token_amount: string;nft_count: number;whitelist_count: number;discord_role_count: number;points_count: number;}"
        },
        {
          "fileName": "InvitedCreateCommunityInfo",
          "content": "\n\n export interface InvitedCreateCommunityInfo {invited_by: number;invited_by_name: string;discount: string;inviter_community_user_num: number;inviter_completed_task_num: number;ever_paid: boolean;is_whitelist: boolean;invited_by_avatar: string;}"
        },
        {
          "fileName": "InviteCreateCommunityRecordItem",
          "content": "import { PlanType } from \"../TaskOnCommunity/PlanType.ts\";import { SubscriptionType } from \"../TaskOnCommunity/SubscriptionType.ts\";\n\n export interface InviteCreateCommunityRecordItem {community_id: number;community_name: string;subscribe_date: number;plan_type: PlanType;subscription_type: SubscriptionType;}"
        },
        {
          "fileName": "ReportEvtOfCommunityChecklistRequest",
          "content": "import { CheckListEventType } from \"../TaskOnCommunity/CheckListEventType.ts\";\n\n export interface ReportEvtOfCommunityChecklistRequest {community_id?: number;community_key?: string;event: CheckListEventType;}"
        },
        {
          "fileName": "CheckListEventType",
          "content": "export type CheckListEventType = string;"
        },
        {
          "fileName": "FeatureCommunityItem",
          "content": "\n\n export interface FeatureCommunityItem {community_id: number;name: string;weight: number;}"
        },
        {
          "fileName": "SnsBindResult",
          "content": "import { SnsType } from \"../User/SnsType.ts\";\n\n export interface SnsBindResult {result: boolean;sns_id?: string;sns_user_name?: string;sns_type?: SnsType;}"
        },
        {
          "fileName": "SearchResp",
          "content": "import { CommunityListItem } from \"../TaskOnCommunity/CommunityListItem.ts\";\n\n export interface SearchResp {data: CommunityListItem[];total: number;}"
        },
        {
          "fileName": "CommunityStatus",
          "content": "export type CommunityStatus = string;"
        },
        {
          "fileName": "VerifyCommunityInfo",
          "content": "import { ProjectCategory } from \"../User/ProjectCategory.ts\";\n\n export interface VerifyCommunityInfo {community_id: number;community_key?: string;logo: string;name: string;category: ProjectCategory[];website: string;twitter_handle: string;}"
        },
        {
          "fileName": "LaunchCommunityInfo",
          "content": "\n\n export interface LaunchCommunityInfo {community_id: number;community_key?: string;website: string;logo: string;name: string;network: string;twitter_handle: string;}"
        },
        {
          "fileName": "OrderStatusReq",
          "content": "\n\n export interface OrderStatusReq {community_id?: number;community_key?: string;order_sn: string;}"
        },
        {
          "fileName": "CommunitOrderBy",
          "content": "export type CommunitOrderBy = string;"
        },
        {
          "fileName": "CancelOrder",
          "content": "\n\n export interface CancelOrder {order_sn: string;community_id?: number;community_key?: string;}"
        },
        {
          "fileName": "OrderStatus",
          "content": "export type OrderStatus = string;"
        },
        {
          "fileName": "OrderList",
          "content": "import { OrderStatus } from \"../TaskOnCommunity/OrderStatus.ts\";\n\n export interface OrderList {order_sn: string;status: OrderStatus;payment_url: string;final_price: string;plan_id: number;create_time: number;expire_time: number;}"
        },
        {
          "fileName": "BuyPlanResponse",
          "content": "\n\n export interface BuyPlanResponse {order_sn: string;payment_url: string;}"
        },
        {
          "fileName": "BuyPlanReq",
          "content": "import { SubscriptionType } from \"../TaskOnCommunity/SubscriptionType.ts\";\n\n export interface BuyPlanReq {community_id?: number;community_key?: string;plan_id: number;subscription_type: SubscriptionType;return_url: string;}"
        },
        {
          "fileName": "SearchReq",
          "content": "import { Page } from \"../Common/Page.ts\";\n\n export interface SearchReq {name: string;page: Page;}"
        },
        {
          "fileName": "PlanCfg",
          "content": "import { PlanType } from \"../TaskOnCommunity/PlanType.ts\";import { SubscriptionType } from \"../TaskOnCommunity/SubscriptionType.ts\";\n\n export interface PlanCfg {id: number;plan_type?: PlanType;subscription_type?: SubscriptionType;display_price?: number;price?: number;discount?: number;invite_promotion_amount: number;}"
        },
        {
          "fileName": "OrderList1",
          "content": "import { CommunityOrder } from \"../TaskOnCommunity/CommunityOrder.ts\";\n\n export interface OrderList1 {total: number;list: CommunityOrder[];}"
        },
        {
          "fileName": "MyCommunityPlan",
          "content": "import { CommunityPlan } from \"../TaskOnCommunity/CommunityPlan.ts\";\n\n export interface MyCommunityPlan {current_plan: CommunityPlan;next_plan: CommunityPlan;had_trial: boolean;had_buy_plan: boolean;}"
        },
        {
          "fileName": "PlanBrief",
          "content": "\n\n export interface PlanBrief {disabled: boolean;plan_id: number;unfreeze_time: number;expired: boolean;}"
        },
        {
          "fileName": "CommunityPresetPlan",
          "content": "import { SubscriptionType } from \"../TaskOnCommunity/SubscriptionType.ts\";import { PlanCfg } from \"../TaskOnCommunity/PlanCfg.ts\";\n\n export interface CommunityPresetPlan {subscription_type: SubscriptionType;plans: PlanCfg[];}"
        },
        {
          "fileName": "OrderType",
          "content": "export type OrderType = string;"
        },
        {
          "fileName": "CommunityOrder",
          "content": "import { OrderType } from \"../TaskOnCommunity/OrderType.ts\";\n\n export interface CommunityOrder {id: number;order_type: OrderType;description: string;amount: number;create_time: number;}"
        },
        {
          "fileName": "SetType",
          "content": "export type SetType = string;"
        },
        {
          "fileName": "SetsDetail",
          "content": "\n\n export interface SetsDetail {id: number;amount: number;used: number;expire_time: number;}"
        },
        {
          "fileName": "CommunitySets",
          "content": "import { SetsDetail } from \"../TaskOnCommunity/SetsDetail.ts\";\n\n export interface CommunitySets {credit_balance: number;available_claims: number;basic_set: SetsDetail;extra_set: SetsDetail;}"
        },
        {
          "fileName": "SubscriptionType",
          "content": "export type SubscriptionType = string;"
        },
        {
          "fileName": "CommunityPlan",
          "content": "import { PlanType } from \"../TaskOnCommunity/PlanType.ts\";import { SubscriptionType } from \"../TaskOnCommunity/SubscriptionType.ts\";\n\n export interface CommunityPlan {id: number;plan_type: PlanType;expire_time: number;billing_time: number;subscription_type: SubscriptionType;}"
        },
        {
          "fileName": "PlanType",
          "content": "export type PlanType = string;"
        },
        {
          "fileName": "InviteSummarizeItem",
          "content": "\n\n export interface InviteSummarizeItem {visitor: number;follower: number;qualifier: number;name: string;inviter_id: number;avatar: string;}"
        },
        {
          "fileName": "GetGtcComboTrendRequest",
          "content": "import { IndicatorType } from \"../TaskOnCommunity/IndicatorType.ts\";\n\n export interface GetGtcComboTrendRequest {community_id: number;task_id?: number;time_range?: number;indicator: IndicatorType;}"
        },
        {
          "fileName": "TaskGroupBySector",
          "content": "import { GtcTaskBrief } from \"../TaskOnCommunity/GtcTaskBrief.ts\";\n\n export interface TaskGroupBySector {sector_name: string;tasks: GtcTaskBrief[];}"
        },
        {
          "fileName": "GtcTaskBrief",
          "content": "import { TaskTemplateId } from \"../Task/TaskTemplateId.ts\";\n\n export interface GtcTaskBrief {task_id: number;task_name: string;template_id: TaskTemplateId;}"
        },
        {
          "fileName": "CheckListActionType",
          "content": "export type CheckListActionType = string;"
        },
        {
          "fileName": "TaskListOrderBy",
          "content": "export type TaskListOrderBy = string;"
        },
        {
          "fileName": "IndicatorType",
          "content": "export type IndicatorType = string;"
        },
        {
          "fileName": "TaskSummarizeItem",
          "content": "\n\n export interface TaskSummarizeItem {task_id: number;task_name: string;participant: number;submitter: number;qualifier: number;published_time: number;}"
        },
        {
          "fileName": "ComboTrend",
          "content": "import { TrendScalar } from \"../Common/TrendScalar.ts\";\n\n export interface ComboTrend {line: TrendScalar[];total: number;latest: number;}"
        },
        {
          "fileName": "GtcTrendItem",
          "content": "import { CommunityTrend } from \"../TaskOnCommunity/CommunityTrend.ts\"; export type GtcTrendItem = CommunityTrend[];"
        },
        {
          "fileName": "GtcSummarizeItem",
          "content": "import { CommunitySummarize } from \"../TaskOnCommunity/CommunitySummarize.ts\";\n\n export interface GtcSummarizeItem {new_user: CommunitySummarize;overall: CommunitySummarize;}"
        },
        {
          "fileName": "ChartType",
          "content": "export type ChartType = string;"
        },
        {
          "fileName": "GtcSummarizeReq",
          "content": "import { ChartType } from \"../TaskOnCommunity/ChartType.ts\";\n\n export interface GtcSummarizeReq {community_id: number;chart: ChartType;task_id?: number;time_range?: number;}"
        },
        {
          "fileName": "LevelSettingInfo",
          "content": "import { LevelType } from \"../TaskOnCommunity/LevelType.ts\";import { LevelSettingNew } from \"../TaskOnCommunity/LevelSettingNew.ts\";\n\n export interface LevelSettingInfo {selected_type: LevelType;array: LevelSettingNew[];}"
        },
        {
          "fileName": "LevelType",
          "content": "export type LevelType = string;"
        },
        {
          "fileName": "LevelSettingNew",
          "content": "import { LevelType } from \"../TaskOnCommunity/LevelType.ts\";import { LevelSetting } from \"../TaskOnCommunity/LevelSetting.ts\";\n\n export interface LevelSettingNew {type: LevelType;levels: LevelSetting[];}"
        },
        {
          "fileName": "ConditionTypeList",
          "content": "import { EligibilityType } from \"../Eligibility/EligibilityType.ts\";\n\n export interface ConditionTypeList {condition_type: EligibilityType;enable: boolean;}"
        },
        {
          "fileName": "InviteSummarize",
          "content": "import { InviteSummarizeItem } from \"../TaskOnCommunity/InviteSummarizeItem.ts\";\n\n export interface InviteSummarize {total: number;inviter: InviteSummarizeItem[];}"
        },
        {
          "fileName": "TaskSummarize",
          "content": "import { TaskSummarizeItem } from \"../TaskOnCommunity/TaskSummarizeItem.ts\";\n\n export interface TaskSummarize {total_task: number;tasks: TaskSummarizeItem[];}"
        },
        {
          "fileName": "CommunityTrend",
          "content": "\n\n export interface CommunityTrend {visitor?: number;follower?: number;participant?: number;submitter?: number;qualifier?: number;inviter?: number;qualified_times?: number;member?: number;bot?: number;time_points: number;}"
        },
        {
          "fileName": "CommunitySummarize",
          "content": "\n\n export interface CommunitySummarize {visitor?: number;follower?: number;participant?: number;submitter?: number;qualifier?: number;inviter?: number;member?: number;bot?: number;qualified_times?: number;}"
        },
        {
          "fileName": "CommunityCheckList",
          "content": "import { CheckListActionType } from \"../TaskOnCommunity/CheckListActionType.ts\";\n\n export interface CommunityCheckList {id: number;item_name: string;finished: boolean;jump_path: string;action_type: CheckListActionType;desc: string;}"
        },
        {
          "fileName": "MeetCondition",
          "content": "import { EligibilityType } from \"../Eligibility/EligibilityType.ts\";\n\n export interface MeetCondition {id: number;condition_type: EligibilityType;condition_params: string;status: string;}"
        },
        {
          "fileName": "AutoTaskId",
          "content": "\n\n export interface AutoTaskId {auto_task_id: number;community_id: number;sector_id: number;}"
        },
        {
          "fileName": "GetDiscordBotSettingParam",
          "content": "\n\n export interface GetDiscordBotSettingParam {community_id: number;discord_token?: string;guild_id?: string;}"
        },
        {
          "fileName": "SetDiscordBotSettingValue",
          "content": "import { DiscordOption } from \"../TaskOnCommunity/DiscordOption.ts\";\n\n export interface SetDiscordBotSettingValue {community_id: number;is_on: boolean;channel: string;mention_role: string[];guild_id: string;discord_options: DiscordOption;}"
        },
        {
          "fileName": "TaskIdReq",
          "content": "\n\n export interface TaskIdReq {task_id: number;community_id: number;}"
        },
        {
          "fileName": "MultipleTwitterUserValue",
          "content": "import { LikeATweetTaskUserValue } from \"../DefaultFolder/LikeATweetTaskUserValue.ts\";\n\n export interface MultipleTwitterUserValue {items: LikeATweetTaskUserValue[];}"
        },
        {
          "fileName": "CommunityInviteDistributeType",
          "content": "export type CommunityInviteDistributeType = string;"
        },
        {
          "fileName": "CommunityInviteLayerItem",
          "content": "\n\n export interface CommunityInviteLayerItem {require_num: number;points: number;}"
        },
        {
          "fileName": "UserMutipleTaskValueItem",
          "content": "\n\n export interface UserMutipleTaskValueItem {value: string;success: boolean;}"
        },
        {
          "fileName": "DiscordUserInfo",
          "content": "\n\n export interface DiscordUserInfo {name: string;icon: string;}"
        },
        {
          "fileName": "DiscordOption",
          "content": "import { ChannelInfo } from \"../TaskOnCommunity/ChannelInfo.ts\";import { RoleInfo } from \"../TaskOnCommunity/RoleInfo.ts\";import { DiscordUserInfo } from \"../TaskOnCommunity/DiscordUserInfo.ts\";\n\n export interface DiscordOption {text_channel_list: ChannelInfo[];role_list: RoleInfo[];user_info: DiscordUserInfo;}"
        },
        {
          "fileName": "RoleInfo",
          "content": "\n\n export interface RoleInfo {name: string;mention: string;}"
        },
        {
          "fileName": "ChannelInfo",
          "content": "\n\n export interface ChannelInfo {name: string;channel_id: string;}"
        },
        {
          "fileName": "GetDiscordOption",
          "content": "\n\n export interface GetDiscordOption {discord_token?: string;community_id: number;}"
        },
        {
          "fileName": "SetDiscordBotSettingParams",
          "content": "\n\n export interface SetDiscordBotSettingParams {community_id: number;is_on: boolean;channel: string;mention_role: string[];}"
        },
        {
          "fileName": "AutoTaskParams",
          "content": "import { AutoTaskMeta } from \"../TaskOnCommunity/AutoTaskMeta.ts\";\n\n export interface AutoTaskParams {sector_id: number;community_id: number;auto_task_data: AutoTaskMeta;}"
        },
        {
          "fileName": "CommunityIdParam",
          "content": "\n\n export interface CommunityIdParam {community_id: number;discord_token?: string;}"
        },
        {
          "fileName": "CommunityIdOrKeyParams",
          "content": "\n\n export interface CommunityIdOrKeyParams {community_id?: number;community_key?: string;}"
        },
        {
          "fileName": "CommunityNameIsDuplicateParams",
          "content": "\n\n export interface CommunityNameIsDuplicateParams {name: string;exclude_community_id?: number;}"
        },
        {
          "fileName": "RecurrenceType",
          "content": "export type RecurrenceType = string;"
        },
        {
          "fileName": "GetCommunityByKeyParam",
          "content": "\n\n export interface GetCommunityByKeyParam {community_key: string;}"
        },
        {
          "fileName": "SaveCommunityKeyParams",
          "content": "\n\n export interface SaveCommunityKeyParams {community_id: number;community_key: string;}"
        },
        {
          "fileName": "SetSectorReq",
          "content": "import { SectorValue } from \"../TaskOnCommunity/SectorValue.ts\";\n\n export interface SetSectorReq {sector: SectorValue;community_id: number;}"
        },
        {
          "fileName": "ListCreateTaskSectorsReq",
          "content": "\n\n export interface ListCreateTaskSectorsReq {community_id: number;}"
        },
        {
          "fileName": "PointReward",
          "content": "\n\n export interface PointReward {amount: number;}"
        },
        {
          "fileName": "SetCommunityParams",
          "content": ""
        },
        {
          "fileName": "UpdateAutoTaskStatusReq",
          "content": "\n\n export interface UpdateAutoTaskStatusReq {auto_task_id: number;enable: boolean;community_id: number;sector_id: number;meta_id: number;}"
        },
        {
          "fileName": "ReorderTaskReq",
          "content": "\n\n export interface ReorderTaskReq {task_ids: number[];new_position: number;community_id: number;}"
        },
        {
          "fileName": "UpdateTaskStatusReq",
          "content": "import { TaskStatus } from \"../TaskOnCommunity/TaskStatus.ts\";\n\n export interface UpdateTaskStatusReq {status: TaskStatus;task_ids: number[];community_id: number;}"
        },
        {
          "fileName": "PutTaskSectorReq",
          "content": "\n\n export interface PutTaskSectorReq {sector_id: number;task_ids: number[];community_id: number;}"
        },
        {
          "fileName": "TaskIDsReq",
          "content": "\n\n export interface TaskIDsReq {task_ids: number[];community_id: number;}"
        },
        {
          "fileName": "ListBTaskReq",
          "content": "import { TaskStatus } from \"../TaskOnCommunity/TaskStatus.ts\";\n\n export interface ListBTaskReq {include_status: TaskStatus[];expired: boolean;sector_id: number;community_id: number;}"
        },
        {
          "fileName": "SectorIdList",
          "content": "\n\n export interface SectorIdList {sector_ids: number[];community_id: number;}"
        },
        {
          "fileName": "DeleteSector",
          "content": "\n\n export interface DeleteSector {sector_id: number;keep_in_others: boolean;community_id: number;}"
        },
        {
          "fileName": "GetSubmitedTaskHistory",
          "content": "import { Page } from \"../Common/Page.ts\";\n\n export interface GetSubmitedTaskHistory {community_id?: number;community_key?: string;page: Page;}"
        },
        {
          "fileName": "DiscordBotSetting",
          "content": "\n\n export interface DiscordBotSetting {is_on: boolean;channel: string;mention_role: string;}"
        },
        {
          "fileName": "CommunityRewardInfo",
          "content": "import { RewardType } from \"../Reward/RewardType.ts\";\n\n export interface CommunityRewardInfo {reward_type: RewardType;reward_params: todo unknown undefined;}"
        },
        {
          "fileName": "AutoTaskMeta",
          "content": "import { EligibilityItem } from \"../Eligibility/EligibilityItem.ts\";import { CommunityRewardInfo } from \"../TaskOnCommunity/CommunityRewardInfo.ts\";import { TaskParamItem } from \"../Task/TaskParamItem.ts\";\n\n export interface AutoTaskMeta {id: number;title: string;name: string;enable: boolean;latest_run_time: number;next_run_time: number;when: string;expired_hours: number;eligibility_expression: string;eligibility: EligibilityItem[];reward: CommunityRewardInfo[];template: TaskParamItem;meta_id: number;can_switch_template: boolean;created_task_count: number;}"
        },
        {
          "fileName": "GetUserRankInfoResp",
          "content": "import { RankInfo } from \"../TaskOnCommunity/RankInfo.ts\";\n\n export interface GetUserRankInfoResp {recently_rank: number;total_rank: number;total: number;percentage: number;list: RankInfo[];}"
        },
        {
          "fileName": "GetUserSubmitedTaskList",
          "content": "import { UserSubmitedTask } from \"../TaskOnCommunity/UserSubmitedTask.ts\";\n\n export interface GetUserSubmitedTaskList {total: number;list: UserSubmitedTask[];}"
        },
        {
          "fileName": "DefRankPoints",
          "content": "\n\n export interface DefRankPoints {amount: number;apply_to_draft: boolean;}"
        },
        {
          "fileName": "LevelSetting",
          "content": "\n\n export interface LevelSetting {level: number;required_points: number;total_points: number;}"
        },
        {
          "fileName": "CommunitySectorTasksItem",
          "content": "import { SectorValue } from \"../TaskOnCommunity/SectorValue.ts\";import { UserTaskInfo } from \"../TaskOnCommunity/UserTaskInfo.ts\";\n\n export interface CommunitySectorTasksItem {sector: SectorValue;total_points: number;point_name: string;tasks: UserTaskInfo[];}"
        },
        {
          "fileName": "CommunityListItem",
          "content": "\n\n export interface CommunityListItem {id: number;name: string;logo: string;desc: string;category: string;member_num: number;community_key: string;joined: boolean;}"
        },
        {
          "fileName": "UserTaskInfo",
          "content": "import { CommunityTaskInfo } from \"../TaskOnCommunity/CommunityTaskInfo.ts\";import { GtcUserTaskStatus } from \"../TaskOnCommunity/GtcUserTaskStatus.ts\";import { MeetCondition } from \"../TaskOnCommunity/MeetCondition.ts\";\n\n export interface UserTaskInfo {task_info: CommunityTaskInfo;user_status?: GtcUserTaskStatus;meet_conditions: MeetCondition[];}"
        },
        {
          "fileName": "UserCommunityStatus",
          "content": "\n\n export interface UserCommunityStatus {joined: boolean;}"
        },
        {
          "fileName": "CommunitySimpleInfo",
          "content": "\n\n export interface CommunitySimpleInfo {id: number;name: string;logo: string;community_key: string;joined_time: number;}"
        },
        {
          "fileName": "CommunityLeaderboardItem",
          "content": "\n\n export interface CommunityLeaderboardItem {rank: number;user_name: string;user_id: number;task_completed_num: number;points_total: number;}"
        },
        {
          "fileName": "UserRankSetting",
          "content": "import { LevelSetting } from \"../TaskOnCommunity/LevelSetting.ts\";import { DefRankPoints } from \"../TaskOnCommunity/DefRankPoints.ts\";\n\n export interface UserRankSetting {level_setting: LevelSetting[];points_name: string;default_rank_points: DefRankPoints;community_id: number;}"
        },
        {
          "fileName": "GtcUserTaskStatus",
          "content": "import { TaskReviewResult } from \"../Task/TaskReviewResult.ts\";\n\n export interface GtcUserTaskStatus {point: number;total_point: number;qualifier_times: number;latest_submitted_time: number;task_value: string;current_won: boolean;next_time: number;current_completed: boolean;review_result: TaskReviewResult;invite_count: number;}"
        },
        {
          "fileName": "CommunityMemberListItem",
          "content": "import { JoinStatus } from \"../DefaultFolder/JoinStatus.ts\";\n\n export interface CommunityMemberListItem {user_id: number;user_name: string;discord: string;twitter: string;telegram: string;user_address: string;joined_time: number;left_time: number;status: JoinStatus;}"
        },
        {
          "fileName": "RankInfo",
          "content": "\n\n export interface RankInfo {rank: number;user: string;task: number;point: number;avatar: string;}"
        },
        {
          "fileName": "CommunityTaskReviewItem",
          "content": "import { TaskValueItem } from \"../Task/TaskValueItem.ts\";import { TaskReviewResult } from \"../Task/TaskReviewResult.ts\";\n\n export interface CommunityTaskReviewItem {user_id: number;user_name: string;task: TaskValueItem;user_submission: string;submit_time: number;result: TaskReviewResult;id: number;}"
        },
        {
          "fileName": "GtcUserInfo",
          "content": "\n\n export interface GtcUserInfo {logo: string;user_name: string;points_amount: number;redeemable_amount: number;redeemed_amount: number;next_level_limit: number;level: number;rank: number;points_name: string;point_compare_to_yesterday: number;rank_compare_to_yesterday: number;}"
        },
        {
          "fileName": "TaskStatus",
          "content": "export type TaskStatus = string;"
        },
        {
          "fileName": "UserSubmitedTask",
          "content": "\n\n export interface UserSubmitedTask {task_name: string;task_id: number;points_name: string;points_amount: number;timestamp: number;}"
        },
        {
          "fileName": "BOwnerInfo",
          "content": "\n\n export interface BOwnerInfo {logo: string;name: string;twitter_handle: string;}"
        },
        {
          "fileName": "CommunityTaskInfo",
          "content": "import { CommunityRewardInfo } from \"../TaskOnCommunity/CommunityRewardInfo.ts\";import { RecurrenceType } from \"../TaskOnCommunity/RecurrenceType.ts\";import { TaskParamItem } from \"../Task/TaskParamItem.ts\";import { TaskStatus } from \"../TaskOnCommunity/TaskStatus.ts\";import { ChangedTaskItem } from \"../Task/ChangedTaskItem.ts\";\n\n export interface CommunityTaskInfo {id: number;name: string;description: string;reward: CommunityRewardInfo[];recurrence: RecurrenceType;claim_limit: number;time_frame: {start_time: number;end_time: number;};eligiblity_expression?: string;eligiblity?: object[];template: TaskParamItem;position?: number;status: TaskStatus;sector_id: number;joined_count: number;cool_down: number;changed_item?: ChangedTaskItem;is_validated?: boolean;}"
        },
        {
          "fileName": "CommunityInfo",
          "content": "import { ProjectCategory } from \"../User/ProjectCategory.ts\";import { PlanBrief } from \"../TaskOnCommunity/PlanBrief.ts\";import { CommunityStatus } from \"../TaskOnCommunity/CommunityStatus.ts\";import { CommunityIncentive } from \"../TaskOnCommunity/CommunityIncentive.ts\";import { CommunityAnnouncement } from \"../TaskOnCommunity/CommunityAnnouncement.ts\";import { CommunityActivity } from \"../TaskOnCommunity/CommunityActivity.ts\";\n\n export interface CommunityInfo {id: number;community_key?: string;website: string;logo: string;banner: string;name: string;desc: string;network: string[];twitter_handle: string;twitter_id: string;discord_link?: string;telegram_link?: string;email?: string;medium?: string;instagram?: string;facebook?: string;reddit: string;youtube: string;coin_market_cap: string;dapp_radar: string;category: ProjectCategory[];is_private: boolean;point_name: string;plan: PlanBrief;dapp_domain: string;status: CommunityStatus;invite_code: string;member_num: todo unknown number;max_level: todo unknown number;incentive?: CommunityIncentive;announcement?: CommunityAnnouncement;activities: CommunityActivity[];}"
        },
        {
          "fileName": "SectorValue",
          "content": "\n\n export interface SectorValue {id: number;name: string;description: string;total?: number;}"
        }
      ]
    },
    {
      "folderName": "User",
      "files": [
        {
          "fileName": "SnsBotActionType",
          "content": "export type SnsBotActionType = string;"
        },
        {
          "fileName": "GetUserInfoReq",
          "content": "\n\n export interface GetUserInfoReq {user_id?: number;}"
        },
        {
          "fileName": "TmpBSideProfile",
          "content": "import { AppSource } from \"../Common/AppSource.ts\";\n\n export interface TmpBSideProfile {twitter_handle: string;official_website: string;app_source: AppSource;}"
        },
        {
          "fileName": "RebindSnsParams",
          "content": "import { SnsType } from \"../User/SnsType.ts\";\n\n export interface RebindSnsParams {merge_code: string;sns_id: string;sns_type: SnsType;}"
        },
        {
          "fileName": "RebindAddressParams",
          "content": "import { ChainType } from \"../Common/ChainType.ts\";\n\n export interface RebindAddressParams {merge_code: string;address: string;chain_type: ChainType;}"
        },
        {
          "fileName": "UserMergeKeepWeb3ConnectParams",
          "content": ""
        },
        {
          "fileName": "UserMergeKeepWeb2ConnectParams",
          "content": ""
        },
        {
          "fileName": "UserBindResult",
          "content": "import { ChainType } from \"../Common/ChainType.ts\";import { SnsType } from \"../User/SnsType.ts\";\n\n export interface UserBindResult {result: boolean;is_bside_user: boolean;last_login_channel: boolean;community_user?: boolean;can_merge: boolean;merge_code?: string;address?: string;chain_type?: ChainType;sns_id?: string;sns_user_name?: string;sns_type?: SnsType;}"
        },
        {
          "fileName": "UserMergeParams",
          "content": "import { UserMergeKeepWeb2ConnectParams } from \"../User/UserMergeKeepWeb2ConnectParams.ts\";import { UserMergeKeepWeb3ConnectParams } from \"../User/UserMergeKeepWeb3ConnectParams.ts\";\n\n export interface UserMergeParams {merge_code: string;ga_code?: string;keep_user_name: boolean;keep_avatar: boolean;keep_level_exp: boolean;keep_web2_connects: UserMergeKeepWeb2ConnectParams[];keep_web3_connects: UserMergeKeepWeb3ConnectParams[];}"
        },
        {
          "fileName": "GetUserInfoForMergeParams",
          "content": "\n\n export interface GetUserInfoForMergeParams {merge_code: string;}"
        },
        {
          "fileName": "UserInfoForMerge",
          "content": "import { UserInfoItemForMerge } from \"../User/UserInfoItemForMerge.ts\";\n\n export interface UserInfoForMerge {current_user: UserInfoItemForMerge;merged_user: UserInfoItemForMerge;}"
        },
        {
          "fileName": "UserAssetForMerge",
          "content": "import { UserAssetItemForMerge } from \"../User/UserAssetItemForMerge.ts\";\n\n export interface UserAssetForMerge {total_value: string;details: UserAssetItemForMerge[];}"
        },
        {
          "fileName": "UserAssetItemForMerge",
          "content": "\n\n export interface UserAssetItemForMerge {token_symbol: string;token_address: string;chain: string;chain_label: string;token_amount: string;}"
        },
        {
          "fileName": "UserPointsForMerge",
          "content": "import { UserPointItemForMerge } from \"../User/UserPointItemForMerge.ts\";\n\n export interface UserPointsForMerge {total: number;details: UserPointItemForMerge[];}"
        },
        {
          "fileName": "UserPointItemForMerge",
          "content": "\n\n export interface UserPointItemForMerge {space: string;points: number;}"
        },
        {
          "fileName": "UserInfoItemForMerge",
          "content": "import { UserWeb2ConnectInfo } from \"../User/UserWeb2ConnectInfo.ts\";import { UserWeb3ConnectInfo } from \"../User/UserWeb3ConnectInfo.ts\";import { UserPointsForMerge } from \"../User/UserPointsForMerge.ts\";\n\n export interface UserInfoItemForMerge {user_name: string;avatar: string;level: number;exp: number;membership_ranking: number;web2_connect: UserWeb2ConnectInfo;web3_connect: UserWeb3ConnectInfo;asset: string;points: UserPointsForMerge;}"
        },
        {
          "fileName": "UserWeb3ConnectInfo",
          "content": "import { UserWeb3ConnectItem } from \"../User/UserWeb3ConnectItem.ts\"; export type UserWeb3ConnectInfo = UserWeb3ConnectItem[];"
        },
        {
          "fileName": "UserWeb3ConnectItem",
          "content": "import { ChainType } from \"../Common/ChainType.ts\";\n\n export interface UserWeb3ConnectItem {connect_type: ChainType;connect_name: string;is_primary: boolean;}"
        },
        {
          "fileName": "UserWeb3ConnectType",
          "content": "export type UserWeb3ConnectType = string;"
        },
        {
          "fileName": "UserWeb2ConnectItem",
          "content": "import { UserWeb2ConnectType } from \"../User/UserWeb2ConnectType.ts\";\n\n export interface UserWeb2ConnectItem {connect_type: UserWeb2ConnectType;connect_name: string;}"
        },
        {
          "fileName": "UserWeb2ConnectType",
          "content": "export type UserWeb2ConnectType = string;"
        },
        {
          "fileName": "UserWeb2ConnectInfo",
          "content": "import { UserWeb2ConnectItem } from \"../User/UserWeb2ConnectItem.ts\"; export type UserWeb2ConnectInfo = UserWeb2ConnectItem[];"
        },
        {
          "fileName": "ViewType",
          "content": "export type ViewType = string;"
        },
        {
          "fileName": "VerifyCodeType",
          "content": "export type VerifyCodeType = string;"
        },
        {
          "fileName": "InviteCodeResult",
          "content": "\n\n export interface InviteCodeResult {invite_code: string;}"
        },
        {
          "fileName": "GetInviteCodeByUserIdParams",
          "content": "\n\n export interface GetInviteCodeByUserIdParams {user_id: number;}"
        },
        {
          "fileName": "HomePoster",
          "content": "\n\n export interface HomePoster {img: string;link: string;}"
        },
        {
          "fileName": "TgData",
          "content": "\n\n export interface TgData {photo_url: string;first_name: string;last_name: string;username: string;id: number;hash: string;auth_date: number;}"
        },
        {
          "fileName": "BUserBriefInfoList",
          "content": "import { BUserBriefInfo } from \"../User/BUserBriefInfo.ts\";\n\n export interface BUserBriefInfoList {data: BUserBriefInfo[];total: number;}"
        },
        {
          "fileName": "CUserBriefInfoList",
          "content": "import { CUserBriefInfo } from \"../User/CUserBriefInfo.ts\";\n\n export interface CUserBriefInfoList {data?: CUserBriefInfo[];total: number;}"
        },
        {
          "fileName": "CUserBriefInfo",
          "content": "\n\n export interface CUserBriefInfo {user_id: number;user_name: string;user_avatar: string;user_address: string;}"
        },
        {
          "fileName": "BUserBriefInfo",
          "content": "\n\n export interface BUserBriefInfo {user_id: number;user_name: string;user_avatar: string;verified: boolean;project_category: string;follower_count?: number;}"
        },
        {
          "fileName": "OperatorExistParams",
          "content": "import { OperatorAccountIdType } from \"../User/OperatorAccountIdType.ts\";import { OperatorNetwork } from \"../User/OperatorNetwork.ts\";\n\n export interface OperatorExistParams {account_id: string;account_id_type: OperatorAccountIdType;network?: OperatorNetwork;}"
        },
        {
          "fileName": "OperatorNetwork",
          "content": "export type OperatorNetwork = string;"
        },
        {
          "fileName": "OperatorAccountIdType",
          "content": "export type OperatorAccountIdType = string;"
        },
        {
          "fileName": "SpaceOperatorInfo",
          "content": "import { OperatorAccountIdType } from \"../User/OperatorAccountIdType.ts\";import { OperatorNetwork } from \"../User/OperatorNetwork.ts\";\n\n export interface SpaceOperatorInfo {operator_id?: todo unknown number;account_id_type: OperatorAccountIdType;account_id: string;network?: OperatorNetwork;account_name: string;}"
        },
        {
          "fileName": "RoyaltyLoginParams",
          "content": "\n\n export interface RoyaltyLoginParams {project_id: number;drop_id: string;params: string;sig: string;}"
        },
        {
          "fileName": "MembershipDiscordRole",
          "content": "\n\n export interface MembershipDiscordRole {role: string;color: string;}"
        },
        {
          "fileName": "MembershipMultiplyInfo",
          "content": "\n\n export interface MembershipMultiplyInfo {nft_card?: string;discord_roles?: string[];}"
        },
        {
          "fileName": "TaskonMembershipInfo",
          "content": "import { MembershipDiscordRole } from \"../User/MembershipDiscordRole.ts\";\n\n export interface TaskonMembershipInfo {season_name: string;ranking: number;top_percent: todo unknown number;point: number;multiplier: todo unknown number;inactive: boolean;discord_name: string;discord_roles: MembershipDiscordRole[];pre_season_membership: string;pre_season_receive_level: string;update_at: todo unknown number;}"
        },
        {
          "fileName": "RequestEmailVerifyCodeParams",
          "content": "import { VerifyCodeType } from \"../User/VerifyCodeType.ts\";\n\n export interface RequestEmailVerifyCodeParams {email: string;type: VerifyCodeType;google_recaptcha?: string;}"
        },
        {
          "fileName": "VerifiyCodeType",
          "content": "export type VerifiyCodeType = string;"
        },
        {
          "fileName": "LeaderboadInfo",
          "content": "import { TopWinner } from \"../User/TopWinner.ts\";import { TopParticipant } from \"../User/TopParticipant.ts\";import { TaskonRewardDistributed } from \"../User/TaskonRewardDistributed.ts\";import { UserWinnerCount } from \"../User/UserWinnerCount.ts\";\n\n export interface LeaderboadInfo {top_winner: TopWinner;top_participant: TopParticipant;reward_distributed: TaskonRewardDistributed;user_count: UserWinnerCount;}"
        },
        {
          "fileName": "TaskonRewardDistributed",
          "content": "\n\n export interface TaskonRewardDistributed {token: string;nfts: string;whitelist: string;}"
        },
        {
          "fileName": "LeaderboardTopItem",
          "content": "import { LeaderBoardUserInfo } from \"../User/LeaderBoardUserInfo.ts\";\n\n export interface LeaderboardTopItem {user: LeaderBoardUserInfo;amount: string;}"
        },
        {
          "fileName": "LeaderBoardUserInfo",
          "content": "\n\n export interface LeaderBoardUserInfo {user_id: number;user_address: string;user_avatar: string;}"
        },
        {
          "fileName": "TopParticipant",
          "content": "import { LeaderboardTopItem } from \"../User/LeaderboardTopItem.ts\";\n\n export interface TopParticipant {winner: LeaderboardTopItem;qualifier: LeaderboardTopItem;submitter: LeaderboardTopItem;}"
        },
        {
          "fileName": "UserWinnerCount",
          "content": "\n\n export interface UserWinnerCount {token_count: number;nft_count: number;whitelist_count: number;}"
        },
        {
          "fileName": "TopWinner",
          "content": "import { LeaderboardTopItem } from \"../User/LeaderboardTopItem.ts\";\n\n export interface TopWinner {token: LeaderboardTopItem;nfts: LeaderboardTopItem;whitelist: LeaderboardTopItem;}"
        },
        {
          "fileName": "TaskonRewardAmount",
          "content": "\n\n export interface TaskonRewardAmount {token_amount: string;nft_count: number;whitelist_count: number;exp_count: number;}"
        },
        {
          "fileName": "UserEarnedRewardAmount",
          "content": "\n\n export interface UserEarnedRewardAmount {token_count: number;stable_token_amount: string;nft_count: number;whitelist_count: number;exp_count: number;token_account_balance: string;}"
        },
        {
          "fileName": "UserLandingStatus",
          "content": "\n\n export interface UserLandingStatus {completed_common_campaign: boolean;completed_landing_task: boolean;completed_landing_campaign: boolean;completed_exclusive_campaign: boolean;exclusive_campaign_expired: boolean;}"
        },
        {
          "fileName": "ProjectCategory",
          "content": "export type ProjectCategory = string;"
        },
        {
          "fileName": "UnbindAddressParams",
          "content": "import { ChainType } from \"../Common/ChainType.ts\";\n\n export interface UnbindAddressParams {chain_type: ChainType;address: string;}"
        },
        {
          "fileName": "BindAddressDataToSig",
          "content": "import { ChainType } from \"../Common/ChainType.ts\";\n\n export interface BindAddressDataToSig {server_name: string;timestamp: number;address: string;user_id: number;chain_type: ChainType;}"
        },
        {
          "fileName": "BindAddressParams",
          "content": "import { ChainType } from \"../Common/ChainType.ts\";\n\n export interface BindAddressParams {data: {server_name: string;timestamp: number;address: string;user_id: number;chain_type: ChainType;};sig: string;pubkey?: string;}"
        },
        {
          "fileName": "Domain",
          "content": "\n\n export interface Domain {jaz: string;bit: string;spaceid: string;}"
        },
        {
          "fileName": "UserRole",
          "content": "export type UserRole = string;"
        },
        {
          "fileName": "SetBUserInfoByAdminParams",
          "content": "import { ProjectCategory } from \"../User/ProjectCategory.ts\";\n\n export interface SetBUserInfoByAdminParams {twitter_handle: string;name: string;avatar: string;address: string;user_category: ProjectCategory;website?: string;desc?: string;}"
        },
        {
          "fileName": "EditUserInfo",
          "content": "import { ProjectCategory } from \"../User/ProjectCategory.ts\";\n\n export interface EditUserInfo {user_name?: string;avatar?: string;user_category?: ProjectCategory;}"
        },
        {
          "fileName": "BUserStatus",
          "content": "\n\n export interface BUserStatus {verified: boolean;registered: boolean;}"
        },
        {
          "fileName": "SnsItem",
          "content": "import { SnsType } from \"../User/SnsType.ts\";\n\n export interface SnsItem {sns_type: SnsType;sns_id: string;sns_user_name: string;bind_time: number;}"
        },
        {
          "fileName": "UnbindSnsParams",
          "content": "import { SnsType } from \"../User/SnsType.ts\";\n\n export interface UnbindSnsParams {sns_type: SnsType;sns_id: string;}"
        },
        {
          "fileName": "BindSnsParams",
          "content": "import { SnsType } from \"../User/SnsType.ts\";\n\n export interface BindSnsParams {sns_type: SnsType;token: string;sns_user_name?: string;}"
        },
        {
          "fileName": "Balance",
          "content": "\n\n export interface Balance {total_balance: string;avail_balance: string;locked_balance: string;}"
        },
        {
          "fileName": "SnsType",
          "content": "export type SnsType = string;"
        },
        {
          "fileName": "UserInfo",
          "content": "import { SnsItem } from \"../User/SnsItem.ts\";import { BUserStatus } from \"../User/BUserStatus.ts\";import { UserRole } from \"../User/UserRole.ts\";import { Domain } from \"../User/Domain.ts\";import { SpaceProfile } from \"../Space/SpaceProfile.ts\";import { TmpBSideProfile } from \"../User/TmpBSideProfile.ts\";\n\n export interface UserInfo {id: number;avatar: string;user_name: string;sns: SnsItem[];b_user: BUserStatus;address: object[];roles?: UserRole[];domains?: Domain;landing_status: {completed_common_campaign: boolean;completed_landing_task: boolean;completed_landing_campaign: boolean;completed_exclusive_campaign: boolean;exclusive_campaign_expired: boolean;};register_time: number;invite_code: string;inviter_id?: number;exp: number;invited_user_num: number;submitted_campaign_count: number;next_level_exp: number;next_level_invited_user_num: number;next_level_submitted_campaign_count: number;user_level: number;bound_google_auth: boolean;language: string;is_operator: boolean;credits: string;empty_guide_template: boolean;is_auditor: boolean;created_community_id: number;created_community_name: string;space_profile: SpaceProfile;tmp_space_profile?: TmpBSideProfile;}"
        }
      ]
    },
    {
      "folderName": "TaskOnCommunityOnboarding",
      "files": [
        {
          "fileName": "SyncDataFromWebsite",
          "content": "\n\n export interface SyncDataFromWebsite {twitter_name: string;description: string;twitter_logo: string;twitter_banner: string;twitter_handle: string;twitter_id: string;}"
        }
      ]
    },
    {
      "folderName": "DefaultFolder",
      "files": [
        {
          "fileName": "TaskOnStringResponse",
          "content": "\n\n export interface TaskOnStringResponse {result: string;error: {code: string;message: string;};}"
        },
        {
          "fileName": "SubmitChallengeReq",
          "content": "import { ViewType } from \"../User/ViewType.ts\";\n\n export interface SubmitChallengeReq {ver: string;type: string;nonce: string;did: string;proof: {type: string;verificationMethod: string;created: number;value: string;};VPs: string[];pubkey?: string;invite_code?: string;view_type?: ViewType;is_gtc_b_side: boolean;}"
        },
        {
          "fileName": "OuterApiNetwork",
          "content": "import { ChainType } from \"../Common/ChainType.ts\";\n\n export interface OuterApiNetwork {chain_type: ChainType;chain_label: string;}"
        },
        {
          "fileName": "WinnerDistributeInfo",
          "content": "import { UserCampaignRewardInfo } from \"../Campaign/UserCampaignRewardInfo.ts\";\n\n export interface WinnerDistributeInfo {extra_exp: number;user_campaign_reward_info: UserCampaignRewardInfo;}"
        },
        {
          "fileName": "NotificationSetting",
          "content": "\n\n export interface NotificationSetting {winner_notice: boolean;latest_campaign_notice: boolean;winner_distribution: boolean;}"
        },
        {
          "fileName": "SyncResult",
          "content": "export type SyncResult = string;"
        },
        {
          "fileName": "SyncResultListItem",
          "content": "\n\n export interface SyncResultListItem {id: number;sync_time: number;result: boolean;}"
        },
        {
          "fileName": "SyncParam",
          "content": "\n\n export interface SyncParam {subdomain: string;api_key: string;member_source: string;}"
        },
        {
          "fileName": "SyncMemberSource",
          "content": "export type SyncMemberSource = string;"
        },
        {
          "fileName": "LikeATweetTaskUserValue",
          "content": "\n\n export interface LikeATweetTaskUserValue {twitter_link: string;tweet_id: string;success: boolean;}"
        },
        {
          "fileName": "JoinStatus",
          "content": "export type JoinStatus = string;"
        },
        {
          "fileName": "TaskOnResponse",
          "content": "\n\n export interface TaskOnResponse {result: boolean;error: {code: string;message: string;};}"
        }
      ]
    },
    {
      "folderName": "TaskOnCommunityBenefit",
      "files": [
        {
          "fileName": "BenefitRankingValue",
          "content": "\n\n export interface BenefitRankingValue {from: number;to: number;community_id: number;}"
        },
        {
          "fileName": "BenefitRankingParams",
          "content": "\n\n export interface BenefitRankingParams {from: number;to: number;community_id: number;}"
        },
        {
          "fileName": "QuantityLimited",
          "content": "\n\n export interface QuantityLimited {enable: boolean;value: number;}"
        },
        {
          "fileName": "RewardTicketValue",
          "content": "\n\n export interface RewardTicketValue {code: string;}"
        },
        {
          "fileName": "RewardContentValue",
          "content": "import { RewardContentType } from \"../TaskOnCommunityBenefit/RewardContentType.ts\";import { RewardFileType } from \"../TaskOnCommunityBenefit/RewardFileType.ts\";\n\n export interface RewardContentValue {reward_content_type: RewardContentType;file_type: RewardFileType;value: string;}"
        },
        {
          "fileName": "RewardPromoteCodeValue",
          "content": "\n\n export interface RewardPromoteCodeValue {promote_value: string;}"
        },
        {
          "fileName": "RewardFileType",
          "content": "export type RewardFileType = string;"
        },
        {
          "fileName": "RewardContentType",
          "content": "export type RewardContentType = string;"
        },
        {
          "fileName": "PromoteCodeType",
          "content": "export type PromoteCodeType = string;"
        },
        {
          "fileName": "GetBenefitListByBResp",
          "content": "import { BenefitListItemB } from \"../TaskOnCommunityBenefit/BenefitListItemB.ts\";\n\n export interface GetBenefitListByBResp {total: number;list: BenefitListItemB[];}"
        },
        {
          "fileName": "BenefitTicketOrder",
          "content": "\n\n export interface BenefitTicketOrder {ticket: string[];}"
        },
        {
          "fileName": "CommunityIdAndName",
          "content": "\n\n export interface CommunityIdAndName {community_id: number;community_name: string;}"
        },
        {
          "fileName": "TaskTemplateListItemAndParams",
          "content": "import { TaskTemplateItem } from \"../Task/TaskTemplateItem.ts\";\n\n export interface TaskTemplateListItemAndParams {template: TaskTemplateItem;params: string;task_name: string;task_logo: string;id: number;}"
        },
        {
          "fileName": "GetTaskTemplateEcosystemListItem",
          "content": "\n\n export interface GetTaskTemplateEcosystemListItem {id: number;name: string;label: string;logo: string;}"
        },
        {
          "fileName": "BenefitOrderListItem",
          "content": "import { RewardType } from \"../Reward/RewardType.ts\";import { BenefitOrderStatus } from \"../TaskOnCommunityBenefit/BenefitOrderStatus.ts\";\n\n export interface BenefitOrderListItem {reward_type: RewardType;order_data: todo unknown undefined;order_id: number;benefit_id: number;status: BenefitOrderStatus;order_time: todo unknown number;name: string;picture: string;}"
        },
        {
          "fileName": "GetThirdPartyTasksListResp",
          "content": "import { TaskTemplateListItemAndParams } from \"../TaskOnCommunityBenefit/TaskTemplateListItemAndParams.ts\";\n\n export interface GetThirdPartyTasksListResp {data: TaskTemplateListItemAndParams[];total: number;}"
        },
        {
          "fileName": "GetThirdPartyTasksParams",
          "content": "import { Page } from \"../Common/Page.ts\";\n\n export interface GetThirdPartyTasksParams {ecosystem_id: number;page?: Page;}"
        },
        {
          "fileName": "GetClaimedBenefitHistoryResp",
          "content": "import { BenefitClaimedListItem } from \"../TaskOnCommunityBenefit/BenefitClaimedListItem.ts\";\n\n export interface GetClaimedBenefitHistoryResp {total: number;list: BenefitClaimedListItem[];}"
        },
        {
          "fileName": "GetClaimedBenefitHistoryParams",
          "content": "import { Page } from \"../Common/Page.ts\";\n\n export interface GetClaimedBenefitHistoryParams {benefit_id: number;page: Page;}"
        },
        {
          "fileName": "RecentBenefitItem",
          "content": "\n\n export interface RecentBenefitItem {benefit_id: number;avatar: string;user_name: string;claimed_time: number;}"
        },
        {
          "fileName": "BenefitDetail",
          "content": "import { RewardType } from \"../Reward/RewardType.ts\";import { BenefitCommonRule } from \"../TaskOnCommunityBenefit/BenefitCommonRule.ts\";import { EligibilityParamItem } from \"../Eligibility/EligibilityParamItem.ts\";import { BenefitStatus } from \"../TaskOnCommunityBenefit/BenefitStatus.ts\";\n\n export interface BenefitDetail {benefit_id: number;reward_type: RewardType;name: string;description: string;picture: string;user_points: number;claimed_amount: string;total_supply: string;delisted: boolean;benefit_data: todo unknown undefined;rule: BenefitCommonRule;eligibility: EligibilityParamItem[];status: BenefitStatus;}"
        },
        {
          "fileName": "GetBenefitOrderListParams",
          "content": "import { Page } from \"../Common/Page.ts\";import { CommunityIdOrKeyParams } from \"../TaskOnCommunity/CommunityIdOrKeyParams.ts\";\n\n export interface GetBenefitOrderListParams {page: Page;community_params: CommunityIdOrKeyParams;}"
        },
        {
          "fileName": "CreatBenefitOrderParams",
          "content": "\n\n export interface CreatBenefitOrderParams {benefit_id: string;}"
        },
        {
          "fileName": "BenefitOrderDetail",
          "content": "import { BenefitOrderStatus } from \"../TaskOnCommunityBenefit/BenefitOrderStatus.ts\";import { RewardType } from \"../Reward/RewardType.ts\";\n\n export interface BenefitOrderDetail {name: string;picture: string;description: string;order_time: number;redeemed_points: string;order_status: BenefitOrderStatus;order_id: number;reward_type: RewardType;order_data: todo unknown undefined;benefit_id: number;}"
        },
        {
          "fileName": "BenefitOrderDiscord",
          "content": "\n\n export interface BenefitOrderDiscord {discord_role_name: string;}"
        },
        {
          "fileName": "BenefitOrderNft",
          "content": "import { RewardFileType } from \"../TaskOnCommunityBenefit/RewardFileType.ts\";\n\n export interface BenefitOrderNft {collection_name: string;token_uri: string;chain: string;chain_icon: string;file_type: RewardFileType;nft_id: string;}"
        },
        {
          "fileName": "BenefitOrderToken",
          "content": "\n\n export interface BenefitOrderToken {amount: string;token_name: string;chain: string;chain_icon: string;}"
        },
        {
          "fileName": "BenefitOrderStatus",
          "content": "export type BenefitOrderStatus = string;"
        },
        {
          "fileName": "GetBenefitListResp",
          "content": "import { BenefitListItem } from \"../TaskOnCommunityBenefit/BenefitListItem.ts\";\n\n export interface GetBenefitListResp {list: BenefitListItem[];total: number;}"
        },
        {
          "fileName": "BenefitIdParams",
          "content": "\n\n export interface BenefitIdParams {benefit_id: number;}"
        },
        {
          "fileName": "BenefitClaimedListItem",
          "content": "\n\n export interface BenefitClaimedListItem {avatar: string;user_name: string;claimed_time: number;}"
        },
        {
          "fileName": "BenefitListItem",
          "content": "import { TimeLimited } from \"../TaskOnCommunityBenefit/TimeLimited.ts\";import { BenefitStatus } from \"../TaskOnCommunityBenefit/BenefitStatus.ts\";import { EligibilityParamItem } from \"../Eligibility/EligibilityParamItem.ts\";import { RewardType } from \"../Reward/RewardType.ts\";\n\n export interface BenefitListItem {name: string;picture: string;time_limited?: TimeLimited;user_points?: number;claimed_amount: string;total_supply: string;price: string;redeem_points: number;points_name: string;benefit_status: BenefitStatus;benefit_id: number;eligibility_express: string;eligibility: EligibilityParamItem[];reward_type: RewardType;}"
        },
        {
          "fileName": "BenefitStatus",
          "content": "export type BenefitStatus = string;"
        },
        {
          "fileName": "BenefitListItemB",
          "content": "import { RewardType } from \"../Reward/RewardType.ts\";import { BenefitStatus } from \"../TaskOnCommunityBenefit/BenefitStatus.ts\";\n\n export interface BenefitListItemB {name: string;reward_type: RewardType;claimed_amount: string;total_supply: string;status: BenefitStatus;benefit_id: number;download_link: string;}"
        },
        {
          "fileName": "BenefitType",
          "content": "export type BenefitType = string;"
        },
        {
          "fileName": "DeleteBenefitParam",
          "content": "\n\n export interface DeleteBenefitParam {benefit_id: number;}"
        },
        {
          "fileName": "RewardTicketParam",
          "content": "\n\n export interface RewardTicketParam {url: string;count: number;}"
        },
        {
          "fileName": "RewardContentParam",
          "content": "import { RewardContentType } from \"../TaskOnCommunityBenefit/RewardContentType.ts\";import { RewardFileType } from \"../TaskOnCommunityBenefit/RewardFileType.ts\";\n\n export interface RewardContentParam {reward_content_type: RewardContentType;file_type?: RewardFileType;value: string;}"
        },
        {
          "fileName": "RewardPromoteCodeParam",
          "content": "import { PromoteCodeType } from \"../TaskOnCommunityBenefit/PromoteCodeType.ts\";\n\n export interface RewardPromoteCodeParam {promote_code_type: PromoteCodeType;promote_value: string;count: number;}"
        },
        {
          "fileName": "RewardWlValue",
          "content": "\n\n export interface RewardWlValue {chain: string;chain_icon: string;}"
        },
        {
          "fileName": "BenefitDiscordRole",
          "content": "\n\n export interface BenefitDiscordRole {discord_role: string;discord_server_role: string;role_name: string;}"
        },
        {
          "fileName": "BenefitNft",
          "content": "\n\n export interface BenefitNft {nft_collection_meta_id: string;collection_name: string;maximum: number;network: string;collection_address: string;}"
        },
        {
          "fileName": "BenefitToken",
          "content": "\n\n export interface BenefitToken {token_id: number;token_symbol: string;total_reward_amount: number;network: string;contract_address: string;}"
        },
        {
          "fileName": "TimeLimited",
          "content": "\n\n export interface TimeLimited {start: number;end: number;enable: boolean;}"
        },
        {
          "fileName": "BenefitCommonRule",
          "content": "import { QuantityLimited } from \"../TaskOnCommunityBenefit/QuantityLimited.ts\";import { TimeLimited } from \"../TaskOnCommunityBenefit/TimeLimited.ts\";\n\n export interface BenefitCommonRule {redeem_points: number;quantity_limited?: QuantityLimited;time_limited?: TimeLimited;token_price?: string;}"
        },
        {
          "fileName": "SetBenefitParam",
          "content": "import { RewardType } from \"../Reward/RewardType.ts\";import { BenefitCommonRule } from \"../TaskOnCommunityBenefit/BenefitCommonRule.ts\";import { LockedAssetInRewardSummary } from \"../Asset/LockedAssetInRewardSummary.ts\";\n\n export interface SetBenefitParam {id: number;community_id: number;name: string;picture: string;description?: string;reward_type: RewardType;reward_data: todo unknown undefined;rule: BenefitCommonRule;is_draft: boolean;eligibility_express: string;eligibility: object[];locked_assets?: LockedAssetInRewardSummary;}"
        }
      ]
    },
    {
      "folderName": "TaskOnCommunitySprint",
      "files": [
        {
          "fileName": "GetSprintSimpleInfoByTaskIdsResp",
          "content": "import { GetAllSprintNameListItem } from \"../TaskOnCommunity/GetAllSprintNameListItem.ts\";\n\n export interface GetSprintSimpleInfoByTaskIdsResp {is_last_task: boolean;sprints: GetAllSprintNameListItem[];}"
        },
        {
          "fileName": "GetTabSprintListItem",
          "content": "import { CampaignStatus } from \"../Campaign/CampaignStatus.ts\";\n\n export interface GetTabSprintListItem {id: number;name: string;status: CampaignStatus;}"
        },
        {
          "fileName": "GetTabSprintListResp",
          "content": "import { SprintListItem } from \"../TaskOnCommunity/SprintListItem.ts\";\n\n export interface GetTabSprintListResp {ongoing: SprintListItem[];upcoming: SprintListItem[];}"
        }
      ]
    },
    {
      "folderName": "TaskOnCommunityRewardAndAsset",
      "files": [
        {
          "fileName": "ClaimableNftRewardItem",
          "content": "import { CampaignType } from \"../Campaign/CampaignType.ts\";\n\n export interface ClaimableNftRewardItem {campaign_type: CampaignType;campaign_id: number;campaign_name: string;referral_reward_id?: number;referral_reward_name?: string;chain: string;chain_label: string;chain_logo: string;collection_image: string;collection_name: string;collection_id: string;collection_address: string;claimable: boolean;community_id?: number;community_key?: string;community_dapp_domain?: string;}"
        }
      ]
    },
    {
      "folderName": "TaskTemplate",
      "files": [
        {
          "fileName": "SelectSetup",
          "content": "import { OptionItem } from \"../Common/OptionItem.ts\";\n\n export interface SelectSetup {options: OptionItem[];default_value?: todo unknown undefined;placeholder: string;}"
        },
        {
          "fileName": "SetupRequiredInfo",
          "content": "export type SetupRequiredInfo = string;"
        },
        {
          "fileName": "BusinessFormItem",
          "content": "\n\n export interface BusinessFormItem {name: string;value: string;}"
        },
        {
          "fileName": "NftSetup",
          "content": "\n\n export interface NftSetup {placeholder?: string;}"
        },
        {
          "fileName": "TokenSetup",
          "content": "\n\n export interface TokenSetup {placeholder?: string;}"
        },
        {
          "fileName": "DescriptionInfo",
          "content": "\n\n export interface DescriptionInfo {content: string;link: string;}"
        },
        {
          "fileName": "DependsType",
          "content": "\n\n export interface DependsType {depends: string[];}"
        },
        {
          "fileName": "TaskTemplateDesc",
          "content": "\n\n export interface TaskTemplateDesc {content: string;link: string;}"
        },
        {
          "fileName": "ClassEnum",
          "content": "export type ClassEnum = string;"
        },
        {
          "fileName": "ValueRequirementSetup",
          "content": "import { SetupRequiredInfo } from \"../TaskTemplate/SetupRequiredInfo.ts\";\n\n export interface ValueRequirementSetup {required_info?: SetupRequiredInfo;support_usd?: boolean;support_amount?: boolean;}"
        },
        {
          "fileName": "ConfigFormItem",
          "content": "import { FormItemType } from \"../TaskTemplate/FormItemType.ts\";import { FormItemSetup } from \"../TaskTemplate/FormItemSetup.ts\";\n\n export interface ConfigFormItem {name: string;intro: string;required: string;type: FormItemType;setup?: FormItemSetup;}"
        },
        {
          "fileName": "PlatformInfo",
          "content": "\n\n export interface PlatformInfo {id: string;version?: string;networks?: string[];}"
        },
        {
          "fileName": "NetworkSetup",
          "content": "\n\n export interface NetworkSetup {networks?: string[];placeholder?: string;}"
        },
        {
          "fileName": "ApiTemplateParams",
          "content": "\n\n export interface ApiTemplateParams {title_express: string;icon: string;from?: todo unknown number;to?: todo unknown number;}"
        },
        {
          "fileName": "ApiTemplateDetail",
          "content": "\n\n export interface ApiTemplateDetail {icon: string;title: string;protocol_version: string;need_pass_test: string;}"
        },
        {
          "fileName": "VerifyApiConfig",
          "content": "import { UserIdentityType } from \"../TaskTemplate/UserIdentityType.ts\";import { PlatformInfo } from \"../TaskTemplate/PlatformInfo.ts\";import { ConfigFormItem } from \"../TaskTemplate/ConfigFormItem.ts\";\n\n export interface VerifyApiConfig {name: string;class: string;category: string;intro?: string;protocol_version: string;user_identity_type: UserIdentityType;need_pass_test: boolean;title_express: string;platform: PlatformInfo;params: ConfigFormItem[];}"
        },
        {
          "fileName": "FormItemSetup",
          "content": ""
        },
        {
          "fileName": "AddressSetup",
          "content": "\n\n export interface AddressSetup {placeholder?: string;}"
        },
        {
          "fileName": "UrlSetup",
          "content": "\n\n export interface UrlSetup {placeholder?: string;}"
        },
        {
          "fileName": "NumberSetup",
          "content": "\n\n export interface NumberSetup {placeholder?: string;decimal?: todo unknown number;}"
        },
        {
          "fileName": "TextSetup",
          "content": "\n\n export interface TextSetup {placeholder?: string;maxlength?: string;}"
        },
        {
          "fileName": "FormItemType",
          "content": "export type FormItemType = string;"
        },
        {
          "fileName": "TemplateFormItem",
          "content": "import { FormItemType } from \"../TaskTemplate/FormItemType.ts\";import { FormItemSetup } from \"../TaskTemplate/FormItemSetup.ts\";\n\n export interface TemplateFormItem {name: string;label: string;required?: boolean;type: FormItemType;depends_on?: string[];setup: FormItemSetup;desc: string;hint?: string;}"
        },
        {
          "fileName": "SpecialFormItemId",
          "content": "export type SpecialFormItemId = string;"
        },
        {
          "fileName": "TitleInfo",
          "content": "\n\n export interface TitleInfo {icon: string;customer_hint?: string;business_hint?: string;custom_title?: string;title: string;customer_title_express: string;customer_icon: string;}"
        },
        {
          "fileName": "TaskTemplate",
          "content": "import { TemplateInfo } from \"../TaskTemplate/TemplateInfo.ts\";import { TitleInfo } from \"../TaskTemplate/TitleInfo.ts\";import { DescriptionInfo } from \"../TaskTemplate/DescriptionInfo.ts\";import { TemplateFormItem } from \"../TaskTemplate/TemplateFormItem.ts\";\n\n export interface TaskTemplate {api_config_id: string;template_info: TemplateInfo;title_info: TitleInfo;description?: DescriptionInfo;parameters: TemplateFormItem[];}"
        },
        {
          "fileName": "TemplateInfo",
          "content": "import { UserIdentityType } from \"../TaskTemplate/UserIdentityType.ts\";\n\n export interface TemplateInfo {protocol_version: string;user_identity_type: UserIdentityType;need_pass_test: boolean;description_disabled?: boolean;verifier_url?: string;}"
        },
        {
          "fileName": "UserIdentityType",
          "content": "export type UserIdentityType = string;"
        }
      ]
    },
    {
      "folderName": "Task",
      "files": [
        {
          "fileName": "ChangedTaskItem",
          "content": "import { ChangeType } from \"../Common/ChangeType.ts\";\n\n export interface ChangedTaskItem {change_type: ChangeType;task_id: number;}"
        },
        {
          "fileName": "JoinCommunityValue",
          "content": "\n\n export interface JoinCommunityValue {community_name: string;community_id: number;community_key: string;origin: string;}"
        },
        {
          "fileName": "JoinCommunityParams",
          "content": "\n\n export interface JoinCommunityParams {community_name: string;community_id?: number;}"
        },
        {
          "fileName": "QuoteMultipleTwitterWithHashTagValue",
          "content": "\n\n export interface QuoteMultipleTwitterWithHashTagValue {hash_tag: string;twitters: object[];}"
        },
        {
          "fileName": "QuoteMultipleTwitterWithHashTagParams",
          "content": "\n\n export interface QuoteMultipleTwitterWithHashTagParams {twitter_link: string[];hash_tag: string;}"
        },
        {
          "fileName": "CommonTemplateAsset",
          "content": "import { CommonTemplateAssetType } from \"../Task/CommonTemplateAssetType.ts\";\n\n export interface CommonTemplateAsset {type: CommonTemplateAssetType;chain_name: string;chain_label: string;asset_name: string;contract: string;}"
        },
        {
          "fileName": "CommonTemplateAssetType",
          "content": "export type CommonTemplateAssetType = string;"
        },
        {
          "fileName": "InviteUserTaskValue",
          "content": "\n\n export interface InviteUserTaskValue {invited_count: number;}"
        },
        {
          "fileName": "QuoteMultipleTwitterParams",
          "content": "\n\n export interface QuoteMultipleTwitterParams {twitter_link: string[];tags?: string;extra?: string;friends_count?: number;}"
        },
        {
          "fileName": "PostATweetValue",
          "content": "\n\n export interface PostATweetValue {content: string;}"
        },
        {
          "fileName": "PostATweetParams",
          "content": "\n\n export interface PostATweetParams {content: string;}"
        },
        {
          "fileName": "QuoteMultipleTwitterValue",
          "content": "\n\n export interface QuoteMultipleTwitterValue {friends_count?: number;tags: string;twitters: object[];}"
        },
        {
          "fileName": "MultipleTwitterValue",
          "content": "import { TweetTaskValue } from \"../Task/TweetTaskValue.ts\";\n\n export interface MultipleTwitterValue {items: TweetTaskValue[];}"
        },
        {
          "fileName": "DailyConnectValue",
          "content": "export type DailyConnectValue = string;"
        },
        {
          "fileName": "InviteValue",
          "content": "import { CommunityInviteDistributeType } from \"../TaskOnCommunity/CommunityInviteDistributeType.ts\";import { CommunityInviteLayerItem } from \"../TaskOnCommunity/CommunityInviteLayerItem.ts\";\n\n export interface InviteValue {distribute_type: CommunityInviteDistributeType;points_per_invitee: number;max_claims: number;reward_tier: CommunityInviteLayerItem[];}"
        },
        {
          "fileName": "DailyConnectParams",
          "content": "export type DailyConnectParams = string;"
        },
        {
          "fileName": "LikeMultipleTwitterParams",
          "content": "\n\n export interface LikeMultipleTwitterParams {twitter_links: string[];}"
        },
        {
          "fileName": "InviteParams",
          "content": "import { CommunityInviteDistributeType } from \"../TaskOnCommunity/CommunityInviteDistributeType.ts\";import { CommunityInviteLayerItem } from \"../TaskOnCommunity/CommunityInviteLayerItem.ts\";\n\n export interface InviteParams {distribute_type: CommunityInviteDistributeType;points_per_invitee: number;max_claims: number;reward_tier: CommunityInviteLayerItem[];}"
        },
        {
          "fileName": "SetTaskReq",
          "content": "import { CommunityTaskInfo } from \"../TaskOnCommunity/CommunityTaskInfo.ts\";\n\n export interface SetTaskReq {task_params: CommunityTaskInfo;community_id: number;}"
        },
        {
          "fileName": "TaskIssueSubscribe",
          "content": "\n\n export interface TaskIssueSubscribe {task_id: number;enabled: boolean;}"
        },
        {
          "fileName": "ReviewResult",
          "content": "import { TaskReviewResult } from \"../Task/TaskReviewResult.ts\";\n\n export interface ReviewResult {id: number;review_result: TaskReviewResult;}"
        },
        {
          "fileName": "TaskReviewResult",
          "content": "export type TaskReviewResult = string;"
        },
        {
          "fileName": "TaskIssue",
          "content": "\n\n export interface TaskIssue {task_ids: number[];description?: string;}"
        },
        {
          "fileName": "SubmitTaskResult",
          "content": "\n\n export interface SubmitTaskResult {success_tasks: number[];}"
        },
        {
          "fileName": "SubmitCampaignTaskValue",
          "content": "\n\n export interface SubmitCampaignTaskValue {campaign_id: number;owner_id: string;owner_name: string;}"
        },
        {
          "fileName": "SubmitCampaignTaskParams",
          "content": "\n\n export interface SubmitCampaignTaskParams {campaign_id: number;owner_id: number;owner_name?: string;}"
        },
        {
          "fileName": "GetTaskClass",
          "content": "export type GetTaskClass = string;"
        },
        {
          "fileName": "GetTaskTemplateResult",
          "content": "import { TaskClassType } from \"../Task/TaskClassType.ts\";\n\n export interface GetTaskTemplateResult {class_types: TaskClassType[];}"
        },
        {
          "fileName": "SetTaskPlatform",
          "content": "import { TaskPlatform } from \"../Task/TaskPlatform.ts\";import { TaskTemplateItem } from \"../Task/TaskTemplateItem.ts\";\n\n export interface SetTaskPlatform {platform: TaskPlatform;tasks: TaskTemplateItem;}"
        },
        {
          "fileName": "SetTaskList",
          "content": "import { SetTaskCategory } from \"../Task/SetTaskCategory.ts\";\n\n export interface SetTaskList {OnChain: SetTaskCategory[];OffChain: SetTaskCategory[];}"
        },
        {
          "fileName": "SetTaskCategory",
          "content": "import { TaskCategory } from \"../Task/TaskCategory.ts\";import { SetTaskPlatform } from \"../Task/SetTaskPlatform.ts\";\n\n export interface SetTaskCategory {category: TaskCategory;platforms: SetTaskPlatform[];}"
        },
        {
          "fileName": "CommonTemplateTaskParamItem",
          "content": "import { TemplateFormValueItem } from \"../ApiTemplateValue/TemplateFormValueItem.ts\";\n\n export interface CommonTemplateTaskParamItem {value: TemplateFormValueItem;}"
        },
        {
          "fileName": "TaskTemplateItem",
          "content": "import { TaskTemplate } from \"../TaskTemplate/TaskTemplate.ts\";import { GetTaskClass } from \"../Task/GetTaskClass.ts\";\n\n export interface TaskTemplateItem {template_id: string;name: string;content: TaskTemplate;category: string;platform: string;class_type: GetTaskClass;is_common_template_task: boolean;icon: string;avatar: string;desc: string;support_recurrence: number;support_time_frame?: boolean;support_condition: boolean;support_validation_time_frame: boolean;}"
        },
        {
          "fileName": "GetTaskTemplateOptions",
          "content": "import { GetTaskClass } from \"../Task/GetTaskClass.ts\";\n\n export interface GetTaskTemplateOptions {task_class?: GetTaskClass;task_platform?: string;task_category?: string;name_like?: string;}"
        },
        {
          "fileName": "TaskClassType",
          "content": "import { TaskCategory } from \"../Task/TaskCategory.ts\";\n\n export interface TaskClassType {class_type: string;categories: TaskCategory[];}"
        },
        {
          "fileName": "TaskPlatform",
          "content": "import { TaskTemplateItem } from \"../Task/TaskTemplateItem.ts\";\n\n export interface TaskPlatform {platform: string;task_templates: TaskTemplateItem[];icon: string;}"
        },
        {
          "fileName": "TaskCategory",
          "content": "import { TaskPlatform } from \"../Task/TaskPlatform.ts\";\n\n export interface TaskCategory {category: string;platforms: TaskPlatform[];}"
        },
        {
          "fileName": "CommonTemplateTaskValue",
          "content": "import { UserIdentityType } from \"../TaskTemplate/UserIdentityType.ts\";import { CommonTemplateAsset } from \"../Task/CommonTemplateAsset.ts\";\n\n export interface CommonTemplateTaskValue {custom_title?: string;title_express: string;icon: string;desc?: string;start_time?: number;end_time?: number;network?: string;link?: string;user_identity_type: UserIdentityType;hint?: string;assets?: CommonTemplateAsset[];action_label?: string;action_link?: string;is_link_task?: boolean;}"
        },
        {
          "fileName": "CommonTemplateTaskParams",
          "content": "import { CommonTemplateTaskParamItem } from \"../Task/CommonTemplateTaskParamItem.ts\";\n\n export interface CommonTemplateTaskParams {desc: string;link: string;test_address?: string;values: CommonTemplateTaskParamItem[];extra?: string;}"
        },
        {
          "fileName": "ChooseOptionParams",
          "content": "\n\n export interface ChooseOptionParams {label: string;text?: string;image?: string;is_answer: boolean;}"
        },
        {
          "fileName": "QuizChooseUserTaskValue",
          "content": "\n\n export interface QuizChooseUserTaskValue {answer: string[];user_selected: string[];correct: boolean;}"
        },
        {
          "fileName": "SurveyChooseUserTaskValue",
          "content": "\n\n export interface SurveyChooseUserTaskValue {user_selected: string[];}"
        },
        {
          "fileName": "PowQaWithAnswerUserTaskValue",
          "content": "\n\n export interface PowQaWithAnswerUserTaskValue {user_answer: string;correct: boolean;answer?: string;}"
        },
        {
          "fileName": "PowUserTaskValue",
          "content": "export type PowUserTaskValue = string;"
        },
        {
          "fileName": "PowQaUserTaskValue",
          "content": "export type PowQaUserTaskValue = string;"
        },
        {
          "fileName": "UserTaskValue",
          "content": ""
        },
        {
          "fileName": "PowQaWithAnswerTaskValue",
          "content": "\n\n export interface PowQaWithAnswerTaskValue {desc: string;}"
        },
        {
          "fileName": "PowQaWithAnswerTaskParams",
          "content": "\n\n export interface PowQaWithAnswerTaskParams {desc: string;answer: string;extra?: string;}"
        },
        {
          "fileName": "ChooseOptionType",
          "content": "export type ChooseOptionType = string;"
        },
        {
          "fileName": "SurveyChooseTaskValue",
          "content": "import { ChooseOptionType } from \"../Task/ChooseOptionType.ts\";import { ChooseOptionValue } from \"../Task/ChooseOptionValue.ts\";\n\n export interface SurveyChooseTaskValue {question: string;set_question_as_title: boolean;desc: string;is_single_choice: boolean;option_type: ChooseOptionType;options: ChooseOptionValue[];}"
        },
        {
          "fileName": "SurveyChooseTaskParams",
          "content": "import { ChooseOptionType } from \"../Task/ChooseOptionType.ts\";import { ChooseOptionParams } from \"../Task/ChooseOptionParams.ts\";\n\n export interface SurveyChooseTaskParams {question: string;set_question_as_title: boolean;desc: string;is_single_choice: boolean;option_type: ChooseOptionType;options: ChooseOptionParams[];extra?: string;}"
        },
        {
          "fileName": "QuizChooseTaskValue",
          "content": "import { ChooseOptionType } from \"../Task/ChooseOptionType.ts\";import { ChooseOptionValue } from \"../Task/ChooseOptionValue.ts\";\n\n export interface QuizChooseTaskValue {question: string;set_question_as_title: boolean;desc: string;is_single_choice: boolean;option_type: ChooseOptionType;options: ChooseOptionValue[];}"
        },
        {
          "fileName": "QuizChooseTaskParams",
          "content": "import { ChooseOptionType } from \"../Task/ChooseOptionType.ts\";import { ChooseOptionValue } from \"../Task/ChooseOptionValue.ts\";\n\n export interface QuizChooseTaskParams {question: string;set_question_as_title: boolean;desc: string;is_single_choice: boolean;option_type: ChooseOptionType;options: ChooseOptionValue[];extra?: string;}"
        },
        {
          "fileName": "ChooseOptionValue",
          "content": "\n\n export interface ChooseOptionValue {label: string;text?: string;image?: string;is_answer: boolean;selected_user_num?: number;selected_user_percent?: string;}"
        },
        {
          "fileName": "YoutubeTaskValue",
          "content": "\n\n export interface YoutubeTaskValue {link: string;desc?: string;}"
        },
        {
          "fileName": "YoutubeTaskParams",
          "content": "\n\n export interface YoutubeTaskParams {link: string;desc?: string;extra?: string;}"
        },
        {
          "fileName": "QuoteAndHashTagTaskValue",
          "content": "\n\n export interface QuoteAndHashTagTaskValue {twitter_handle: string;tweet_id: string;hash_tag: string;}"
        },
        {
          "fileName": "QuoteAndHashTagTaskParams",
          "content": "\n\n export interface QuoteAndHashTagTaskParams {twitter_link: string;hash_tag: string;extra?: string;}"
        },
        {
          "fileName": "SubmitLandingTaskParams",
          "content": "import { LandingTaskAnswer } from \"../Task/LandingTaskAnswer.ts\";\n\n export interface SubmitLandingTaskParams {tasks: LandingTaskAnswer[];}"
        },
        {
          "fileName": "LandingTaskAnswer",
          "content": "\n\n export interface LandingTaskAnswer {task_id: number;answer: string;}"
        },
        {
          "fileName": "TweetTaskValue",
          "content": "\n\n export interface TweetTaskValue {twitter_link: string;tweet_id: string;}"
        },
        {
          "fileName": "LikeATweetTaskParams",
          "content": "\n\n export interface LikeATweetTaskParams {twitter_link: string;extra?: string;}"
        },
        {
          "fileName": "DiscordRole",
          "content": "\n\n export interface DiscordRole {id: string;name: string;}"
        },
        {
          "fileName": "OuterApiTaskValue",
          "content": "\n\n export interface OuterApiTaskValue {api_url: string;desc: string;target_url: string;icon: string;network: string;}"
        },
        {
          "fileName": "OuterApiTaskParams",
          "content": "\n\n export interface OuterApiTaskParams {api_url: string;access_token?: string;target_url: string;extra?: string;title: string;icon?: string;desc?: string;network: string;}"
        },
        {
          "fileName": "TokenBalanceTaskValue",
          "content": "\n\n export interface TokenBalanceTaskValue {pick_from_list: boolean;token_name: string;token_address: string;amount: string;chain: string;chain_label: string;}"
        },
        {
          "fileName": "PowTaskValue",
          "content": "import { PowTaskType } from \"../Task/PowTaskType.ts\";\n\n export interface PowTaskValue {desc: string;type: PowTaskType;average_review_time?: number;}"
        },
        {
          "fileName": "PowQaTaskValue",
          "content": "\n\n export interface PowQaTaskValue {desc: string;average_review_time?: number;}"
        },
        {
          "fileName": "SpecificNftHolderTaskValue",
          "content": "\n\n export interface SpecificNftHolderTaskValue {pick_from_list: string;nft_address: string;chain: string;nft_type: string;amount: number;nft_name: string;chain_label: string;}"
        },
        {
          "fileName": "QuoteAndTagTaskValue",
          "content": "\n\n export interface QuoteAndTagTaskValue {twitter_handle: string;tweet_id: string;tags_users?: string;friends_count?: number;}"
        },
        {
          "fileName": "JoinTelegramTaskValue",
          "content": "\n\n export interface JoinTelegramTaskValue {channel_name: string;invite_link: string;is_public: boolean;need_verify_bot?: boolean;}"
        },
        {
          "fileName": "JoinDiscordTaskValue",
          "content": "import { DiscordRole } from \"../Task/DiscordRole.ts\";\n\n export interface JoinDiscordTaskValue {project_name: string;discord_server: string;invite_link: string;roles?: DiscordRole[];}"
        },
        {
          "fileName": "LinkTaskValue",
          "content": "\n\n export interface LinkTaskValue {title: string;link_label: string;link: string;content: string;}"
        },
        {
          "fileName": "RetweetTaskValue",
          "content": "\n\n export interface RetweetTaskValue {project_name: string;tweet_id: string;retweet_of: string;}"
        },
        {
          "fileName": "FollowTwitterTaskValue",
          "content": "\n\n export interface FollowTwitterTaskValue {project_name: string;user_to_follow: string;user_to_follow_id: string;}"
        },
        {
          "fileName": "PowQaTaskParams",
          "content": "\n\n export interface PowQaTaskParams {desc: string;extra?: string;}"
        },
        {
          "fileName": "PowTaskParams",
          "content": "import { PowTaskType } from \"../Task/PowTaskType.ts\";\n\n export interface PowTaskParams {desc: string;type: PowTaskType;extra?: string;}"
        },
        {
          "fileName": "PowTaskType",
          "content": "export type PowTaskType = string;"
        },
        {
          "fileName": "TaskTemplateId",
          "content": "export type TaskTemplateId = string;"
        },
        {
          "fileName": "TaskValueItem",
          "content": "import { TaskTemplateId } from \"../Task/TaskTemplateId.ts\";\n\n export interface TaskValueItem {id: number;template_id: TaskTemplateId;params: string;chain_types: string[];points: todo unknown number;is_optional: boolean;platform: string;is_troubled: boolean;class_type: string;is_ecosystem_task: boolean;}"
        },
        {
          "fileName": "TaskParamItem",
          "content": "import { TaskTemplateId } from \"../Task/TaskTemplateId.ts\";\n\n export interface TaskParamItem {template_id: TaskTemplateId;params: string;points: todo unknown number;is_optional: boolean;id?: number;is_template_task: boolean;is_ecosystem_task: boolean;}"
        },
        {
          "fileName": "SubmitTaskParams",
          "content": "import { KolChannel } from \"../Kol/KolChannel.ts\";\n\n export interface SubmitTaskParams {task_ids: number[];value: string;pre_submit: boolean;channel?: KolChannel;kol_handle?: string;invite_code?: string;event_invite_code?: string;}"
        },
        {
          "fileName": "TaskUserList",
          "content": "import { TaskUserListItem } from \"../Task/TaskUserListItem.ts\";\n\n export interface TaskUserList {data: TaskUserListItem[];total: number;}"
        },
        {
          "fileName": "GetTaskUserListParams",
          "content": "import { UserTaskStatus } from \"../Task/UserTaskStatus.ts\";import { Page } from \"../Common/Page.ts\";\n\n export interface GetTaskUserListParams {task_id: number;user_task_status: UserTaskStatus;page: Page;}"
        },
        {
          "fileName": "TaskUserListItem",
          "content": "\n\n export interface TaskUserListItem {user_id: number;avatar: string;address: string;campaign_id: number;campaign_name: string;participate_time: number;task_id: number;}"
        },
        {
          "fileName": "TaskStatisticsInfo",
          "content": "\n\n export interface TaskStatisticsInfo {visitor_number: number;sumbitter_number: number;qualifier_number: number;winner_number: number;}"
        },
        {
          "fileName": "TaskSelectOption",
          "content": "\n\n export interface TaskSelectOption {id: number;template_id: string;params: string;}"
        },
        {
          "fileName": "UserTaskStatus",
          "content": "import { UserTaskValue } from \"../Task/UserTaskValue.ts\";\n\n export interface UserTaskStatus {is_submitter: boolean;is_qualifier: boolean;is_winner: boolean;submit_failed: boolean;is_subscribed_recover: boolean;value?: UserTaskValue;}"
        },
        {
          "fileName": "LinkTaskParams",
          "content": "\n\n export interface LinkTaskParams {title: string;link_label: string;link: string;content: string;extra?: string;}"
        },
        {
          "fileName": "TokenBalanceTaskParams",
          "content": "\n\n export interface TokenBalanceTaskParams {pick_from_list: boolean;token_name: string;token_contract_addr: string;network: string;min_balance: string;extra?: string;}"
        },
        {
          "fileName": "SpecificNftHolderTaskParams",
          "content": "\n\n export interface SpecificNftHolderTaskParams {pick_from_list: string;contract_address: string;network: string;nft_type: string;quantity: number;nft_name: string;extra?: string;}"
        },
        {
          "fileName": "QuoteAndTagTaskParams",
          "content": "\n\n export interface QuoteAndTagTaskParams {twitter_link: string;tags?: string;extra?: string;friends_count?: number;}"
        },
        {
          "fileName": "JoinTelegramTaskParams",
          "content": "\n\n export interface JoinTelegramTaskParams {is_public: boolean;channel_name: string;telegram_link: string;extra?: string;need_verify_bot: boolean;}"
        },
        {
          "fileName": "JoinDiscordTaskParams",
          "content": "import { DiscordRole } from \"../Task/DiscordRole.ts\";\n\n export interface JoinDiscordTaskParams {server_id: string;server_name: string;discord_link: string;extra?: string;roles?: DiscordRole[];}"
        },
        {
          "fileName": "RetweetTaskParams",
          "content": "\n\n export interface RetweetTaskParams {twitter_link: string;extra?: string;}"
        },
        {
          "fileName": "FollowTwitterTaskParams",
          "content": "\n\n export interface FollowTwitterTaskParams {twitter_handle: string;extra?: string;}"
        }
      ]
    },
    {
      "folderName": "Campaign",
      "files": [
        {
          "fileName": "GetCampaignListRes",
          "content": "import { GetCampaignsOptions } from \"../Campaign/GetCampaignsOptions.ts\";import { Page } from \"../Common/Page.ts\";\n\n export interface GetCampaignListRes {options?: GetCampaignsOptions;page: Page;}"
        },
        {
          "fileName": "CampaignWinnerReward",
          "content": "import { RewardValueInfo } from \"../Reward/RewardValueInfo.ts\";\n\n export interface CampaignWinnerReward {winner_index: number;layer_no: number;reward: RewardValueInfo[];}"
        },
        {
          "fileName": "AdPosition",
          "content": "export type AdPosition = string;"
        },
        {
          "fileName": "CampaignTaskReviewItem",
          "content": "import { TaskValueItem } from \"../Task/TaskValueItem.ts\";import { TaskReviewResult } from \"../Task/TaskReviewResult.ts\";\n\n export interface CampaignTaskReviewItem {user_id: number;user_name: string;task: TaskValueItem;user_submission: string;submit_time: number;result: TaskReviewResult;id: number;}"
        },
        {
          "fileName": "CampaignGuideTemplatesItem",
          "content": "\n\n export interface CampaignGuideTemplatesItem {template_name: string;template_id: number;}"
        },
        {
          "fileName": "GuideTabItem",
          "content": "import { CampaignListItem } from \"../Campaign/CampaignListItem.ts\";\n\n export interface GuideTabItem {guide_num: number;guide_campaign: CampaignListItem;}"
        },
        {
          "fileName": "CampaignTemplateGuideData",
          "content": "import { SimpleSpaceItem } from \"../Space/SimpleSpaceItem.ts\";import { GuideTabItem } from \"../Campaign/GuideTabItem.ts\";\n\n export interface CampaignTemplateGuideData {campaign_count: number;project_count: number;participant_count: number;selected_spaces: SimpleSpaceItem[];guide_tabs: GuideTabItem[];}"
        },
        {
          "fileName": "CampaignManageInfo",
          "content": "import { DidNotDistributeRewardReport } from \"../Credits/DidNotDistributeRewardReport.ts\";import { AirdropToolItem } from \"../Campaign/AirdropToolItem.ts\";import { DownloadStatus } from \"../Download/DownloadStatus.ts\";\n\n export interface CampaignManageInfo {need_upload_winner: boolean;need_upload_winner_reward: boolean;reward_report_status: DidNotDistributeRewardReport;has_kol: boolean;has_referral: boolean;can_airdrop: boolean;airdrop_tools: AirdropToolItem[];last_upload_time: number;participant_count: number;download_status: DownloadStatus;download_link: string;share_url: string;all_task_qualifier_generated?: boolean;}"
        },
        {
          "fileName": "CampaignSubmitterListItem",
          "content": "\n\n export interface CampaignSubmitterListItem {user_id: number;user_name: string;twitter_handle: string;discord: string;user_address: string;}"
        },
        {
          "fileName": "MySpaceOperatorItem",
          "content": "\n\n export interface MySpaceOperatorItem {space_id: number;space_avatar: string;space_name: string;}"
        },
        {
          "fileName": "CampaignConfig",
          "content": "import { CampaignGuideTemplatesItem } from \"../Campaign/CampaignGuideTemplatesItem.ts\";\n\n export interface CampaignConfig {campaign_min_recharge_amount: number;event_min_recharge_amount: number;campaign_guide_templates: CampaignGuideTemplatesItem[];}"
        },
        {
          "fileName": "DownloadStatusRespItem",
          "content": "import { DownloadStatus } from \"../Download/DownloadStatus.ts\";import { DownloadScene } from \"../Download/DownloadScene.ts\";\n\n export interface DownloadStatusRespItem {ref_id: number;status: DownloadStatus;download_link: string;scene: DownloadScene;}"
        },
        {
          "fileName": "DepositType",
          "content": "export type DepositType = string;"
        },
        {
          "fileName": "RewardTypeParam",
          "content": "export type RewardTypeParam = string;"
        },
        {
          "fileName": "StableTokenStatus",
          "content": "export type StableTokenStatus = string;"
        },
        {
          "fileName": "VerifyStatus",
          "content": "export type VerifyStatus = string;"
        },
        {
          "fileName": "CompletedEvent",
          "content": "\n\n export interface CompletedEvent {event_id: number;event_name: string;}"
        },
        {
          "fileName": "SubmitCampaignResult",
          "content": "import { CompletedEvent } from \"../Campaign/CompletedEvent.ts\";\n\n export interface SubmitCampaignResult {success: boolean;completed_event?: CompletedEvent;}"
        },
        {
          "fileName": "SetAirdropProjectParams",
          "content": "import { CampaignType } from \"../Campaign/CampaignType.ts\";import { CampaignStatus } from \"../Campaign/CampaignStatus.ts\";import { WinnerRewards } from \"../Winner/WinnerRewards.ts\";import { RewardInfo } from \"../Reward/RewardInfo.ts\";import { EligibilityParamItem } from \"../Eligibility/EligibilityParamItem.ts\";import { TaskParamItem } from \"../Task/TaskParamItem.ts\";import { LockedAssetInReward } from \"../Asset/LockedAssetInReward.ts\";import { CampaignCoHost } from \"../Campaign/CampaignCoHost.ts\";\n\n export interface SetAirdropProjectParams {id: number;owner_id: number;name: string;desc: string;campaign_start: number;campaign_end: number;campaign_image: string;campaign_type?: CampaignType;google_recaptcha: boolean;is_draft: boolean;campaign_status?: CampaignStatus;eligibility_express: string;winner_rewards: WinnerRewards;qualifier_rewards: RewardInfo[];eligs: EligibilityParamItem[];tasks: TaskParamItem[];min_finished_optional_task_num: todo unknown number;min_finished_optional_task_points: todo unknown number;locked_assets?: LockedAssetInReward[];is_preview: boolean;is_send_cohost_invite?: boolean;cohosts?: CampaignCoHost[];set_point_type: {};}"
        },
        {
          "fileName": "CampaignCoHost",
          "content": "\n\n export interface CampaignCoHost {cohost_id: number;cohost_name: string;cohost_avatar: string;}"
        },
        {
          "fileName": "NftSource",
          "content": "export type NftSource = string;"
        },
        {
          "fileName": "CampaignBriefList",
          "content": "import { CampaignBriefInfo } from \"../Campaign/CampaignBriefInfo.ts\";\n\n export interface CampaignBriefList {data: CampaignBriefInfo[];total: number;}"
        },
        {
          "fileName": "CampaignList",
          "content": "import { CampaignListItem } from \"../Campaign/CampaignListItem.ts\";\n\n export interface CampaignList {data: CampaignListItem[];total: number;}"
        },
        {
          "fileName": "CampaignType",
          "content": "export type CampaignType = string;"
        },
        {
          "fileName": "CampaignListItemBackup",
          "content": "import { WinnerDrawType } from \"../Winner/WinnerDrawType.ts\";import { AutomaticallyWinnerDrawType } from \"../Winner/AutomaticallyWinnerDrawType.ts\";import { RewardInfo } from \"../Reward/RewardInfo.ts\";import { ProjectCategory } from \"../User/ProjectCategory.ts\";\n\n export interface CampaignListItemBackup {id: number;name: string;desc: string;owner_id: string;owner_name: string;owner_avatar: string;owner_address: string;owner_verified: boolean;image: string;recaptcha: boolean;winner_draw_type: WinnerDrawType;automatically_winner_draw_type: AutomaticallyWinnerDrawType;is_draft: boolean;is_removed: boolean;is_end: boolean;campaign_level: number;is_landing_campaign: boolean;is_exclusive_campaign: boolean;start_time: todo unknown number;end_time: todo unknown number;max_winners: number;qualifier_rewards?: RewardInfo[];winner_rewards?: RewardInfo[];project_category: ProjectCategory;bg_color?: string;}"
        },
        {
          "fileName": "CampaignInfoBackup",
          "content": "import { WinnerDrawType } from \"../Winner/WinnerDrawType.ts\";import { AutomaticallyWinnerDrawType } from \"../Winner/AutomaticallyWinnerDrawType.ts\";import { CombineCampaignOperateTextInfo } from \"../Campaign/CombineCampaignOperateTextInfo.ts\";import { CampaignAuditResult } from \"../Campaign/CampaignAuditResult.ts\";import { EligibilityValueItem } from \"../Eligibility/EligibilityValueItem.ts\";import { TaskValueItem } from \"../Task/TaskValueItem.ts\";import { RewardInfo } from \"../Reward/RewardInfo.ts\";import { ProjectCategory } from \"../User/ProjectCategory.ts\";\n\n export interface CampaignInfoBackup {id: number;name: string;desc: string;owner_id: number;owner_name: string;owner_avatar: string;owner_verified: boolean;owner_address: string;image: string;recaptcha: boolean;eligibility_express?: string;is_draft: boolean;is_removed: boolean;is_end: boolean;campaign_level: number;start_time: number;end_time: number;max_winners: number;winner_draw_type: WinnerDrawType;automatically_winner_draw_type: AutomaticallyWinnerDrawType;is_landing_campaign: boolean;is_exclusive_campaign: boolean;combine_campaign_op_text?: CombineCampaignOperateTextInfo;audit?: {result: CampaignAuditResult;comment: string;};eligs: EligibilityValueItem[];tasks: TaskValueItem[];min_finished_optional_task_num: todo unknown number;min_finished_optional_task_points: string;qualifier_rewards: RewardInfo[];winner_rewards: RewardInfo[];from_supported_country: boolean;project_category: ProjectCategory;share_url: string;referral_reward_id?: number;}"
        },
        {
          "fileName": "SetCampaignParamsBackup",
          "content": "import { WinnerDrawType } from \"../Winner/WinnerDrawType.ts\";import { AutomaticallyWinnerDrawType } from \"../Winner/AutomaticallyWinnerDrawType.ts\";import { RewardInfo } from \"../Reward/RewardInfo.ts\";import { EligibilityParamItem } from \"../Eligibility/EligibilityParamItem.ts\";import { TaskParamItem } from \"../Task/TaskParamItem.ts\";import { LockedAssetInReward } from \"../Asset/LockedAssetInReward.ts\";\n\n export interface SetCampaignParamsBackup {id: number;owner_id: number;name: string;desc: string;campaign_start: number;campaign_end: number;campaign_image: string;google_recaptcha: boolean;is_draft: boolean;eligibility_express: string;max_winners: number;winner_draw_type: WinnerDrawType;automatically_winner_draw_type: AutomaticallyWinnerDrawType;winner_rewards: RewardInfo[];qualifier_rewards: RewardInfo[];eligs: EligibilityParamItem[];tasks: TaskParamItem[];min_finished_optional_task_num: todo unknown number;min_finished_optional_task_points: todo unknown number;locked_asset?: LockedAssetInReward;is_preview: boolean;}"
        },
        {
          "fileName": "CampaignInfo",
          "content": "import { CampaignType } from \"../Campaign/CampaignType.ts\";import { CampaignStatus } from \"../Campaign/CampaignStatus.ts\";import { CombineCampaignOperateTextInfo } from \"../Campaign/CombineCampaignOperateTextInfo.ts\";import { CampaignAuditResult } from \"../Campaign/CampaignAuditResult.ts\";import { EligibilityValueItem } from \"../Eligibility/EligibilityValueItem.ts\";import { TaskValueItem } from \"../Task/TaskValueItem.ts\";import { RewardInfo } from \"../Reward/RewardInfo.ts\";import { WinnerRewards } from \"../Winner/WinnerRewards.ts\";import { RewardInfoSimple } from \"../Reward/RewardInfoSimple.ts\";import { ProjectCategory } from \"../User/ProjectCategory.ts\";import { BUserBriefInfo } from \"../User/BUserBriefInfo.ts\";import { DidNotDistributeRewardReport } from \"../Credits/DidNotDistributeRewardReport.ts\";\n\n export interface CampaignInfo {id: number;name: string;desc: string;owner_id: number;owner_name: string;owner_avatar: string;owner_verified: boolean;owner_address: string;follower_count: number;campaign_type: CampaignType;image: string;recaptcha: boolean;eligibility_express?: string;is_draft: boolean;is_removed: boolean;is_end: boolean;campaign_status: CampaignStatus;campaign_level: number;start_time: number;end_time: number;is_landing_campaign: boolean;is_exclusive_campaign: boolean;combine_campaign_op_text?: CombineCampaignOperateTextInfo;audit?: {result: CampaignAuditResult;comment: string;};eligs: EligibilityValueItem[];tasks: TaskValueItem[];min_finished_optional_task_num: number;min_finished_optional_task_points: number;qualifier_rewards: RewardInfo[];winner_rewards: WinnerRewards[];winner_rewards_simple: RewardInfoSimple[];task_rewards: RewardInfo[];from_supported_country: boolean;project_category: ProjectCategory;share_url: string;referral_reward_id?: number;cohosts?: BUserBriefInfo[];reward_reported?: DidNotDistributeRewardReport;referral_reward?: RewardInfo;referral_reward_simple: RewardInfoSimple;extra_bonus?: string;}"
        },
        {
          "fileName": "UserCampaignRewardInfo",
          "content": "import { RewardValueInfo } from \"../Reward/RewardValueInfo.ts\";import { CampaignWinnerReward } from \"../Campaign/CampaignWinnerReward.ts\";\n\n export interface UserCampaignRewardInfo {qualifier_rewards: RewardValueInfo[];winner_rewards: CampaignWinnerReward[];}"
        },
        {
          "fileName": "TaskonDistributingInfoResult",
          "content": "import { TopWinner } from \"../User/TopWinner.ts\";import { CampaignListItem } from \"../Campaign/CampaignListItem.ts\";\n\n export interface TaskonDistributingInfoResult {token_amount: string;nft_count: number;whitelist_count: number;top_winner: TopWinner;campaign_counts: number;project_counts: number;campaigns: CampaignListItem[];network_count: number;is_winner: boolean;}"
        },
        {
          "fileName": "CampaignBriefInfo",
          "content": "import { CampaignStatus } from \"../Campaign/CampaignStatus.ts\";import { CampaignType } from \"../Campaign/CampaignType.ts\";\n\n export interface CampaignBriefInfo {campaign_id: todo unknown number;campaign_name: string;owner_id: todo unknown number;campaign_status: CampaignStatus;referral_reward_id: todo unknown number;start_time: number;end_time: number;campaign_type: CampaignType;}"
        },
        {
          "fileName": "ParticipantCampaignListItem",
          "content": "\n\n export interface ParticipantCampaignListItem {id: number;owner_id: number;owner_name: string;owner_avatar: string;campaign_name: string;participant: number;}"
        },
        {
          "fileName": "UserCampaignCompletedType",
          "content": "export type UserCampaignCompletedType = string;"
        },
        {
          "fileName": "SpaceCampaignListItem",
          "content": "import { UserCampaignCompletedType } from \"../Campaign/UserCampaignCompletedType.ts\";import { CampaignStatus } from \"../Campaign/CampaignStatus.ts\";import { RewardInfo } from \"../Reward/RewardInfo.ts\";import { RewardInfoSimple } from \"../Reward/RewardInfoSimple.ts\";\n\n export interface SpaceCampaignListItem {id: number;name: string;image: string;start_time: todo unknown number;end_time: todo unknown number;max_winners: number;user_completed: UserCampaignCompletedType;campaign_status: CampaignStatus;qualifier_rewards?: RewardInfo[];task_rewards: RewardInfo[];winner_rewards?: RewardInfoSimple[];}"
        },
        {
          "fileName": "CampaignOrderType",
          "content": "export type CampaignOrderType = string;"
        },
        {
          "fileName": "ModifyOngoingCampaignParams",
          "content": "import { TaskParamItem } from \"../Task/TaskParamItem.ts\";import { WinnerRewards } from \"../Winner/WinnerRewards.ts\";\n\n export interface ModifyOngoingCampaignParams {name: string;campaign_id: number;campaign_end: number;campaign_image: string;desc: string;tasks?: TaskParamItem[];winner_rewards?: WinnerRewards[];}"
        },
        {
          "fileName": "CampaignTrending",
          "content": "export type CampaignTrending = string;"
        },
        {
          "fileName": "AirdropToolItem",
          "content": "\n\n export interface AirdropToolItem {name: string;url: string;icon: string;}"
        },
        {
          "fileName": "SubmitCampaignRespData",
          "content": "\n\n export interface SubmitCampaignRespData {succeed: boolean;data?: {};}"
        },
        {
          "fileName": "CombineCampaignOperateTextInfo",
          "content": "import { CombineCampaignOperateTextItem } from \"../Campaign/CombineCampaignOperateTextItem.ts\";\n\n export interface CombineCampaignOperateTextInfo {text: string;campaigns: CombineCampaignOperateTextItem[];}"
        },
        {
          "fileName": "CombineCampaignOperateTextItem",
          "content": "\n\n export interface CombineCampaignOperateTextItem {campaign_id: number;campaign_name: string;link_url: string;}"
        },
        {
          "fileName": "ClaimCampaignRewardNftResult",
          "content": "\n\n export interface ClaimCampaignRewardNftResult {hash: string;token_uri: string;signature: string;campaign_id: number;contract_address: string;total: number;}"
        },
        {
          "fileName": "UploadQualifierListReponse",
          "content": "\n\n export interface UploadQualifierListReponse {submit_time: number;error_url: string;amount: number;}"
        },
        {
          "fileName": "SubmitCampaignParams",
          "content": "import { KolChannel } from \"../Kol/KolChannel.ts\";\n\n export interface SubmitCampaignParams {campaign_id: number;google_recaptcha: string;auto_follow_owner: boolean;invite_code?: string;channel?: KolChannel;kol_handle?: string;event_invite_code?: string;}"
        },
        {
          "fileName": "CampaignLotteryResp",
          "content": "import { UploadTask } from \"../Campaign/UploadTask.ts\";\n\n export interface CampaignLotteryResp {upload_tasks: UploadTask[];}"
        },
        {
          "fileName": "UploadTask",
          "content": "import { DownloadStatus } from \"../Download/DownloadStatus.ts\";\n\n export interface UploadTask {task_id: number;task_name: string;description: string;compeleted: boolean;confirm: boolean;file_name: string;upload_amount: number;upload_time: number;download_status: DownloadStatus;download_link: string;}"
        },
        {
          "fileName": "CreatorCampaignListItem",
          "content": "import { RewardInfo } from \"../Reward/RewardInfo.ts\";import { RewardInfoSimple } from \"../Reward/RewardInfoSimple.ts\";import { CampaignStatus } from \"../Campaign/CampaignStatus.ts\";import { DownloadStatus } from \"../Download/DownloadStatus.ts\";\n\n export interface CreatorCampaignListItem {id: number;name: string;owner_id: string;owner_name: string;owner_avatar: string;owner_address: string;image: string;recaptcha: boolean;is_draft: boolean;is_removed: boolean;is_end: boolean;campaign_level: number;start_time: todo unknown number;end_time: todo unknown number;qualifier_rewards?: RewardInfo[];task_rewards: RewardInfo[];winner_rewards?: RewardInfoSimple[];participate_count: number;share_url: string;is_private: boolean;campaign_status: CampaignStatus;download_status: DownloadStatus;download_link: string;has_referral: boolean;}"
        },
        {
          "fileName": "DownloadCampaignDataParams",
          "content": "import { CampaignDataType } from \"../Campaign/CampaignDataType.ts\";\n\n export interface DownloadCampaignDataParams {campaign_id: number;data_type: CampaignDataType;}"
        },
        {
          "fileName": "CampaignDataType",
          "content": "export type CampaignDataType = string;"
        },
        {
          "fileName": "CampaignUserList",
          "content": "import { CampaignUserListItem } from \"../Campaign/CampaignUserListItem.ts\";\n\n export interface CampaignUserList {data: CampaignUserListItem[];total: number;}"
        },
        {
          "fileName": "GetCampaignUserListParams",
          "content": "import { UserCampaignStatus } from \"../Campaign/UserCampaignStatus.ts\";import { Page } from \"../Common/Page.ts\";\n\n export interface GetCampaignUserListParams {campaign_id: number;user_campaign_status: UserCampaignStatus;page: Page;}"
        },
        {
          "fileName": "CampaignUserListItem",
          "content": "\n\n export interface CampaignUserListItem {user_id: number;avatar: string;address: string;campaign_id: number;campaign_name: string;participate_time: number;}"
        },
        {
          "fileName": "CampaignParticipationInfo",
          "content": "import { CampaignStatisticsInfo } from \"../Campaign/CampaignStatisticsInfo.ts\";import { TaskStatisticsInfo } from \"../Task/TaskStatisticsInfo.ts\";\n\n export interface CampaignParticipationInfo {campaign_statistics: CampaignStatisticsInfo;task_statistics: TaskStatisticsInfo[];task_qualifier_wait_upload: number[];}"
        },
        {
          "fileName": "CampaignStatisticsInfo",
          "content": "\n\n export interface CampaignStatisticsInfo {visitor_number: number;participant_number: number;sumbitter_number: number;qualifier_number: number;winner_number: number;}"
        },
        {
          "fileName": "CampaignSelectOption",
          "content": "\n\n export interface CampaignSelectOption {id: number;name: string;}"
        },
        {
          "fileName": "CampaignStatusInfo",
          "content": "\n\n export interface CampaignStatusInfo {statistics: {visitor_number: number;participant_number: number;submitter_number: number;qualifier_number: number;winner_number: number[];};generated: {winner_generated: boolean[];reward_generated: boolean[];all_task_qualifier_generated: boolean;};}"
        },
        {
          "fileName": "GetCampaignsOptions",
          "content": "import { CampaignStatus } from \"../Campaign/CampaignStatus.ts\";import { UserCampaignStatusOptions } from \"../Campaign/UserCampaignStatusOptions.ts\";import { UserEligibleStatus } from \"../Eligibility/UserEligibleStatus.ts\";import { RewardTypeParam } from \"../Campaign/RewardTypeParam.ts\";import { SpaceVerifiedType } from \"../Space/SpaceVerifiedType.ts\";import { ProjectCategory } from \"../User/ProjectCategory.ts\";import { DepositType } from \"../Campaign/DepositType.ts\";import { CampaignType } from \"../Campaign/CampaignType.ts\";import { CampaignOrderType } from \"../Campaign/CampaignOrderType.ts\";\n\n export interface GetCampaignsOptions {name_like?: string;campaign_status?: CampaignStatus;user_campaign_status?: UserCampaignStatusOptions;user_joined?: boolean;user_created?: boolean;top_campaigns?: boolean;recommended_campaigns?: boolean;feature_campaigns?: boolean;user_eligible_status?: UserEligibleStatus;reward_type?: RewardTypeParam[];nft_claimed?: boolean;verify_status?: SpaceVerifiedType;network?: string[];project_category?: ProjectCategory[];deposit_type?: DepositType;current_campaign_id?: number;campaign_type: CampaignType;order_by?: CampaignOrderType;campaign_ids?: number[];include_private?: boolean;kol_campaign_status?: CampaignStatus[];end_day?: number;contain_task_type?: string[];favorite_campaign?: boolean;is_global_search?: boolean;}"
        },
        {
          "fileName": "SetCampaignParams",
          "content": "import { CampaignType } from \"../Campaign/CampaignType.ts\";import { CampaignStatus } from \"../Campaign/CampaignStatus.ts\";import { WinnerRewards } from \"../Winner/WinnerRewards.ts\";import { RewardInfo } from \"../Reward/RewardInfo.ts\";import { EligibilityParamItem } from \"../Eligibility/EligibilityParamItem.ts\";import { TaskParamItem } from \"../Task/TaskParamItem.ts\";import { LockedAssetInRewardSummary } from \"../Asset/LockedAssetInRewardSummary.ts\";import { CampaignCoHost } from \"../Campaign/CampaignCoHost.ts\";\n\n export interface SetCampaignParams {id: number;owner_id: number;name: string;desc: string;campaign_start: number;campaign_end: number;campaign_image: string;campaign_type?: CampaignType;google_recaptcha: boolean;is_draft: boolean;is_private: boolean;campaign_status?: CampaignStatus;eligibility_express: string;winner_rewards: WinnerRewards[];qualifier_rewards: RewardInfo[];eligs: EligibilityParamItem[];tasks: TaskParamItem[];min_finished_optional_task_num: todo unknown number;min_finished_optional_task_points: todo unknown number;locked_assets?: LockedAssetInRewardSummary;is_preview: boolean;is_send_cohost_invite?: boolean;cohosts?: CampaignCoHost[];extra_bonus?: string;}"
        },
        {
          "fileName": "UserCampaignStatusInfo",
          "content": "import { UserCampaignStatus } from \"../Campaign/UserCampaignStatus.ts\";import { UserTaskStatus } from \"../Task/UserTaskStatus.ts\";import { UserEligibleStatus } from \"../Eligibility/UserEligibleStatus.ts\";import { RewardValueInfo } from \"../Reward/RewardValueInfo.ts\";import { CampaignWinnerReward } from \"../Campaign/CampaignWinnerReward.ts\";\n\n export interface UserCampaignStatusInfo {user_status: UserCampaignStatus;task_status_details: UserTaskStatus[];campaign_eligible: UserEligibleStatus;campaign_eligible_details: boolean[];qualifier_rewards: RewardValueInfo[];winner_rewards: CampaignWinnerReward[];reward_reported: boolean;is_favorite: boolean;win_shared: boolean;}"
        },
        {
          "fileName": "CampaignListItem",
          "content": "import { CampaignStatus } from \"../Campaign/CampaignStatus.ts\";import { RewardInfo } from \"../Reward/RewardInfo.ts\";import { RewardInfoSimple } from \"../Reward/RewardInfoSimple.ts\";import { ProjectCategory } from \"../User/ProjectCategory.ts\";\n\n export interface CampaignListItem {id: number;name: string;desc: string;owner_id: number;owner_name: string;owner_avatar: string;owner_address: string;owner_verified: boolean;image: string;recaptcha: boolean;campaign_status: CampaignStatus;is_draft: boolean;is_removed: boolean;is_end: boolean;campaign_level: number;is_landing_campaign: boolean;is_exclusive_campaign: boolean;start_time: todo unknown number;end_time: todo unknown number;qualifier_rewards?: RewardInfo[];winner_rewards?: RewardInfoSimple[];project_category: ProjectCategory;bg_color?: string;is_private: boolean;gas_covered: boolean;has_referral: boolean;is_deposit: boolean;has_trouble_task: boolean;is_completed: boolean;is_event_available: boolean;}"
        },
        {
          "fileName": "UserCampaignStatusOptions",
          "content": "export type UserCampaignStatusOptions = string;"
        },
        {
          "fileName": "UserCampaignStatus",
          "content": "\n\n export interface UserCampaignStatus {is_visitor: boolean;is_participant: boolean;is_submitter: boolean;is_qualifier: boolean;is_winner: boolean[];submit_failed: boolean;}"
        },
        {
          "fileName": "CampaignStatus",
          "content": "export type CampaignStatus = string;"
        },
        {
          "fileName": "CampaignAuditResult",
          "content": "export type CampaignAuditResult = string;"
        },
        {
          "fileName": "SupportedTerminal",
          "content": "export type SupportedTerminal = string;"
        },
        {
          "fileName": "TaskItem",
          "content": "\n\n export interface TaskItem {id: number;name: string;description: string;template_id: string;params: string;}"
        }
      ]
    },
    {
      "folderName": "Space",
      "files": [
        {
          "fileName": "SpaceProfile",
          "content": "import { ProjectCategory } from \"../User/ProjectCategory.ts\";\n\n export interface SpaceProfile {dao_name: string;dao_picture: string;project_category: ProjectCategory;official_website: string;discord_link: string;telegram_link: string;project_description: string;}"
        },
        {
          "fileName": "SimpleSpaceItem",
          "content": "\n\n export interface SimpleSpaceItem {space_id: number;space_name: string;space_avatar: string;}"
        },
        {
          "fileName": "TodoRefType",
          "content": "export type TodoRefType = string;"
        },
        {
          "fileName": "TodoItemStatus",
          "content": "export type TodoItemStatus = string;"
        },
        {
          "fileName": "TodoItemType",
          "content": "export type TodoItemType = string;"
        },
        {
          "fileName": "SpaceInviteList",
          "content": "import { SpaceInviteListItem } from \"../Space/SpaceInviteListItem.ts\";\n\n export interface SpaceInviteList {data: SpaceInviteListItem[];total: number;invited_credits: todo unknown number;}"
        },
        {
          "fileName": "SpaceInviteListItem",
          "content": "\n\n export interface SpaceInviteListItem {id: number;user_name: string;user_id: number;timestamp: number;}"
        },
        {
          "fileName": "BestCampaignListItem",
          "content": "\n\n export interface BestCampaignListItem {campaign_id: number;campaign_name: string;project_logo: string;project_name: string;participants: number;}"
        },
        {
          "fileName": "TodoListItem",
          "content": "import { TodoItemType } from \"../Space/TodoItemType.ts\";import { TodoRefType } from \"../Space/TodoRefType.ts\";import { TodoItemStatus } from \"../Space/TodoItemStatus.ts\";\n\n export interface TodoListItem {item_id: number;item_type: TodoItemType;ref_type: TodoRefType;campaign_id: number;campaign_name: string;campaign_logo: string;campaign_start_time: number;campaign_end_time: number;status: TodoItemStatus;}"
        },
        {
          "fileName": "SpaceHomeInfo",
          "content": "\n\n export interface SpaceHomeInfo {space_name: string;space_avatar: string;account_balance: todo unknown number;account_ranking: number;credit_balance: todo unknown number;credit_ranking: number;total_visits: number;}"
        },
        {
          "fileName": "AllTimeData",
          "content": "\n\n export interface AllTimeData {user_avatar: string;user_id: number;rank: number;campaign_count: number;point_count: number;user_name: string;user_address: string;}"
        },
        {
          "fileName": "SpaceLeaderBoardItem",
          "content": "\n\n export interface SpaceLeaderBoardItem {rank: number;user_name: string;user_avatar: string;campaign_count: number;point_count: number;}"
        },
        {
          "fileName": "ParticipantSpaceListItem",
          "content": "\n\n export interface ParticipantSpaceListItem {owner_id: number;owner_name: string;owner_avatar: string;participant: number;rewards_count: string;}"
        },
        {
          "fileName": "FollowSpacesFilter",
          "content": "import { ProjectCategory } from \"../User/ProjectCategory.ts\";import { SpaceVerifiedType } from \"../Space/SpaceVerifiedType.ts\";\n\n export interface FollowSpacesFilter {category?: ProjectCategory;verified_type?: SpaceVerifiedType;name_like?: string;}"
        },
        {
          "fileName": "SpaceFollowType",
          "content": "export type SpaceFollowType = string;"
        },
        {
          "fileName": "GetSpacesOptions",
          "content": "import { ProjectCategory } from \"../User/ProjectCategory.ts\";import { SpaceVerifiedType } from \"../Space/SpaceVerifiedType.ts\";\n\n export interface GetSpacesOptions {following?: boolean;category?: ProjectCategory[];verified_type?: SpaceVerifiedType;name_like?: string;top_spaces?: boolean;is_global_search?: boolean;}"
        },
        {
          "fileName": "SpaceVerifiedType",
          "content": "export type SpaceVerifiedType = string;"
        },
        {
          "fileName": "SpaceListItem",
          "content": "import { ProjectCategory } from \"../User/ProjectCategory.ts\";\n\n export interface SpaceListItem {owner_id: number;space_name: string;desc: string;avatar: string;category: ProjectCategory;follower_num: number;verified: boolean;bg_color: string;campaigns_num: number;participants_num: number;followed: boolean;}"
        },
        {
          "fileName": "SpaceFollowerInfo",
          "content": "\n\n export interface SpaceFollowerInfo {user_id: number;user_name: string;avatar: string;}"
        },
        {
          "fileName": "SpaceInfo",
          "content": "import { ProjectCategory } from \"../User/ProjectCategory.ts\";import { SnsItem } from \"../User/SnsItem.ts\";\n\n export interface SpaceInfo {owner_id: number;avatar: string;space_name: string;user_category?: ProjectCategory;verified: boolean;desc: string;website: string;campaign_num: number;participant_num: number;follower_num: number;telegram_url: string;discord_url: string;is_follow: boolean;sns: SnsItem[];event_num: number;}"
        }
      ]
    },
    {
      "folderName": "Asset",
      "files": [
        {
          "fileName": "LockedNftTotalInReward",
          "content": "\n\n export interface LockedNftTotalInReward {chain: string;collection_id: number;collection_name: string;collection_address: string;quantity: number;}"
        },
        {
          "fileName": "LockedGasAmountInReward",
          "content": "\n\n export interface LockedGasAmountInReward {chain: string;amount: string;}"
        },
        {
          "fileName": "LockedAssetInRewardSummary",
          "content": "import { LockedTokenInReward } from \"../Asset/LockedTokenInReward.ts\";import { LockedNftTotalInReward } from \"../Asset/LockedNftTotalInReward.ts\";import { LockedGasAmountInReward } from \"../Asset/LockedGasAmountInReward.ts\";\n\n export interface LockedAssetInRewardSummary {token?: LockedTokenInReward[];nft?: LockedNftTotalInReward[];gas_amount?: LockedGasAmountInReward[];}"
        },
        {
          "fileName": "TokenWithdrawDetail",
          "content": "\n\n export interface TokenWithdrawDetail {withdraw_id: number;chain: string;chain_label: string;token_symbol: string;token_icon: string;amount: string;receiver_address: string;nonce: string;gas_covered: boolean;tx_hash: string;desc?: string;}"
        },
        {
          "fileName": "TokenWithdrawRequest",
          "content": "\n\n export interface TokenWithdrawRequest {token_id: number;token_name: string;token_address: string;token_symbol: string;token_amount: string;token_decimals: number;chain: string;nonce: string;}"
        },
        {
          "fileName": "TokenIdAndAmount",
          "content": "\n\n export interface TokenIdAndAmount {token_id: number;amount: string;}"
        },
        {
          "fileName": "LockedAssetInReward",
          "content": "import { LockedTokenInReward } from \"../Asset/LockedTokenInReward.ts\";import { LockedNftInReward } from \"../Asset/LockedNftInReward.ts\";\n\n export interface LockedAssetInReward {token?: LockedTokenInReward;nft?: LockedNftInReward;gas_amount?: string;}"
        },
        {
          "fileName": "LockedNftInReward",
          "content": "import { NftTokenItem } from \"../Asset/NftTokenItem.ts\";\n\n export interface LockedNftInReward {chain: string;collection_id: number;collection_name: string;collection_address: string;token_ids: NftTokenItem[];}"
        },
        {
          "fileName": "LockedTokenInReward",
          "content": "\n\n export interface LockedTokenInReward {chain: string;token_id: number;token_symbol: string;token_address: string;amount: string;}"
        },
        {
          "fileName": "NftCampaignRewardDetail",
          "content": "import { CampaignType } from \"../Campaign/CampaignType.ts\";import { NftTokenItem } from \"../Asset/NftTokenItem.ts\";import { TxType } from \"../Asset/TxType.ts\";\n\n export interface NftCampaignRewardDetail {chain: string;chain_label: string;collection_name: string;referral_reward_id: number;campaign_id: number;campaign_type?: CampaignType;tokens: NftTokenItem[];tx_type: TxType;campaign_name: string;owner_name: string;owner_id: number;tx_time: number;desc?: string;community_key?: string;}"
        },
        {
          "fileName": "NftTokenItem",
          "content": "\n\n export interface NftTokenItem {token_id: string;quantity: number;}"
        },
        {
          "fileName": "LockedType",
          "content": "export type LockedType = string;"
        },
        {
          "fileName": "GetUserTokenBalanceListOptions",
          "content": "\n\n export interface GetUserTokenBalanceListOptions {get_all: boolean;}"
        },
        {
          "fileName": "BalanceType",
          "content": "export type BalanceType = string;"
        },
        {
          "fileName": "LockedNftList",
          "content": "import { LockedNftListItem } from \"../Asset/LockedNftListItem.ts\";\n\n export interface LockedNftList {data: LockedNftListItem[];total: number;}"
        },
        {
          "fileName": "LockedNftListItem",
          "content": "import { CampaignType } from \"../Campaign/CampaignType.ts\";\n\n export interface LockedNftListItem {collection_id: number;collection_name: string;token_id: string;quantity: number;campaign_id: number;campaign_name: string;campaign_type?: CampaignType;community_key?: string;odyssey_id?: number;}"
        },
        {
          "fileName": "LockedTokenList",
          "content": "import { LockedTokenListItem } from \"../Asset/LockedTokenListItem.ts\";\n\n export interface LockedTokenList {data: LockedTokenListItem[];total: number;}"
        },
        {
          "fileName": "LockedTokenListItem",
          "content": "import { LockedType } from \"../Asset/LockedType.ts\";import { CampaignType } from \"../Campaign/CampaignType.ts\";\n\n export interface LockedTokenListItem {campaign_id: number;campaign_name: string;locked_amount: string;lock_time: number;type: LockedType;campaign_type?: CampaignType;nonce?: string;receiver_address?: string;community_key?: string;community_id?: number;dapp_domain?: string;}"
        },
        {
          "fileName": "WithdrawResult",
          "content": "\n\n export interface WithdrawResult {signatures: string[];nonce: string;expired_height: number;receiver_address: string;}"
        },
        {
          "fileName": "NftWithdrawParams",
          "content": "import { NftWithdrawTokenId } from \"../Asset/NftWithdrawTokenId.ts\";\n\n export interface NftWithdrawParams {chain: string;collection_id: number;receiver_address: string;token_ids: NftWithdrawTokenId[];nonce?: string;campaign_id?: number;reward_id?: number;referral_reward_id?: number;benefit_order_id?: number;}"
        },
        {
          "fileName": "NftWithdrawTokenId",
          "content": "\n\n export interface NftWithdrawTokenId {token_id: string;quantity: number;}"
        },
        {
          "fileName": "TokenWithdrawParams",
          "content": "import { TokenIdAndAmount } from \"../Asset/TokenIdAndAmount.ts\";\n\n export interface TokenWithdrawParams {chain: string;receiver_address: string;tokens: TokenIdAndAmount[];nonce?: string;ga_code?: string;}"
        },
        {
          "fileName": "NftTokenIdList",
          "content": "import { NftTokenIdListItem } from \"../Asset/NftTokenIdListItem.ts\"; export type NftTokenIdList = NftTokenIdListItem[];"
        },
        {
          "fileName": "NftTokenIdListItem",
          "content": "import { LockedType } from \"../Asset/LockedType.ts\";import { CampaignType } from \"../Campaign/CampaignType.ts\";\n\n export interface NftTokenIdListItem {id: number;collection_name: string;token_id: string;avail_quantity: number;total_quantity: number;locked_quantity: number;campaign_id: number;campaign_name: string;locked_type?: LockedType;locked_time?: todo unknown number;campaign_type?: CampaignType;community_key?: string;odyssey_id?: number;}"
        },
        {
          "fileName": "GetUserNftBalanceParams",
          "content": "import { Page } from \"../Common/Page.ts\";\n\n export interface GetUserNftBalanceParams {page: Page;}"
        },
        {
          "fileName": "GetUserTokenBalanceParams",
          "content": "import { Page } from \"../Common/Page.ts\";\n\n export interface GetUserTokenBalanceParams {page: Page;options: {get_all: boolean;token_id: number;};}"
        },
        {
          "fileName": "TokenTxDetail",
          "content": ""
        },
        {
          "fileName": "TokenCampaignRewardDetail",
          "content": "import { CampaignType } from \"../Campaign/CampaignType.ts\";import { TxType } from \"../Asset/TxType.ts\";\n\n export interface TokenCampaignRewardDetail {chain: string;chain_label: string;token_symbol: string;token_icon: string;amount: string;campaign_id: number;campaign_type?: CampaignType;referral_reward_id?: number;tx_type: TxType;campaign_name: string;owner_id: number;owner_name: string;tx_time: number;receiver_address: string;nonce: string;desc?: string;community_key?: string;}"
        },
        {
          "fileName": "TokenDistributeRewardDetail",
          "content": "import { TxType } from \"../Asset/TxType.ts\";\n\n export interface TokenDistributeRewardDetail {chain: string;chain_label: string;token_symbol: string;token_icon: string;total_amount: string;campaign_id: number;campaign_name: string;tx_type: TxType;distribute_time: number;referral_reward_id?: number;}"
        },
        {
          "fileName": "GetTokenTxDetailParams",
          "content": "\n\n export interface GetTokenTxDetailParams {tx_id: number;}"
        },
        {
          "fileName": "GetNftTokenIdListParams",
          "content": "import { BalanceType } from \"../Asset/BalanceType.ts\";\n\n export interface GetNftTokenIdListParams {collection_id: number;balance_type: BalanceType;get_all: boolean;}"
        },
        {
          "fileName": "UserNftBalanceList",
          "content": "import { UserNftBalanceListItem } from \"../Asset/UserNftBalanceListItem.ts\";\n\n export interface UserNftBalanceList {data: UserNftBalanceListItem[];total: number;}"
        },
        {
          "fileName": "UserTokenBalanceList",
          "content": "import { UserTokenBalanceListItem } from \"../Asset/UserTokenBalanceListItem.ts\";\n\n export interface UserTokenBalanceList {data: UserTokenBalanceListItem[];total: number;}"
        },
        {
          "fileName": "UserNftBalanceListItem",
          "content": "import { NftType } from \"../Common/NftType.ts\";\n\n export interface UserNftBalanceListItem {chain: string;collection_address: string;nft_type: NftType;collection_id: number;collection_name: string;total_quantity: number;avail_quantity: number;locked_quantity: number;}"
        },
        {
          "fileName": "UserTokenBalanceListItem",
          "content": "\n\n export interface UserTokenBalanceListItem {token_id: number;token_address: string;token_symbol: string;token_icon: string;chain: string;total_balance: string;avail_balance: string;lock_balance: string;withdrawable_avail_balance: string;frozen_balance: string;chain_label: string;chain_icon: string;}"
        },
        {
          "fileName": "UserNftTxHistoryList",
          "content": "import { UserNftTxHistoryLiteItem } from \"../Asset/UserNftTxHistoryLiteItem.ts\";\n\n export interface UserNftTxHistoryList {data: UserNftTxHistoryLiteItem[];total: number;}"
        },
        {
          "fileName": "UserNftTxHistoryLiteItem",
          "content": "import { TxType } from \"../Asset/TxType.ts\";import { TxStatus } from \"../Asset/TxStatus.ts\";import { NftTokenItem } from \"../Asset/NftTokenItem.ts\";import { NftType } from \"../Common/NftType.ts\";\n\n export interface UserNftTxHistoryLiteItem {tx_id: number;tx_type: TxType;tx_status: TxStatus;chain: string;collection_id: number;collection_name: string;tx_hash: string;tx_time: number;tokens: NftTokenItem[];quantity: number;nonce: string;receiver_address: string;nft_type: NftType;}"
        },
        {
          "fileName": "UserNftCollectionListItem",
          "content": "import { NftType } from \"../Common/NftType.ts\";\n\n export interface UserNftCollectionListItem {collection_name: string;collection_id: number;nft_type: NftType;collection_address: string;chain_label?: string;chain: string;}"
        },
        {
          "fileName": "UserTokenListItem",
          "content": "\n\n export interface UserTokenListItem {token_symbol: string;token_id: number;token_icon: string;chain: string;chain_label: string;chain_icon: string;avail_balance: string;withdrawable_avail_balance: string;token_address: string;}"
        },
        {
          "fileName": "GetUserNftTxHistoryParams",
          "content": "import { TxType } from \"../Asset/TxType.ts\";import { TxStatus } from \"../Asset/TxStatus.ts\";\n\n export interface GetUserNftTxHistoryParams {tx_type: TxType;tx_status: TxStatus;nft_collection_id: number;}"
        },
        {
          "fileName": "UserNftCollectionList",
          "content": "import { UserNftCollectionListItem } from \"../Asset/UserNftCollectionListItem.ts\"; export type UserNftCollectionList = UserNftCollectionListItem[];"
        },
        {
          "fileName": "UserTokenList",
          "content": "import { UserTokenListItem } from \"../Asset/UserTokenListItem.ts\"; export type UserTokenList = UserTokenListItem[];"
        },
        {
          "fileName": "UserTokenTxHistoryList",
          "content": "import { UserTokenTxHistoryListItem } from \"../Asset/UserTokenTxHistoryListItem.ts\";\n\n export interface UserTokenTxHistoryList {data: UserTokenTxHistoryListItem[];total: number;}"
        },
        {
          "fileName": "UserTokenTxHistoryListItem",
          "content": "import { TxType } from \"../Asset/TxType.ts\";import { TxStatus } from \"../Asset/TxStatus.ts\";\n\n export interface UserTokenTxHistoryListItem {tx_id: number;tx_type: TxType;tx_status: TxStatus;token_id: number;token_symbol: string;token_address: string;token_icon: string;amount: string;chain: string;chain_label: string;nonce: string;tx_hash: string;tx_time: number;receiver_address: string;gas_station_request_id: number;}"
        },
        {
          "fileName": "GetUserTokenTxHistoryParams",
          "content": "import { TxType } from \"../Asset/TxType.ts\";import { TxStatus } from \"../Asset/TxStatus.ts\";\n\n export interface GetUserTokenTxHistoryParams {tx_type: TxType;tx_status: TxStatus;token_id: number;}"
        },
        {
          "fileName": "TxStatus",
          "content": "export type TxStatus = string;"
        },
        {
          "fileName": "TxType",
          "content": "export type TxType = string;"
        }
      ]
    },
    {
      "folderName": "Eligibility",
      "files": [
        {
          "fileName": "DiscordRoleEligibilityParams",
          "content": "import { Operator } from \"../Common/Operator.ts\";\n\n export interface DiscordRoleEligibilityParams {role_id: string;role: string;guild_id: string;operator: Operator;}"
        },
        {
          "fileName": "CommunityUserLevelEligibilityParams",
          "content": "import { Operator } from \"../Common/Operator.ts\";\n\n export interface CommunityUserLevelEligibilityParams {level: number;operator: Operator;}"
        },
        {
          "fileName": "CommunityPreTaskParams",
          "content": "import { Operator } from \"../Common/Operator.ts\";\n\n export interface CommunityPreTaskParams {task_id: number;operator: Operator;task_name: string;}"
        },
        {
          "fileName": "SupportedCountry",
          "content": "import { SupportedCountryType } from \"../Eligibility/SupportedCountryType.ts\";import { Country } from \"../Common/Country.ts\";\n\n export interface SupportedCountry {type: SupportedCountryType;supported_country: Country[];extra?: string;}"
        },
        {
          "fileName": "SupportedCountryType",
          "content": "export type SupportedCountryType = string;"
        },
        {
          "fileName": "SupportedCountryValue",
          "content": ""
        },
        {
          "fileName": "SupportedCountryParams",
          "content": ""
        },
        {
          "fileName": "UserEligibilityInfo",
          "content": "\n\n export interface UserEligibilityInfo {result: boolean;details: boolean[];}"
        },
        {
          "fileName": "MinUserLevelEligibilityValue",
          "content": "\n\n export interface MinUserLevelEligibilityValue {level: number;}"
        },
        {
          "fileName": "SpecificNftHolderEligibilityValue",
          "content": "\n\n export interface SpecificNftHolderEligibilityValue {pick_from_list: string;nft_address: string;chain: string;nft_type: string;amount: number;nft_name: string;chain_label: string;}"
        },
        {
          "fileName": "SpecificNftHolderEligibilityParams",
          "content": "\n\n export interface SpecificNftHolderEligibilityParams {pick_from_list: string;contract_address: string;network: string;nft_type: string;quantity: number;nft_name: string;extra?: string;}"
        },
        {
          "fileName": "TokenBalanceEligibilityValue",
          "content": "\n\n export interface TokenBalanceEligibilityValue {pick_from_list: boolean;token_name: string;token_address: string;amount: string;chain: string;chain_label: string;}"
        },
        {
          "fileName": "TokenBalanceEligibilityParams",
          "content": "\n\n export interface TokenBalanceEligibilityParams {pick_from_list: boolean;token_name: string;token_contract_addr: string;network: string;min_balance: string;extra?: string;}"
        },
        {
          "fileName": "EligibilityValueItem",
          "content": "import { EligibilityTemplateId } from \"../Eligibility/EligibilityTemplateId.ts\";import { ChainType } from \"../Common/ChainType.ts\";\n\n export interface EligibilityValueItem {id: number;template_id: EligibilityTemplateId;params: string;chain_types?: ChainType[];}"
        },
        {
          "fileName": "EligibilityParamItem",
          "content": "\n\n export interface EligibilityParamItem {template_id: string;params: string;}"
        },
        {
          "fileName": "EligibilityItem",
          "content": "import { EligibilityType } from \"../Eligibility/EligibilityType.ts\";\n\n export interface EligibilityItem {id: number;params: string;type: EligibilityType;}"
        },
        {
          "fileName": "UserCampaignStatusOption",
          "content": "export type UserCampaignStatusOption = string;"
        },
        {
          "fileName": "MinUserLevelEligibilityParams",
          "content": "\n\n export interface MinUserLevelEligibilityParams {level: number;extra?: string;}"
        },
        {
          "fileName": "UserEligibleStatus",
          "content": "export type UserEligibleStatus = string;"
        },
        {
          "fileName": "EligibilityType",
          "content": "export type EligibilityType = string;"
        },
        {
          "fileName": "EligibilityTemplateId",
          "content": "export type EligibilityTemplateId = string;"
        }
      ]
    },
    {
      "folderName": "Winner",
      "files": [
        {
          "fileName": "WinnerRewardInfo",
          "content": "import { RewardType } from \"../Reward/RewardType.ts\";\n\n export interface WinnerRewardInfo {reward_type: RewardType;amount: string;reward_symbol: string;layer_no: number;chain_icon?: string;chain_label?: string;is_usdt_equal?: boolean;}"
        },
        {
          "fileName": "CampaignWinnersSummary",
          "content": "import { WinnerBriefInfo } from \"../Winner/WinnerBriefInfo.ts\";\n\n export interface CampaignWinnersSummary {data: WinnerBriefInfo[];total: number;}"
        },
        {
          "fileName": "WinnerBriefInfo",
          "content": "\n\n export interface WinnerBriefInfo {user_id: number;avatar: string;}"
        },
        {
          "fileName": "WinnerInfo",
          "content": "import { WinnerRewardInfo } from \"../Winner/WinnerRewardInfo.ts\";\n\n export interface WinnerInfo {user_id: number;user_address: string;user_name: string;avatar: string;winner_rank: number;rewards?: WinnerRewardInfo[];}"
        },
        {
          "fileName": "WinnerLayerReward",
          "content": "import { WinnerLayer } from \"../Winner/WinnerLayer.ts\";import { RewardInfo } from \"../Reward/RewardInfo.ts\";\n\n export interface WinnerLayerReward {winner_layer?: WinnerLayer;max_winners: number;rewards: RewardInfo[];}"
        },
        {
          "fileName": "WinnerRewards",
          "content": "import { WinnerDrawType } from \"../Winner/WinnerDrawType.ts\";import { AutomaticallyWinnerDrawType } from \"../Winner/AutomaticallyWinnerDrawType.ts\";import { WinnerLayerReward } from \"../Winner/WinnerLayerReward.ts\";\n\n export interface WinnerRewards {winner_draw_type: WinnerDrawType;automatically_winner_draw_type: AutomaticallyWinnerDrawType;winner_layer_rewards: WinnerLayerReward[];}"
        },
        {
          "fileName": "WinnerLayer",
          "content": "import { WinnerRankRange } from \"../Winner/WinnerRankRange.ts\";\n\n export interface WinnerLayer {winner_rank_range: WinnerRankRange;min_number?: number;}"
        },
        {
          "fileName": "WinnerRankRange",
          "content": "import { WinnerRangeType } from \"../Winner/WinnerRangeType.ts\";\n\n export interface WinnerRankRange {from: number;to: number;is_max: boolean;range_type: WinnerRangeType;}"
        },
        {
          "fileName": "WinnerRangeType",
          "content": "export type WinnerRangeType = string;"
        },
        {
          "fileName": "AutomaticallyWinnerDrawType",
          "content": "export type AutomaticallyWinnerDrawType = string;"
        },
        {
          "fileName": "WinnerDrawType",
          "content": "export type WinnerDrawType = string;"
        }
      ]
    },
    {
      "folderName": "Reward",
      "files": [
        {
          "fileName": "RewardInfoSimple",
          "content": "import { RewardType } from \"../Reward/RewardType.ts\";import { MediaType } from \"../Common/MediaType.ts\";\n\n export interface RewardInfoSimple {reward_type: RewardType;reward_amount: string;chain: string;chain_label: string;reward_symbol?: string;is_usdt_equal?: boolean;is_deposited: boolean;is_gas_free: boolean;nft_cdn_image?: string;is_brc20: boolean;chain_icon?: string;media_type?: MediaType;}"
        },
        {
          "fileName": "DiscordRoleRewardSummary",
          "content": "\n\n export interface DiscordRoleRewardSummary {amount: number;unlimit: boolean;}"
        },
        {
          "fileName": "RewardDiscordRoleValue",
          "content": "\n\n export interface RewardDiscordRoleValue {role_name: string;claimable: boolean;role_id: string;discord_server_url: string;}"
        },
        {
          "fileName": "RewardDiscordRoleParameters",
          "content": "\n\n export interface RewardDiscordRoleParameters {discord_server_url: string;discord_channel_id: string;bot_added: boolean;role_name: string;role_id: string;}"
        },
        {
          "fileName": "PointRewardSummary",
          "content": "\n\n export interface PointRewardSummary {amount: number;}"
        },
        {
          "fileName": "RewardSummary",
          "content": "import { TokenRewardSummary } from \"../Reward/TokenRewardSummary.ts\";import { NftRewardSummary } from \"../Reward/NftRewardSummary.ts\";import { WhitelistRewardSummary } from \"../Reward/WhitelistRewardSummary.ts\";import { CapRewardSummary } from \"../Reward/CapRewardSummary.ts\";import { PointRewardSummary } from \"../Reward/PointRewardSummary.ts\";import { DiscordRoleRewardSummary } from \"../Reward/DiscordRoleRewardSummary.ts\";\n\n export interface RewardSummary {token?: TokenRewardSummary[];nft?: NftRewardSummary[];whitelist?: WhitelistRewardSummary[];cap?: CapRewardSummary[];point?: PointRewardSummary;discord_role: DiscordRoleRewardSummary;}"
        },
        {
          "fileName": "CapRewardSummary",
          "content": "\n\n export interface CapRewardSummary {chain: string;chain_label: string;chain_icon: string;quantity: number;unlimit: boolean;}"
        },
        {
          "fileName": "WhitelistRewardSummary",
          "content": "\n\n export interface WhitelistRewardSummary {chain: string;chain_label: string;chain_icon: string;count: number;unlimit: boolean;}"
        },
        {
          "fileName": "NftRewardSummary",
          "content": "\n\n export interface NftRewardSummary {chain: string;chain_label: string;chain_icon: string;quantity: number;unlimit: boolean;}"
        },
        {
          "fileName": "TokenRewardSummary",
          "content": "\n\n export interface TokenRewardSummary {token_symbol: string;chain_label: string;chain_icon: string;amount: string;}"
        },
        {
          "fileName": "RewardBMintedNftValue",
          "content": "import { Chain } from \"../Common/Chain.ts\";import { MediaType } from \"../Common/MediaType.ts\";import { GasCoveredByType } from \"../Reward/GasCoveredByType.ts\";\n\n export interface RewardBMintedNftValue {chain: Chain;chain_icon?: string;chain_label: string;nft_address: string;collection_id: number;collection_image: string;token_id: string;tx_hash: string;claimable: boolean;media_type?: MediaType;quantity: number;gas_covered_by: GasCoveredByType;gs_req_id: number;collection_name: string;}"
        },
        {
          "fileName": "RewardBMintedNftParameters",
          "content": "import { NftType } from \"../Common/NftType.ts\";import { MediaType } from \"../Common/MediaType.ts\";import { GasCoveredByType } from \"../Reward/GasCoveredByType.ts\";\n\n export interface RewardBMintedNftParameters {chain: string;chain_icon?: string;nft_collection_id?: number;nft_collection_name?: string;nft_address: string;nft_type?: NftType;nft_cdn_image?: string;media_type?: MediaType;quantity: number;gas_covered_by: GasCoveredByType;gas_covered_amount?: string;}"
        },
        {
          "fileName": "RewardPointsParameters",
          "content": "\n\n export interface RewardPointsParameters {per_amount: number;owner_avatar?: string;}"
        },
        {
          "fileName": "RewardPointsValue",
          "content": "\n\n export interface RewardPointsValue {amount: number;}"
        },
        {
          "fileName": "RewardValueInfo",
          "content": "import { RewardType } from \"../Reward/RewardType.ts\";\n\n export interface RewardValueInfo {reward_id: number;reward_type: RewardType;reward_value: todo unknown undefined;receive_time: number;wait_reward_distribute: boolean;}"
        },
        {
          "fileName": "RewardFromType",
          "content": "export type RewardFromType = string;"
        },
        {
          "fileName": "GasCoveredByType",
          "content": "export type GasCoveredByType = string;"
        },
        {
          "fileName": "RewardCapParameters",
          "content": "import { Chain } from \"../Common/Chain.ts\";import { GasCoveredByType } from \"../Reward/GasCoveredByType.ts\";import { NftType } from \"../Common/NftType.ts\";\n\n export interface RewardCapParameters {nft_cdn_image: string;nft_ipfs_image: string;chain: Chain;chain_icon?: string;gas_covered_by: GasCoveredByType;gas_covered_amount?: string;nft_type: NftType;nft_address: string;}"
        },
        {
          "fileName": "RewardCapValue",
          "content": "import { Chain } from \"../Common/Chain.ts\";import { GasCoveredByType } from \"../Reward/GasCoveredByType.ts\";\n\n export interface RewardCapValue {tx_hash: string;token_id: string;claimable: boolean;collection_image: string;chain: Chain;chain_label: string;gas_covered_by: GasCoveredByType;gs_req_id: number;}"
        },
        {
          "fileName": "NftRewardTokenId",
          "content": "\n\n export interface NftRewardTokenId {token_id: string;quantity: number;}"
        },
        {
          "fileName": "RewardOwnBy",
          "content": "export type RewardOwnBy = string;"
        },
        {
          "fileName": "RewardWhiteListType",
          "content": "export type RewardWhiteListType = string;"
        },
        {
          "fileName": "RewardDistributedByType",
          "content": "export type RewardDistributedByType = string;"
        },
        {
          "fileName": "RewardsDistributeType",
          "content": "export type RewardsDistributeType = string;"
        },
        {
          "fileName": "RewardDistributionList",
          "content": "import { RewardDistributionListItem } from \"../Reward/RewardDistributionListItem.ts\";\n\n export interface RewardDistributionList {data: RewardDistributionListItem[];total: number;}"
        },
        {
          "fileName": "GetUserRewardList",
          "content": "import { UserRewardListItem } from \"../Reward/UserRewardListItem.ts\";\n\n export interface GetUserRewardList {data: UserRewardListItem[];total: number;}"
        },
        {
          "fileName": "GetRewardParams",
          "content": "import { RewardType } from \"../Reward/RewardType.ts\";\n\n export interface GetRewardParams {reward_type: RewardType;page_no: number;size: number;}"
        },
        {
          "fileName": "GetRewardTokenAmountParams",
          "content": "import { TokenAddress } from \"../Common/TokenAddress.ts\";import { Page } from \"../Common/Page.ts\";\n\n export interface GetRewardTokenAmountParams {token_address: TokenAddress;page: Page;}"
        },
        {
          "fileName": "UserRewardListItem",
          "content": "import { RewardType } from \"../Reward/RewardType.ts\";import { RewardFromType } from \"../Reward/RewardFromType.ts\";import { RewardDistributedByType } from \"../Reward/RewardDistributedByType.ts\";\n\n export interface UserRewardListItem {reward_id: number;campaign_id: number;referral_reward_id: number;campaign_name: string;campaign_image: string;reward_type: RewardType;reward_from_type: RewardFromType;reward_value: todo unknown undefined;receive_time: number;owner_avatar: string;owner_name: string;owner_verified: boolean;owner_id: string;distribute_by: RewardDistributedByType;}"
        },
        {
          "fileName": "RewardExpValue",
          "content": "\n\n export interface RewardExpValue {amount: number;}"
        },
        {
          "fileName": "RewardWhitelistValue",
          "content": "import { Chain } from \"../Common/Chain.ts\";\n\n export interface RewardWhitelistValue {nft_image: string;chain: Chain;chain_icon?: string;}"
        },
        {
          "fileName": "RewardNftValue",
          "content": "import { Chain } from \"../Common/Chain.ts\";import { NftType } from \"../Common/NftType.ts\";\n\n export interface RewardNftValue {tx_hash: string;token_id: string;collection_id: number;quantity: number;claimable: boolean;receiver_address?: string;nonce?: string;collection_image: string;chain: Chain;chain_label: string;nft_type: NftType;nft_address: string;collection_name: string;}"
        },
        {
          "fileName": "RewardTokenValue",
          "content": "import { Chain } from \"../Common/Chain.ts\";import { GasCoveredByType } from \"../Reward/GasCoveredByType.ts\";\n\n export interface RewardTokenValue {amount: string;token_name: string;chain: Chain;chain_label: string;token_address: string;token_logo: string;is_usdt_equal_amount: boolean;gas_covered_by: GasCoveredByType;claimable: boolean;tx_hash?: string;token_id: string;}"
        },
        {
          "fileName": "RewardDistributionListItem",
          "content": "import { UserRewardListItem } from \"../Reward/UserRewardListItem.ts\";\n\n export interface RewardDistributionListItem {reward_value: UserRewardListItem;reward_address: string;}"
        },
        {
          "fileName": "RewardInfo",
          "content": "import { RewardType } from \"../Reward/RewardType.ts\";import { RewardsDistributeType } from \"../Reward/RewardsDistributeType.ts\";import { RewardDistributedByType } from \"../Reward/RewardDistributedByType.ts\";import { ChainType } from \"../Common/ChainType.ts\";import { CampaignGasStationInfo } from \"../GasStation/CampaignGasStationInfo.ts\";\n\n export interface RewardInfo {reward_id: number;reward_type: RewardType;reward_params: todo unknown undefined;reward_distribute_type: RewardsDistributeType;reward_distributed_by_type: RewardDistributedByType;reward_desc: string;chain_types?: ChainType[];gas_station?: CampaignGasStationInfo;}"
        },
        {
          "fileName": "RewardTokenAmountInfo",
          "content": "\n\n export interface RewardTokenAmountInfo {name: string;decimals: number;chain: string;contract_address: string;amount: string;}"
        },
        {
          "fileName": "RewardWhitelistParameters",
          "content": "import { RewardWhiteListType } from \"../Reward/RewardWhiteListType.ts\";\n\n export interface RewardWhitelistParameters {white_list_type: RewardWhiteListType;chain: string;chain_lcon?: string;nft_image: string;desc?: string;}"
        },
        {
          "fileName": "RewardExpParameters",
          "content": "\n\n export interface RewardExpParameters {total_amount: number;per_amount: number;}"
        },
        {
          "fileName": "RewardNftParameters",
          "content": "import { Chain } from \"../Common/Chain.ts\";import { NftRewardTokenId } from \"../Reward/NftRewardTokenId.ts\";import { NftType } from \"../Common/NftType.ts\";\n\n export interface RewardNftParameters {nft_cdn_image: string;nft_ipfs_image: string;chain: Chain;chain_icon?: string;nft_address: string;token_ids: NftRewardTokenId[];nft_type: NftType;nft_collection_name: string;nft_collection_id: todo unknown number;nft_amount?: number;}"
        },
        {
          "fileName": "RewardTokenParameters",
          "content": "import { Chain } from \"../Common/Chain.ts\";import { TokenType } from \"../Common/TokenType.ts\";import { GasCoveredByType } from \"../Reward/GasCoveredByType.ts\";\n\n export interface RewardTokenParameters {chain: Chain;chain_icon?: string;token_name: string;token_address: string;total_amount: string;per_amount: string;token_type: TokenType;is_usdt_equal_amount: boolean;gas_covered_by: GasCoveredByType;gas_covered_amount?: string;token_icon?: string;}"
        },
        {
          "fileName": "RewardType",
          "content": "export type RewardType = string;"
        }
      ]
    },
    {
      "folderName": "Notificaion",
      "files": [
        {
          "fileName": "LatestCampaignReleased",
          "content": "\n\n export interface LatestCampaignReleased {campaign_id: number;campaign_name: string;}"
        },
        {
          "fileName": "TaskIssueFixed",
          "content": "\n\n export interface TaskIssueFixed {campaign_id: number;campaign_name: string;}"
        },
        {
          "fileName": "GasStationBalanceNotEnoughNotiType",
          "content": "import { CampaignType } from \"../Campaign/CampaignType.ts\";\n\n export interface GasStationBalanceNotEnoughNotiType {campaign_id: number;campaign_type: CampaignType;campaign_name: string;left_count: number;}"
        },
        {
          "fileName": "EventPublishNotiType",
          "content": "\n\n export interface EventPublishNotiType {event_id: number;event_name: string;owner_name: string;}"
        },
        {
          "fileName": "ReportEventDidNotDistributeRewardNotiType",
          "content": "\n\n export interface ReportEventDidNotDistributeRewardNotiType {event_id: number;event_name: string;sub_credits: string;submit_evidence_time: number;}"
        },
        {
          "fileName": "CampaignPublishNotiType",
          "content": "import { CampaignType } from \"../Campaign/CampaignType.ts\";\n\n export interface CampaignPublishNotiType {campaign_id: number;campaign_name: string;campaign_type: CampaignType;owner_name: string;}"
        },
        {
          "fileName": "ReportReferralRewardDidNotDistributeRewardNotiType",
          "content": "\n\n export interface ReportReferralRewardDidNotDistributeRewardNotiType {referral_reward_id: number;referral_reward_name: string;sub_credits: string;submit_evidence_time: number;}"
        },
        {
          "fileName": "ReportCampaignDidNotDistributeRewardNotiType",
          "content": "\n\n export interface ReportCampaignDidNotDistributeRewardNotiType {campaign_id: number;campaign_name: string;sub_credits: string;submit_evidence_time: number;}"
        },
        {
          "fileName": "DecrUserCreditsNotiType",
          "content": "import { CreditType } from \"../Credits/CreditType.ts\";\n\n export interface DecrUserCreditsNotiType {credit_type: CreditType;credits: string;}"
        },
        {
          "fileName": "IncrUserCreditsNotiType",
          "content": "import { CreditType } from \"../Credits/CreditType.ts\";\n\n export interface IncrUserCreditsNotiType {credit_type: CreditType;credits: string;}"
        },
        {
          "fileName": "EventCampaignInviteReplyNotiType",
          "content": "import { CoHostInviteStatus } from \"../Event/CoHostInviteStatus.ts\";\n\n export interface EventCampaignInviteReplyNotiType {event_id: string;event_name: string;status: CoHostInviteStatus;cohost: string;}"
        },
        {
          "fileName": "EventCampaignInviteNotiType",
          "content": "\n\n export interface EventCampaignInviteNotiType {event_id: string;event_name: string;}"
        },
        {
          "fileName": "DistributeReferralRewardRemindNotiType",
          "content": "\n\n export interface DistributeReferralRewardRemindNotiType {referral_reward_id: string;campaign_id: number;campaign_name: string;}"
        },
        {
          "fileName": "ReferralRewardWinnerNotiType",
          "content": "import { RewardType } from \"../Reward/RewardType.ts\";\n\n export interface ReferralRewardWinnerNotiType {referral_reward_id: string;campaign_id: number;campaign_name: string;reward_type: RewardType;reward_amount: string;token_symbol?: string;nft_collection_name?: string;}"
        },
        {
          "fileName": "CapAirdroppedNotiType",
          "content": "\n\n export interface CapAirdroppedNotiType {campaign_id: number;campaign_name: string;receiver_address: string;}"
        },
        {
          "fileName": "GetUnreadNotificationNumResult",
          "content": "\n\n export interface GetUnreadNotificationNumResult {unread_num: number;latest_id: number;}"
        },
        {
          "fileName": "NotificationList",
          "content": "import { NotificationInfo } from \"../Notificaion/NotificationInfo.ts\";\n\n export interface NotificationList {data: NotificationInfo[];total: number;latest_id: number;}"
        },
        {
          "fileName": "GetNotificationParams",
          "content": "import { Page } from \"../Common/Page.ts\";\n\n export interface GetNotificationParams {page: Page;}"
        },
        {
          "fileName": "UserNotificationStatus",
          "content": "export type UserNotificationStatus = string;"
        },
        {
          "fileName": "CampaignWinnerNotiType",
          "content": "import { CampaignType } from \"../Campaign/CampaignType.ts\";import { RewardType } from \"../Reward/RewardType.ts\";\n\n export interface CampaignWinnerNotiType {campaign_id: number;campaign_name: string;campaign_type?: CampaignType;reward_type: RewardType;reward_amount: string;token_symbol: string;}"
        },
        {
          "fileName": "BindAddressNotiType",
          "content": "\n\n export interface BindAddressNotiType {chain_type: string;chain: string;chain_label: string;}"
        },
        {
          "fileName": "NotificationInfo",
          "content": "import { NotificationType } from \"../Notificaion/NotificationType.ts\";\n\n export interface NotificationInfo {id: number;type: NotificationType;content: todo unknown undefined;create_time: number;read: boolean;}"
        },
        {
          "fileName": "NotificationType",
          "content": "export type NotificationType = string;"
        }
      ]
    },
    {
      "folderName": "GasStation",
      "files": [
        {
          "fileName": "GasStationRequestStatus",
          "content": "export type GasStationRequestStatus = string;"
        },
        {
          "fileName": "GasPriceAndNativeTokenPrice",
          "content": "\n\n export interface GasPriceAndNativeTokenPrice {gas_price: string;token_price: string;}"
        },
        {
          "fileName": "GasStationDepositTokens",
          "content": "import { GasStationDepositTokenItem } from \"../GasStation/GasStationDepositTokenItem.ts\"; export type GasStationDepositTokens = GasStationDepositTokenItem[];"
        },
        {
          "fileName": "GasStationDepositTokenItem",
          "content": "\n\n export interface GasStationDepositTokenItem {token_id: number;token_address: string;token_name: string;token_symbol: string;token_decimals: number;token_logo: string;chain: string;chain_label: string;}"
        },
        {
          "fileName": "CampaignGasStationInfo",
          "content": "\n\n export interface CampaignGasStationInfo {gas_covered: boolean;total_gas_amount: string;used_gas_amount: string;gas_covered_count: number;}"
        },
        {
          "fileName": "TotalEstimatedClaimCounts",
          "content": "import { TotalEstimatedClaimCountOfChain } from \"../GasStation/TotalEstimatedClaimCountOfChain.ts\"; export type TotalEstimatedClaimCounts = TotalEstimatedClaimCountOfChain[];"
        },
        {
          "fileName": "TotalEstimatedClaimCountOfChain",
          "content": "\n\n export interface TotalEstimatedClaimCountOfChain {chain: string;chain_label: string;chain_icon: string;count: number;}"
        },
        {
          "fileName": "GasStationGlobalSetting",
          "content": "\n\n export interface GasStationGlobalSetting {enable_campaign_token_airdrop: boolean;enable_campaign_nft_airdrop: boolean;enable_campaign_cap_airdrop: boolean;enable_campaign_bmint_nft_airdrop: boolean;open_to_all_min_gas_cover_number: number;}"
        },
        {
          "fileName": "GasStationAirdropResult",
          "content": "import { GasStationRequestStatus } from \"../GasStation/GasStationRequestStatus.ts\";\n\n export interface GasStationAirdropResult {tx_hash: string;gas_station_request_status: GasStationRequestStatus;}"
        },
        {
          "fileName": "GetGasStationAirdropResultParams",
          "content": "\n\n export interface GetGasStationAirdropResultParams {gas_station_request_id?: number;}"
        },
        {
          "fileName": "GasStationAirdropType",
          "content": "export type GasStationAirdropType = string;"
        },
        {
          "fileName": "GasStationEstimateInfo",
          "content": "\n\n export interface GasStationEstimateInfo {count: number;per_cost: string;factor: string;total_gas_fee: string;}"
        },
        {
          "fileName": "GasStationTxHistoryList",
          "content": "\n\n export interface GasStationTxHistoryList {data: object[];total: number;}"
        },
        {
          "fileName": "GasStationTxHistoryListItem",
          "content": "import { GasStationTxType } from \"../GasStation/GasStationTxType.ts\";import { GasStationTxStatus } from \"../GasStation/GasStationTxStatus.ts\";import { CampaignType } from \"../Campaign/CampaignType.ts\";\n\n export interface GasStationTxHistoryListItem {id: number;tx_type: GasStationTxType;tx_status: GasStationTxStatus;chain: string;chain_label: string;chain_icon: string;token_id: number;token_symbol: string;token_icon: string;tx_hash: string;token_amount: string;amount: string;desc: string;timestamp: number;campaign_id?: number;campaign_name?: string;campaign_type?: CampaignType;}"
        },
        {
          "fileName": "GasStationTxStatus",
          "content": "export type GasStationTxStatus = string;"
        },
        {
          "fileName": "GasStationTxType",
          "content": "export type GasStationTxType = string;"
        },
        {
          "fileName": "GasStationBalance",
          "content": "\n\n export interface GasStationBalance {avail_balance: string;total_balance: string;}"
        }
      ]
    },
    {
      "folderName": "Epic",
      "files": [
        {
          "fileName": "EpicEventId",
          "content": "\n\n export interface EpicEventId {epic_id: number;event_id: number;}"
        },
        {
          "fileName": "EpicPreviewEventItem",
          "content": "import { EpicSpaceItem } from \"../Epic/EpicSpaceItem.ts\";\n\n export interface EpicPreviewEventItem {title: string;tip: string;start_time: number;end_time: number;spaces: EpicSpaceItem[];}"
        },
        {
          "fileName": "EpicEventTab",
          "content": "import { EpicSpaceItem } from \"../Epic/EpicSpaceItem.ts\";import { RewardInfo } from \"../Reward/RewardInfo.ts\";import { ReferralRewardInfo } from \"../ReferralReward/ReferralRewardInfo.ts\";\n\n export interface EpicEventTab {start_time: number;end_time: number;spaces: EpicSpaceItem[];user_progress: {};reward: RewardInfo;referral_reward: ReferralRewardInfo;event_id: number;event_name: string;}"
        },
        {
          "fileName": "EpicEventsTitle",
          "content": "\n\n export interface EpicEventsTitle {title: string;font_color: string;}"
        },
        {
          "fileName": "EpicKeyMetricItem",
          "content": "\n\n export interface EpicKeyMetricItem {label: string;value: string;}"
        },
        {
          "fileName": "EpicBannerTabItem",
          "content": "\n\n export interface EpicBannerTabItem {label: string;title: string;description: string;}"
        },
        {
          "fileName": "EpicSpaceItem",
          "content": "\n\n export interface EpicSpaceItem {space_id: number;space_name: string;space_avatar: string;}"
        },
        {
          "fileName": "EpicDetail",
          "content": "import { EpicBannerTabItem } from \"../Epic/EpicBannerTabItem.ts\";import { EpicKeyMetricItem } from \"../Epic/EpicKeyMetricItem.ts\";import { EpicSpaceItem } from \"../Epic/EpicSpaceItem.ts\";import { RewardInfoSimple } from \"../Reward/RewardInfoSimple.ts\";import { EpicEventsTitle } from \"../Epic/EpicEventsTitle.ts\";import { EpicPreviewEventItem } from \"../Epic/EpicPreviewEventItem.ts\";\n\n export interface EpicDetail {banner_title?: {title: string;left_icon: string;right_icon: string;font_color: string;};banner_tabs?: EpicBannerTabItem[];key_metrics?: EpicKeyMetricItem[];selected_spaces?: EpicSpaceItem[];start_time?: number;end_time?: number;rewards?: RewardInfoSimple[];participants?: number;events_title?: EpicEventsTitle;events_tab?: number[];preview_events?: EpicPreviewEventItem[];id?: number;banner_picture_pc: string;banner_picture_mobile: string;default_event_id: number;}"
        },
        {
          "fileName": "EpicConfig",
          "content": "import { EpicEventId } from \"../Epic/EpicEventId.ts\";\n\n export interface EpicConfig {banner_picture_pc: string;banner_picture_mobile: string;epic_id: number;epic_event_ids: EpicEventId[];}"
        }
      ]
    },
    {
      "folderName": "Others",
      "files": [
        {
          "fileName": "TaskonConfig",
          "content": "\n\n export interface TaskonConfig {campaign_min_recharge_amount: todo unknown number;event_min_recharge_amount: todo unknown number;}"
        },
        {
          "fileName": "ReferralCountDetail",
          "content": "\n\n export interface ReferralCountDetail {all_num_count: number;ongoing_num_count: number;upcoming_num_count: number;invitee_count: number;inviter_count: number;}"
        },
        {
          "fileName": "BSideDataType",
          "content": "export type BSideDataType = string;"
        },
        {
          "fileName": "CampaignCountDetail",
          "content": "\n\n export interface CampaignCountDetail {all_num_count: number;ongoing_num_count: number;upcoming_num_count: number;total_participants: number;total_qualifiers: number;total_submitters: number;}"
        },
        {
          "fileName": "AddFailedLogParams",
          "content": "\n\n export interface AddFailedLogParams {method: string;content: string;}"
        },
        {
          "fileName": "WebLinkCheckResult",
          "content": "\n\n export interface WebLinkCheckResult {valid: boolean;link: string;}"
        },
        {
          "fileName": "TraceFromSourceParams",
          "content": "\n\n export interface TraceFromSourceParams {source: string;page: string;}"
        }
      ]
    },
    {
      "folderName": "Download",
      "files": [
        {
          "fileName": "DownloadStatus",
          "content": "export type DownloadStatus = string;"
        },
        {
          "fileName": "DownloadScene",
          "content": "export type DownloadScene = string;"
        }
      ]
    },
    {
      "folderName": "Event",
      "files": [
        {
          "fileName": "CreatorEventListItem",
          "content": "import { CampaignStatus } from \"../Campaign/CampaignStatus.ts\";import { RewardInfo } from \"../Reward/RewardInfo.ts\";import { RewardInfoSimple } from \"../Reward/RewardInfoSimple.ts\";import { ProjectCategory } from \"../User/ProjectCategory.ts\";import { CoHostInviteStatus } from \"../Event/CoHostInviteStatus.ts\";\n\n export interface CreatorEventListItem {event: {id: number;name: string;desc: string;owner_id: number;owner_name: string;owner_avatar: string;owner_address: string;owner_verified: boolean;image: string;recaptcha: boolean;campaign_status: CampaignStatus;is_draft: boolean;is_removed: boolean;is_end: boolean;campaign_level: number;is_landing_campaign: boolean;is_exclusive_campaign: boolean;start_time: todo unknown number;end_time: todo unknown number;qualifier_rewards?: RewardInfo[];winner_rewards?: RewardInfoSimple[];project_category: ProjectCategory;bg_color?: string;is_private: boolean;gas_covered: boolean;has_referral: boolean;is_deposit: boolean;has_trouble_task: boolean;is_completed: boolean;is_event_available: boolean;};invite_status?: CoHostInviteStatus;}"
        },
        {
          "fileName": "CreatorEventList",
          "content": "import { CreatorEventListItem } from \"../Event/CreatorEventListItem.ts\";\n\n export interface CreatorEventList {data: CreatorEventListItem[];total: number;event_count: number;}"
        },
        {
          "fileName": "EventInfoOfCampaign",
          "content": "import { RewardSummary } from \"../Reward/RewardSummary.ts\";\n\n export interface EventInfoOfCampaign {event_id: number;event_name: string;start_time: number;end_time: number;reward_summary: RewardSummary;}"
        },
        {
          "fileName": "EventCoHostInviteResult",
          "content": "import { CoHostInviteStatus } from \"../Event/CoHostInviteStatus.ts\";\n\n export interface EventCoHostInviteResult {invite_status: CoHostInviteStatus;accepted_campaigns: number[];}"
        },
        {
          "fileName": "EventHostSelectedResultItem",
          "content": "import { CampaignListItem } from \"../Campaign/CampaignListItem.ts\";\n\n export interface EventHostSelectedResultItem {host_id: number;host_name: string;host_avatar: string;selected_campaigns?: CampaignListItem[];}"
        },
        {
          "fileName": "UserEventStatus",
          "content": "\n\n export interface UserEventStatus {total_campaign: number;min_complete_count: number;completed_campaign_count: number;total_points: number;your_points: number;completed_campaigns: number[];}"
        },
        {
          "fileName": "EventInviteResult",
          "content": "import { EventHostSelectedResultItem } from \"../Event/EventHostSelectedResultItem.ts\";import { EventCoHostInviteResultItem } from \"../Event/EventCoHostInviteResultItem.ts\";\n\n export interface EventInviteResult {host: EventHostSelectedResultItem;cohost: EventCoHostInviteResultItem[];}"
        },
        {
          "fileName": "EventCoHostInviteResultItem",
          "content": "import { CoHostInviteStatus } from \"../Event/CoHostInviteStatus.ts\";import { CampaignListItem } from \"../Campaign/CampaignListItem.ts\";\n\n export interface EventCoHostInviteResultItem {cohost_id: number;cohost_name: string;cohost_avatar: string;invite_status: CoHostInviteStatus;accepted_campaigns?: CampaignListItem[];}"
        },
        {
          "fileName": "CoHostInviteStatus",
          "content": "export type CoHostInviteStatus = string;"
        },
        {
          "fileName": "GetEventOptions",
          "content": "import { EventHostType } from \"../Event/EventHostType.ts\";import { CampaignStatus } from \"../Campaign/CampaignStatus.ts\";\n\n export interface GetEventOptions {host_type: EventHostType;event_status: CampaignStatus;}"
        },
        {
          "fileName": "EventHostType",
          "content": "export type EventHostType = string;"
        },
        {
          "fileName": "EventLeaderBoard",
          "content": "import { EventLeaderBoardItem } from \"../Event/EventLeaderBoardItem.ts\";\n\n export interface EventLeaderBoard {data: EventLeaderBoardItem[];total: number;start_time: number;end_time: number;}"
        },
        {
          "fileName": "EventLeaderBoardItem",
          "content": "import { CUserBriefInfo } from \"../User/CUserBriefInfo.ts\";\n\n export interface EventLeaderBoardItem {rank: number;user_info: CUserBriefInfo;point: number;reward_amount?: string;winner_layer?: number;reward_type?: string;reward_symbol: string;chain?: string;chain_icon?: string;chain_label?: string;is_usdt_equal: boolean;}"
        },
        {
          "fileName": "ConfirmEventCampaignInviteParams",
          "content": "\n\n export interface ConfirmEventCampaignInviteParams {event_id: number;rejected: boolean;accepted_campaign_ids: number[];}"
        }
      ]
    },
    {
      "folderName": "HomePage",
      "files": [
        {
          "fileName": "AdsListItem",
          "content": "\n\n export interface AdsListItem {id: number;logo: string;poster: string;poster_mobile: string;name: string;description: string;link: string;ad_index: number;}"
        },
        {
          "fileName": "HomepageData",
          "content": "import { CampaignListItem } from \"../Campaign/CampaignListItem.ts\";import { SpaceListItem } from \"../Space/SpaceListItem.ts\";import { ParticipantCampaignListItem } from \"../Campaign/ParticipantCampaignListItem.ts\";import { ParticipantSpaceListItem } from \"../Space/ParticipantSpaceListItem.ts\";\n\n export interface HomepageData {token_amount: string;nft_count: number;whitelist_count: number;trending_campaigns: CampaignListItem[];trending_events: CampaignListItem[];token_reward_campaigns: CampaignListItem[];nft_reward_campaigns: CampaignListItem[];whitelist_reward_campaigns: CampaignListItem[];discover_top_spaces: SpaceListItem[];campaign_count: number;project_count: number;top_campaigns: ParticipantCampaignListItem[];hottest_spaces: ParticipantSpaceListItem[];top_space: ParticipantSpaceListItem[];}"
        }
      ]
    },
    {
      "folderName": "DataAnalysis",
      "files": [
        {
          "fileName": "EventDataObjectList",
          "content": "import { EventDataObject } from \"../DataAnalysis/EventDataObject.ts\";\n\n export interface EventDataObjectList {data: EventDataObject[];total: number;}"
        },
        {
          "fileName": "EventDataObject",
          "content": "import { EventDataObjectType } from \"../DataAnalysis/EventDataObjectType.ts\";\n\n export interface EventDataObject {object_type: EventDataObjectType;object_id: number;object_name: string;}"
        },
        {
          "fileName": "EventDataDetail",
          "content": "\n\n export interface EventDataDetail {event_id: number;event_name: string;start_time: number;end_time: number;total_pv: number;today_pv: number;total_visitors: number;today_visitors: number;total_participants: number;today_participants: number;total_submitters: number;today_submitters: number;total_qualifiers: number;}"
        },
        {
          "fileName": "GetDataSummaryListParams",
          "content": "import { Page } from \"../Common/Page.ts\";\n\n export interface GetDataSummaryListParams {search: string;page: Page;}"
        },
        {
          "fileName": "EventCampaignDataSummaryList",
          "content": "\n\n export interface EventCampaignDataSummaryList {data: object[];total: number;}"
        },
        {
          "fileName": "GetEventCampaignDataSummaryParams",
          "content": "import { Page } from \"../Common/Page.ts\";\n\n export interface GetEventCampaignDataSummaryParams {event_id: number;page: Page;}"
        },
        {
          "fileName": "EventCampaignDataSummary",
          "content": "\n\n export interface EventCampaignDataSummary {campaign_id: number;campaign_name: string;creator_id: number;creator_name: string;start_time: number;end_time: number;total_visitors: number;total_participants: number;total_submitters: number;}"
        },
        {
          "fileName": "GetReferralRewardInviterDataSummaryParams",
          "content": "import { Page } from \"../Common/Page.ts\";\n\n export interface GetReferralRewardInviterDataSummaryParams {referral_reward_id: number;page: Page;}"
        },
        {
          "fileName": "GetReferralRewardTrendDataParams",
          "content": "import { DateRange } from \"../Common/DateRange.ts\";\n\n export interface GetReferralRewardTrendDataParams {referral_reward_id: number;date: DateRange;}"
        },
        {
          "fileName": "ReferralRewardInviterDataSummaryList",
          "content": "import { ReferralRewardInviterDataSummary } from \"../DataAnalysis/ReferralRewardInviterDataSummary.ts\";\n\n export interface ReferralRewardInviterDataSummaryList {data: ReferralRewardInviterDataSummary[];total: number;}"
        },
        {
          "fileName": "ReferralRewardInviterDataSummary",
          "content": "import { ReferralTarget } from \"../ReferralReward/ReferralTarget.ts\";\n\n export interface ReferralRewardInviterDataSummary {inviter_id: number;inviter_name: string;inviter_address: string;referral_target: ReferralTarget;visitors: number;participants: number;invitees: number;}"
        },
        {
          "fileName": "ReferralRewardTrendData",
          "content": "\n\n export interface ReferralRewardTrendData {pv: number;inviters: number;participants: number;invitees: number;task_submitters: number;date: number;}"
        },
        {
          "fileName": "ReferralRewardDataDetail",
          "content": "\n\n export interface ReferralRewardDataDetail {referral_reward_id: number;referral_reward_name: string;total_pv: number;today_pv: number;total_inviters: number;today_inviters: number;total_participants: number;today_participants: number;total_invitees: number;today_invitees: number;start_time: number;end_time: number;}"
        },
        {
          "fileName": "EventTrendDataList",
          "content": "import { EventTrendData } from \"../DataAnalysis/EventTrendData.ts\"; export type EventTrendDataList = EventTrendData[];"
        },
        {
          "fileName": "EventTrentParticipantData",
          "content": "import { EventDataObjectType } from \"../DataAnalysis/EventDataObjectType.ts\";\n\n export interface EventTrentParticipantData {object_type: EventDataObjectType;object_name: string;participants: number;}"
        },
        {
          "fileName": "EventDataObjectType",
          "content": "export type EventDataObjectType = string;"
        },
        {
          "fileName": "EventTrendData",
          "content": "import { EventTrentParticipantData } from \"../DataAnalysis/EventTrentParticipantData.ts\";\n\n export interface EventTrendData {participants: number;participant_details: EventTrentParticipantData[];date: number;}"
        },
        {
          "fileName": "GetEventTrendDataParams",
          "content": "import { DateRange } from \"../Common/DateRange.ts\";import { EventDataObject } from \"../DataAnalysis/EventDataObject.ts\";\n\n export interface GetEventTrendDataParams {event_id: number;date: DateRange;data_objects?: EventDataObject[];}"
        },
        {
          "fileName": "GetCampaignTrendDataParams",
          "content": "import { DateRange } from \"../Common/DateRange.ts\";\n\n export interface GetCampaignTrendDataParams {campaign_id: number;date: DateRange;}"
        },
        {
          "fileName": "CampaignTrendDataList",
          "content": "import { CampaignTrendData } from \"../DataAnalysis/CampaignTrendData.ts\"; export type CampaignTrendDataList = CampaignTrendData[];"
        },
        {
          "fileName": "CampaignTrendData",
          "content": "\n\n export interface CampaignTrendData {visitors: number;participants: number;submitters: number;task_submitters: number;date: number;}"
        },
        {
          "fileName": "CampaignDataDetail",
          "content": "\n\n export interface CampaignDataDetail {campaign_id: number;campaign_name: string;total_pv: number;today_pv: number;total_visitors: number;today_visitors: number;total_participants: number;today_participants: number;total_submitters: number;today_submitters: number;total_qualifiers: number;start_time: number;end_time: number;}"
        },
        {
          "fileName": "ReferralRewardDataSummaryList",
          "content": "import { ReferralRewardDataSummary } from \"../DataAnalysis/ReferralRewardDataSummary.ts\";\n\n export interface ReferralRewardDataSummaryList {data: ReferralRewardDataSummary[];total: number;}"
        },
        {
          "fileName": "ReferralRewardDataSummary",
          "content": "\n\n export interface ReferralRewardDataSummary {referral_reward_id: number;referral_reward_name: string;start_time: number;end_time: number;total_inviters: number;total_invitees: number;}"
        },
        {
          "fileName": "EventDataSummaryList",
          "content": "import { EventDataSummary } from \"../DataAnalysis/EventDataSummary.ts\";\n\n export interface EventDataSummaryList {data: EventDataSummary[];total: number;}"
        },
        {
          "fileName": "EventDataSummary",
          "content": "\n\n export interface EventDataSummary {event_id: number;event_name: string;start_time: number;end_time: number;total_visitors: number;total_participants: number;total_submitters: number;}"
        },
        {
          "fileName": "CampaignDataSummaryList",
          "content": "import { CampaignDataSummary } from \"../DataAnalysis/CampaignDataSummary.ts\";\n\n export interface CampaignDataSummaryList {data: CampaignDataSummary[];total: number;}"
        },
        {
          "fileName": "CampaignDataSummary",
          "content": "\n\n export interface CampaignDataSummary {campaign_id: number;campaign_name: string;start_time: number;end_time: number;total_visitors: number;total_participants: number;total_submitters: number;}"
        },
        {
          "fileName": "SpaceDataSummary",
          "content": "\n\n export interface SpaceDataSummary {space_id: number;total_visitors: number;today_visitors: number;total_participants: number;today_participants: number;total_followers: number;today_followers: number;total_campaigns: number;ongoing_campaigns: number;}"
        }
      ]
    },
    {
      "folderName": "AirdropProject",
      "files": [
        {
          "fileName": "AirdropProjectListItemNetwork",
          "content": "import { Chain } from \"../Common/Chain.ts\";\n\n export interface AirdropProjectListItemNetwork {icon: string;name: Chain;}"
        },
        {
          "fileName": "AirdropNetwork",
          "content": "\n\n export interface AirdropNetwork {icon: string;name: string;}"
        },
        {
          "fileName": "AirdropProjectDetail",
          "content": "import { AirdropNetwork } from \"../AirdropProject/AirdropNetwork.ts\";import { SimilarProjectItem } from \"../AirdropProject/SimilarProjectItem.ts\";\n\n export interface AirdropProjectDetail {project_id: number;owner_id: number;name: string;image: string;description: string;category: string;total_fund_raised: string;percentage_of_ico: string;network: AirdropNetwork[];similar_projects: SimilarProjectItem[];similar_projects_airdropped: number;unique_active_wallet: number;tvl: string;volume: string;tasks: object[];}"
        },
        {
          "fileName": "AirdropProjectListItem",
          "content": "import { SimilarProjectItem } from \"../AirdropProject/SimilarProjectItem.ts\";\n\n export interface AirdropProjectListItem {project_id: number;name: string;image: string;category: string;total_fund_raised: string;percentage_of_ico: string;participants: number;similar_projects: SimilarProjectItem[];similar_projects_airdropped: number;total_fund_raised_num: number;}"
        },
        {
          "fileName": "SimilarProjectItem",
          "content": "\n\n export interface SimilarProjectItem {id: number;name: string;image: string;category: string;fund_raised: string;airdrop_value: number;}"
        }
      ]
    },
    {
      "folderName": "Kol",
      "files": [
        {
          "fileName": "PublishStatus",
          "content": "export type PublishStatus = string;"
        },
        {
          "fileName": "CUserType",
          "content": "export type CUserType = string;"
        },
        {
          "fileName": "KolChannel",
          "content": "export type KolChannel = string;"
        },
        {
          "fileName": "CampaignKolListItem",
          "content": "import { KolChannelListItem } from \"../Kol/KolChannelListItem.ts\";import { Page } from \"../Common/Page.ts\";\n\n export interface CampaignKolListItem {campaign_id: number;campaign_name: string;kol_datas: KolChannelListItem[];page: Page;}"
        },
        {
          "fileName": "CampaignDistribution",
          "content": "\n\n export interface CampaignDistribution {campaign_name: string;start_time: number;end_time: number;channels: number;visitors: number;participants: number;submitters: number;campaign_id: number;}"
        },
        {
          "fileName": "KolTrafficCac",
          "content": "import { KolChannel } from \"../Kol/KolChannel.ts\";\n\n export interface KolTrafficCac {kol_handle: string;channel: KolChannel;nature_traffic: number;cac: string;cost: todo unknown number;}"
        },
        {
          "fileName": "KolHandleAndCost",
          "content": "import { KolChannel } from \"../Kol/KolChannel.ts\";import { KolHandleAndCostItem } from \"../Kol/KolHandleAndCostItem.ts\";\n\n export interface KolHandleAndCost {channel: KolChannel;kol_handle_cost: KolHandleAndCostItem[];}"
        },
        {
          "fileName": "CampaignKolTrendInfo",
          "content": "import { TrendItem } from \"../Kol/TrendItem.ts\";\n\n export interface CampaignKolTrendInfo {views?: number;visitors: number;participants: number;submitter: number;update_at: number;values: TrendItem[];}"
        },
        {
          "fileName": "TrendItem",
          "content": "\n\n export interface TrendItem {date: string;value: number;kol_ongoing_campaigns?: number;}"
        },
        {
          "fileName": "KolHandleAndCostItem",
          "content": "import { KolChannel } from \"../Kol/KolChannel.ts\";\n\n export interface KolHandleAndCostItem {kol_handle: string;cost?: todo unknown number;id: number;channel: KolChannel;}"
        },
        {
          "fileName": "KolChannelListItem",
          "content": "import { PublishStatus } from \"../Kol/PublishStatus.ts\";\n\n export interface KolChannelListItem {id: number;channel: string;kol_handle: string;link: string;status: PublishStatus;pv: number;total_participants: number;total_submitters: number;kol_id: string;is_created_by_auditor: boolean;auditor_user_id: number;}"
        }
      ]
    },
    {
      "folderName": "Jira_connection",
      "files": [
        {
          "fileName": "ActionTaskonAwardWeeklyGoalByCreditTicket",
          "content": "export type ActionTaskonAwardWeeklyGoalByCreditTicket = string;"
        },
        {
          "fileName": "ActionTaskonDistributeEntityRewardsTicket",
          "content": "export type ActionTaskonDistributeEntityRewardsTicket = string;"
        },
        {
          "fileName": "ActionTaskonRewardDistributionIssueTicket",
          "content": "export type ActionTaskonRewardDistributionIssueTicket = string;"
        },
        {
          "fileName": "ActionTaskonReferralConfirmTicket",
          "content": "export type ActionTaskonReferralConfirmTicket = string;"
        }
      ]
    },
    {
      "folderName": "Credits",
      "files": [
        {
          "fileName": "CreditHistoryDetailContent",
          "content": ""
        },
        {
          "fileName": "CreditTokenRewardContent",
          "content": "\n\n export interface CreditTokenRewardContent {token_amount: string;}"
        },
        {
          "fileName": "CreditCampaignSubmittersContent",
          "content": "\n\n export interface CreditCampaignSubmittersContent {submitters_number: number;}"
        },
        {
          "fileName": "SpaceCreditHistoryDetail",
          "content": "import { CreditType } from \"../Credits/CreditType.ts\";import { CampaignType } from \"../Campaign/CampaignType.ts\";import { CreditHistoryDetailContent } from \"../Credits/CreditHistoryDetailContent.ts\";\n\n export interface SpaceCreditHistoryDetail {credits: todo unknown number;credit_type: CreditType;invited_name?: string;invited_id?: number;campaign_name?: string;campaign_id?: number;campaign_type?: CampaignType;referral_reward_id?: number;desc: string;submitted_material?: string;timestamp: number;content?: CreditHistoryDetailContent;}"
        },
        {
          "fileName": "DidNotDistributeRewardReport",
          "content": "\n\n export interface DidNotDistributeRewardReport {can_report: boolean;reported: boolean;reported_time: number;report_handled: boolean;distribute_time: number;}"
        },
        {
          "fileName": "SpaceHasGotCredits",
          "content": "\n\n export interface SpaceHasGotCredits {complete_b_user_profile_info: boolean;}"
        },
        {
          "fileName": "CreditType",
          "content": "export type CreditType = string;"
        },
        {
          "fileName": "CreditHistory",
          "content": "import { CreditHistoryItem } from \"../Credits/CreditHistoryItem.ts\";\n\n export interface CreditHistory {data: CreditHistoryItem[];total: number;credits: number;}"
        },
        {
          "fileName": "CreditHistoryItem",
          "content": "import { CreditType } from \"../Credits/CreditType.ts\";import { CreditHistoryDetailContent } from \"../Credits/CreditHistoryDetailContent.ts\";\n\n export interface CreditHistoryItem {id: number;credit_type: CreditType;credits: string;timestamp: todo unknown number;content: CreditHistoryDetailContent;}"
        },
        {
          "fileName": "SpaceCreditInfo",
          "content": "\n\n export interface SpaceCreditInfo {credits: string;rank: todo unknown number;highest_credits: string;}"
        },
        {
          "fileName": "CreditConfigInfo",
          "content": "import { RangeConfig } from \"../Common/RangeConfig.ts\";\n\n export interface CreditConfigInfo {complete_b_user_profile_info: string;publish_first_campaign_without_token_deposited: string;publish_first_campaign_with_token_deposited: string;publish_campaign_without_token_deposited: string;publish_campaign_with_token_deposited: string;campaign_submitters_without_token_deposited: RangeConfig;campaign_submitters_with_token_deposited: RangeConfig;campaign_with_task_on_social_task_multiplier: string;publish_first_event_with_token_deposited: string;publish_first_event_without_token_deposited: string;publish_event_with_token_deposited: string;publish_event_without_token_deposited: string;event_submitters_without_token_deposited: RangeConfig;event_submitters_with_token_deposited: RangeConfig;event_with_co_host_multiplier: string;token_reward: RangeConfig;referral_new_b_user: string;register_via_referral: string;credit_from_referred_user_campaign_multiplier: string;submit_bug: string;submit_feature: string;did_not_upload_task_qualifiers_on_time: string;did_not_upload_campaign_winners_on_time: string;did_not_upload_campaign_reward_allocate_on_time: string;did_not_distribute_rewards_on_time: string;home_page_banner_cost: string;explorer_banner_cost: string;tweet_by_campaign_account_cost: string;tweet_by_official_account_cost: string;retweet_by_campaign_account_cost: string;retweet_by_official_account_cost: string;telegram_shout_out_cost: string;discord_shout_out_cost: string;discord_radio_show_cost: string;partnership_announcement_cost: string;weekly_recommend_cost: string;monthly_report_cost: string;quarterly_report_cost: string;annual_report_cost: string;matching_partner_cost: string;tasks_limits_in_campaign: RangeConfig;twitters_limits_in_campaign: RangeConfig;follow_twitter_limits_in_campaign: RangeConfig;on_chain_template_limits: RangeConfig;transaction_template_limits: RangeConfig;transaction_volume_limits: RangeConfig;earlier_access_to_new_features: string;advance_modules: string;web3_growth_reports: string;priority_customer_support: string;professional_analysis_function: string;gas_sponsor: string;token_reward_sponsor: string;customized_on_chain_task_template: string;follow_twitter_limitsin_campaign: string;deposit_token_or_nft: string;distribute_campaign: string;mint_nft_collection: string;use_taskon_airdrop_tool: string;}"
        }
      ]
    },
    {
      "folderName": "NFTCollection",
      "files": [
        {
          "fileName": "BMintNftStatus",
          "content": "export type BMintNftStatus = string;"
        },
        {
          "fileName": "BMintNftUserRewardListItem",
          "content": "import { BMintNftStatus } from \"../NFTCollection/BMintNftStatus.ts\";import { MediaType } from \"../Common/MediaType.ts\";\n\n export interface BMintNftUserRewardListItem {collection_id: number;collection_image: string;collection_name: string;distribute_id: number;reward_id?: number;start_time: number;end_time: number;quantity: number;status: BMintNftStatus;media_type: MediaType;chain: string;}"
        },
        {
          "fileName": "CollectionDetail",
          "content": "import { MediaType } from \"../Common/MediaType.ts\";\n\n export interface CollectionDetail {properties: string;description: string;name: string;max_supply: number;is_max_supply: boolean;open_property: boolean;is_draft: boolean;transferable: boolean;chain: string;media_type: MediaType;media_url: string;collection_id: number;can_burn: boolean;nft_contract_address: string;nft_cdn_image: string;token_uri: string;}"
        },
        {
          "fileName": "BMintNftCollectionValue",
          "content": "import { NftType } from \"../Common/NftType.ts\";import { MediaType } from \"../Common/MediaType.ts\";\n\n export interface BMintNftCollectionValue {collection_id: number;collection_name: string;collection_address: string;available_amount: number;is_unlimited: boolean;campaign_locked_amount: number;nft_type: NftType;nft_cdn_image: string;media_type: MediaType;chain: string;chain_label: string;}"
        },
        {
          "fileName": "AirdropAddressResult",
          "content": "\n\n export interface AirdropAddressResult {excel_url: string;address: string[];entry_address: string;address_amount: number;total_airdrop_amount: number;user_reward_nft_amount: number;update_time: number;token_uri: string;airdrop_limit_per_tx: number;}"
        },
        {
          "fileName": "BMintNftBuySigResp",
          "content": "\n\n export interface BMintNftBuySigResp {user_id: number;distribute_id: number;signature: string;nft_address: string;entry_address: string;limit: number;total_limit: number;nonce: number;token_uri: string;price: string;payout_addr: string;}"
        },
        {
          "fileName": "BMintNftClaimSigResp",
          "content": "\n\n export interface BMintNftClaimSigResp {user_id: number;distribute_id: number;signature: string;nft_address: string;entry_address: string;limit: number;total_limit: number;nonce: number;token_uri: string;}"
        },
        {
          "fileName": "DistributeDetail",
          "content": "import { DistributeType } from \"../NFTCollection/DistributeType.ts\";\n\n export interface DistributeDetail {total_quantity: number;claimed_quantity: number;start_time: number;end_time: number;drop_param: string;distribute_type: DistributeType;}"
        },
        {
          "fileName": "MintParams",
          "content": "\n\n export interface MintParams {chain: string;price: string;payout_addr: string;}"
        },
        {
          "fileName": "SetBMintDIstributeParam",
          "content": "import { DistributeType } from \"../NFTCollection/DistributeType.ts\";\n\n export interface SetBMintDIstributeParam {collection_id: number;name: string;desc: string;drop_start: number;drop_end: number;is_draft: boolean;count_per_user: number;file_url: string;drop_param: string;distribute_type: DistributeType;is_max_supply: boolean;distribute_id: number;}"
        },
        {
          "fileName": "SetCollectionParams",
          "content": "import { MediaType } from \"../Common/MediaType.ts\";\n\n export interface SetCollectionParams {properties: string;description: string;collection_name: string;max_supply: number;is_max_supply: boolean;open_property: boolean;is_draft: boolean;transferable: boolean;chain: string;media_type: MediaType;media_url: string;collection_id: number;can_burn: boolean;}"
        },
        {
          "fileName": "MintNftAvaliableInfo",
          "content": "\n\n export interface MintNftAvaliableInfo {collection_id: number;collection_name: string;collection_address: string;nft_type: string;available_number: number;}"
        },
        {
          "fileName": "DistributeListItem",
          "content": "import { DistributeType } from \"../NFTCollection/DistributeType.ts\";\n\n export interface DistributeListItem {collection_name: string;distribute_type: DistributeType;quantity_count: number;distribute_id: number;create_time: number;count_of_each_address: number;is_draft: boolean;chain: string;collection_id: number;}"
        },
        {
          "fileName": "CollectionListItem",
          "content": "import { DistributeType } from \"../NFTCollection/DistributeType.ts\";\n\n export interface CollectionListItem {collection_id: number;name: string;nft_contract_address: string;is_draft: boolean;is_creating: boolean;max_supply: number;is_max_supply: boolean;distribute_type: DistributeType;distribute_id: number;chain: string;available_count: number;}"
        },
        {
          "fileName": "SetCollectionParamsValue",
          "content": "import { PropertyItem } from \"../NFTCollection/PropertyItem.ts\";import { MediaType } from \"../Common/MediaType.ts\";\n\n export interface SetCollectionParamsValue {properties: PropertyItem[];description: string;collection_name: string;max_supply: number;is_max_supply: boolean;open_property: boolean;is_draft: boolean;transferable: boolean;chain: string;media_type: MediaType;media_url: string;collection_id: number;can_burn: boolean;}"
        },
        {
          "fileName": "PropertyItem",
          "content": "\n\n export interface PropertyItem {key: number;value: string;type: string;}"
        },
        {
          "fileName": "DistributeType",
          "content": "export type DistributeType = string;"
        },
        {
          "fileName": "ReceiverAddressItem",
          "content": "\n\n export interface ReceiverAddressItem {id: number;address: string;}"
        }
      ]
    },
    {
      "folderName": "ReferralReward",
      "files": [
        {
          "fileName": "ReferralRewardWinnerLayerInfo",
          "content": "import { WinnerRankRange } from \"../Winner/WinnerRankRange.ts\";import { RewardsDistributeType } from \"../Reward/RewardsDistributeType.ts\";\n\n export interface ReferralRewardWinnerLayerInfo {reward_amount: string;winner_rink_range: WinnerRankRange;min_number?: number;reward_distribute_type: RewardsDistributeType;}"
        },
        {
          "fileName": "CreatorReferralRewardList",
          "content": "import { ReferralRewardListItem } from \"../ReferralReward/ReferralRewardListItem.ts\";\n\n export interface CreatorReferralRewardList {list: ReferralRewardListItem[];total: number;}"
        },
        {
          "fileName": "ReferralRewardListItem",
          "content": "import { ReferralTarget } from \"../ReferralReward/ReferralTarget.ts\";import { ReferralRewardStatus } from \"../ReferralReward/ReferralRewardStatus.ts\";import { RewardInfo } from \"../Reward/RewardInfo.ts\";\n\n export interface ReferralRewardListItem {referral_id: number;name: string;referral_target: ReferralTarget;is_draft: boolean;status: ReferralRewardStatus;total_reward_amount: string;reward: RewardInfo;total_inviter: number;total_invitee: number;}"
        },
        {
          "fileName": "ReferralRewardStatus",
          "content": "export type ReferralRewardStatus = string;"
        },
        {
          "fileName": "ReferralRewardInviterList",
          "content": "import { ReferralRewardInviterItem } from \"../ReferralReward/ReferralRewardInviterItem.ts\";\n\n export interface ReferralRewardInviterList {data: ReferralRewardInviterItem[];total_inviter: number;total_invitee: number;}"
        },
        {
          "fileName": "ReferralRewardInviteeList",
          "content": "import { ReferralRewardInviteeItem } from \"../ReferralReward/ReferralRewardInviteeItem.ts\";\n\n export interface ReferralRewardInviteeList {data: ReferralRewardInviteeItem[];total: number;}"
        },
        {
          "fileName": "ReferralRewardInviteeItem",
          "content": "\n\n export interface ReferralRewardInviteeItem {user_id: number;user_name: string;submit_time: number;}"
        },
        {
          "fileName": "ReferralRewardReportInfo",
          "content": "import { ReferralRewardStatus } from \"../ReferralReward/ReferralRewardStatus.ts\";import { ReferralTarget } from \"../ReferralReward/ReferralTarget.ts\";import { RewardInfo } from \"../Reward/RewardInfo.ts\";import { ReferralRewardWinnerLayerInfo } from \"../ReferralReward/ReferralRewardWinnerLayerInfo.ts\";import { DidNotDistributeRewardReport } from \"../Credits/DidNotDistributeRewardReport.ts\";\n\n export interface ReferralRewardReportInfo {referral_id: number;name: string;desc?: string;is_draft: boolean;status: ReferralRewardStatus;referral_target: ReferralTarget;total_reward_amount: string;reward: RewardInfo;winner_layers: ReferralRewardWinnerLayerInfo[];reward_reported: DidNotDistributeRewardReport;}"
        },
        {
          "fileName": "ReferralRewardInviterItem",
          "content": "\n\n export interface ReferralRewardInviterItem {ranking: number;user_id: number;user_name: string;address: string;invited_number: number;reward_amount: string;}"
        },
        {
          "fileName": "ReferralRewardInfo",
          "content": "import { ReferralRewardStatus } from \"../ReferralReward/ReferralRewardStatus.ts\";import { ReferralTarget } from \"../ReferralReward/ReferralTarget.ts\";import { RewardInfo } from \"../Reward/RewardInfo.ts\";import { ReferralRewardWinnerLayerInfo } from \"../ReferralReward/ReferralRewardWinnerLayerInfo.ts\";import { MyRankingInfo } from \"../ReferralReward/MyRankingInfo.ts\";import { LeaderboardInfo } from \"../ReferralReward/LeaderboardInfo.ts\";import { DidNotDistributeRewardReport } from \"../Credits/DidNotDistributeRewardReport.ts\";import { RewardValueInfo } from \"../Reward/RewardValueInfo.ts\";\n\n export interface ReferralRewardInfo {referral_id: number;owner_id: number;owner_name: string;name: string;desc?: string;is_draft: boolean;status: ReferralRewardStatus;referral_target: ReferralTarget;total_reward_amount: string;reward: RewardInfo;winner_layers: ReferralRewardWinnerLayerInfo[];my_ranking?: MyRankingInfo;leaderboard: LeaderboardInfo;reward_reported?: DidNotDistributeRewardReport;user_reward_reported: boolean;my_rewards?: RewardValueInfo[];}"
        },
        {
          "fileName": "LeaderboardInfo",
          "content": "import { LeaderboardItem } from \"../ReferralReward/LeaderboardItem.ts\";\n\n export interface LeaderboardInfo {inviters: LeaderboardItem[];total_inviters: number;median_invited_number: number;}"
        },
        {
          "fileName": "LeaderboardItem",
          "content": "\n\n export interface LeaderboardItem {user_avatar: string;user_name: string;user_id: number;invited_number: number;}"
        },
        {
          "fileName": "MyRankingInfo",
          "content": "\n\n export interface MyRankingInfo {ranking: number;invited_number: number;layer_level: number;addition_number: number;reward_amount: string;}"
        },
        {
          "fileName": "SetReferralRewardParams",
          "content": "import { ReferralTarget } from \"../ReferralReward/ReferralTarget.ts\";import { RewardInfo } from \"../Reward/RewardInfo.ts\";import { ReferralRewardWinnerLayerInfo } from \"../ReferralReward/ReferralRewardWinnerLayerInfo.ts\";import { LockedAssetInReward } from \"../Asset/LockedAssetInReward.ts\";\n\n export interface SetReferralRewardParams {referral_id: number;name: string;owner_id: number;desc?: string;is_draft: boolean;referral_target: ReferralTarget;total_reward_amount: string;reward: RewardInfo;winner_layers: ReferralRewardWinnerLayerInfo[];locked_asset?: LockedAssetInReward;}"
        },
        {
          "fileName": "ReferralTarget",
          "content": "import { ReferralType } from \"../ReferralReward/ReferralType.ts\";import { CampaignType } from \"../Campaign/CampaignType.ts\";\n\n export interface ReferralTarget {target_type: ReferralType;target_id: number;target_name: string;campaign_type?: CampaignType;}"
        },
        {
          "fileName": "ReferralType",
          "content": "export type ReferralType = string;"
        }
      ]
    },
    {
      "folderName": "Airdrop",
      "files": [
        {
          "fileName": "TokenDetailInfo",
          "content": "\n\n export interface TokenDetailInfo {wallet_address: string;token_amount: string;}"
        },
        {
          "fileName": "CampaignAirdropFormDetail",
          "content": "import { AirdropTemplateType } from \"../Airdrop/AirdropTemplateType.ts\";\n\n export interface CampaignAirdropFormDetail {airdrop_type: AirdropTemplateType;detail: todo unknown undefined;}"
        },
        {
          "fileName": "AirdropTemplateType",
          "content": "export type AirdropTemplateType = string;"
        },
        {
          "fileName": "AirdropObject",
          "content": "import { AirdropTemplateType } from \"../Airdrop/AirdropTemplateType.ts\";import { AirdropListStatus } from \"../Airdrop/AirdropListStatus.ts\";import { NftType } from \"../Common/NftType.ts\";\n\n export interface AirdropObject {draft_id: number;airdrop_type: AirdropTemplateType;chain: string;token_name: string;token_address: string;nft_name: string;nft_address: string;file_url: string;file_name: string;address_count: number;status: AirdropListStatus;update_time: number;nft_type: NftType;token_from_list: boolean;total_token_amount: string;gas_estimation: string;token_details_list: object[];nft_details_list: object[];token_decimals: todo unknown number;winner_file_list: string;}"
        },
        {
          "fileName": "NftAirDropParams",
          "content": "import { NftType } from \"../Common/NftType.ts\";\n\n export interface NftAirDropParams {chain: string;nft_address: string;nft_collection_name: string;nft_type: NftType;file_url: string;draft_id: number;file_name: string;address_count: number;campaign_id?: todo unknown number;}"
        },
        {
          "fileName": "TokenAirDropParams",
          "content": "\n\n export interface TokenAirDropParams {file_url: string;draft_id: number;chain: string;token_name: string;token_address: string;token_decimals: number;icon?: string;file_name: string;address_count: number;}"
        },
        {
          "fileName": "AirdropList",
          "content": "import { AirdropListItem } from \"../Airdrop/AirdropListItem.ts\";\n\n export interface AirdropList {data: AirdropListItem[];total: number;}"
        },
        {
          "fileName": "AirdropType",
          "content": "export type AirdropType = string;"
        },
        {
          "fileName": "AirdropListStatus",
          "content": "export type AirdropListStatus = string;"
        },
        {
          "fileName": "CampaignNftAirdropDetail",
          "content": "\n\n export interface CampaignNftAirdropDetail {address_no: number;total_token_amount: number;total_gas_estimated: string;nft_collection_name: string;chain: string;nft_type: string;winner_list_file: string;draft_id: number;}"
        },
        {
          "fileName": "AirdropListItem",
          "content": "import { AirdropTemplateType } from \"../Airdrop/AirdropTemplateType.ts\";import { Chain } from \"../Common/Chain.ts\";import { AirdropListStatus } from \"../Airdrop/AirdropListStatus.ts\";\n\n export interface AirdropListItem {airdrop_type: AirdropTemplateType;draft_id: number;update_time: number;amount: string;chain: Chain;receiver_no: number;campaign_name: string;campaign_id: number;status: AirdropListStatus;token_name: string;collection_name: string;chain_label: string;}"
        },
        {
          "fileName": "NftAirdropDetail",
          "content": "import { NftType } from \"../Common/NftType.ts\";import { AirdropListStatus } from \"../Airdrop/AirdropListStatus.ts\";\n\n export interface NftAirdropDetail {address_count: number;total_token_amount: number;total_gas_estimated: string;nft_collection_name: string;nft_contract_address: string;chain: string;nft_type: NftType;detail: object[];status: AirdropListStatus;draft_id: number;winner_file_list: string;}"
        },
        {
          "fileName": "TokenAirdropDetail",
          "content": "import { TokenDetailInfo } from \"../Airdrop/TokenDetailInfo.ts\";import { AirdropListStatus } from \"../Airdrop/AirdropListStatus.ts\";\n\n export interface TokenAirdropDetail {address_count: number;total_token_amount: string;total_gas_estimated: string;token_address: string;token_decimals: number;token_name: string;chain: string;detail: TokenDetailInfo[];status: AirdropListStatus;draft_id: number;}"
        }
      ]
    },
    {
      "folderName": "ApiTemplateValue",
      "files": [
        {
          "fileName": "ValueRequirementRangeType",
          "content": "export type ValueRequirementRangeType = string;"
        },
        {
          "fileName": "FormValueTime",
          "content": "\n\n export interface FormValueTime {start_time: number;end_time: number;repeat_period: number;}"
        },
        {
          "fileName": "FormValueValueRequirement",
          "content": "import { ValueRequirementValueType } from \"../ApiTemplateValue/ValueRequirementValueType.ts\";import { ValueRequirementRangeType } from \"../ApiTemplateValue/ValueRequirementRangeType.ts\";\n\n export interface FormValueValueRequirement {value_min: string;value_max: string;times: number;value_type: ValueRequirementValueType;range_type: ValueRequirementRangeType;}"
        },
        {
          "fileName": "ValueRequirementValueType",
          "content": "export type ValueRequirementValueType = string;"
        },
        {
          "fileName": "FormValueNumber",
          "content": "export type FormValueNumber = number;"
        },
        {
          "fileName": "FormValueAddress",
          "content": "export type FormValueAddress = string;"
        },
        {
          "fileName": "FormValueToken",
          "content": "export type FormValueToken = string;"
        },
        {
          "fileName": "FormValueNft",
          "content": "export type FormValueNft = string;"
        },
        {
          "fileName": "FormValueNetwork",
          "content": "export type FormValueNetwork = string;"
        },
        {
          "fileName": "FormValueUrl",
          "content": "export type FormValueUrl = string;"
        },
        {
          "fileName": "FormValueText",
          "content": "export type FormValueText = string;"
        },
        {
          "fileName": "TemplateFormValueItem",
          "content": ""
        }
      ]
    },
    {
      "folderName": "SNS",
      "files": [
        {
          "fileName": "GetTwitterAuthStateResult",
          "content": "\n\n export interface GetTwitterAuthStateResult {auth_state: boolean;state: string;}"
        },
        {
          "fileName": "GetTwitterAuthStateParams",
          "content": "\n\n export interface GetTwitterAuthStateParams {state: string;token: string;}"
        }
      ]
    },
    {
      "folderName": "Login",
      "files": [
        {
          "fileName": "LoginResult",
          "content": "import { CommunityInfo } from \"../TaskOnCommunity/CommunityInfo.ts\";\n\n export interface LoginResult {token: string;is_new_register: boolean;is_b_side_user: boolean;created_community_list?: CommunityInfo[];}"
        },
        {
          "fileName": "AuthResponse",
          "content": "\n\n export interface AuthResponse {ver: string;type: string;nonce: string;did: string;proof: {type: string;verificationMethod: string;created: number;value: string;};VPs: string[];}"
        },
        {
          "fileName": "AuthChallenge",
          "content": "\n\n export interface AuthChallenge {ver: string;type: string;nonce: string;server: {name: string;icon: string;url: string;did: string;verificationMethod: string;};chain: string[];alg: string[];VCFilters: object[];}"
        },
        {
          "fileName": "AuthRequest",
          "content": "\n\n export interface AuthRequest {ver: string;type: string;action: number;}"
        }
      ]
    }
  ],
  "apis": []
}
